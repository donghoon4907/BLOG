{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\nimport { useInput } from \"../../hooks\";\nimport { logInMutation } from \"../../graphql/auth/mutation/login\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { setAccessToken } from \"../../lib/token\";\nimport { useVssDispatch, SET_LOGIN_MODAL, SET_ME } from \"../../context\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\n\nvar SignInContainer = function SignInContainer() {\n  _s();\n\n  var dispatch = useVssDispatch();\n\n  var _useLazyQuery = useLazyQuery(meQuery),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      me = _useLazyQuery2[0],\n      data = _useLazyQuery2[1].data;\n\n  var _useMutation = useMutation(logInMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var email = useInput(\"\");\n  var pwd = useInput(\"\");\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$login, logIn, _JSON$parse, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!loading) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return login({\n                variables: {\n                  email: email.value,\n                  pwd: pwd.value\n                }\n              });\n\n            case 6:\n              _yield$login = _context.sent;\n              logIn = _yield$login.data.logIn;\n\n              if (logIn) {\n                setAccessToken(logIn);\n                dispatch({\n                  type: SET_LOGIN_MODAL,\n                  payload: false\n                });\n                me();\n              }\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              _JSON$parse = JSON.parse(_context.t0.message), message = _JSON$parse.message;\n              alert(message);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [email.value, pwd.value, loading]);\n  useEffect(function () {\n    if (data && data.getMyProfile) {\n      var _data$getMyProfile = data.getMyProfile,\n          id = _data$getMyProfile.id,\n          nickname = _data$getMyProfile.nickname,\n          _email = _data$getMyProfile.email,\n          avatar = _data$getMyProfile.avatar,\n          isMaster = _data$getMyProfile.isMaster;\n      console.log(isMaster);\n      dispatch({\n        type: SET_ME,\n        id: id,\n        nickname: nickname,\n        email: _email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  }, [data, dispatch]);\n  return __jsx(SignInPresenter, {\n    loading: loading,\n    email: email,\n    pwd: pwd,\n    onSubmit: handleSubmit\n  });\n};\n\n_s(SignInContainer, \"cEXl1RtNS14ZeYNs7/u2oyiHhvo=\", false, function () {\n  return [useVssDispatch, useLazyQuery, useMutation, useInput, useInput];\n});\n\n_c = SignInContainer;\nexport default SignInContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/auth/SignInContainer.tsx"],"names":["React","useEffect","useCallback","useMutation","useLazyQuery","useInput","logInMutation","SignInPresenter","setAccessToken","useVssDispatch","SET_LOGIN_MODAL","SET_ME","meQuery","SignInContainer","dispatch","me","data","login","loading","email","pwd","handleSubmit","e","preventDefault","alert","variables","value","logIn","type","payload","JSON","parse","message","getMyProfile","id","nickname","avatar","isMaster","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, FormEvent, FC } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\nimport { useInput } from \"../../hooks\";\nimport { logInMutation } from \"../../graphql/auth/mutation/login\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { setAccessToken } from \"../../lib/token\";\nimport { useVssDispatch, SET_LOGIN_MODAL, SET_ME } from \"../../context\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\n\nconst SignInContainer: FC = () => {\n  const dispatch = useVssDispatch();\n  const [me, { data }] = useLazyQuery(meQuery);\n  const [login, { loading }] = useMutation(logInMutation);\n\n  const email = useInput(\"\");\n  const pwd = useInput(\"\");\n\n  const handleSubmit = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (loading) {\n        return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n      }\n      try {\n        const {\n          data: { logIn }\n        } = await login({\n          variables: { email: email.value, pwd: pwd.value }\n        });\n        if (logIn) {\n          setAccessToken(logIn);\n          dispatch({\n            type: SET_LOGIN_MODAL,\n            payload: false\n          });\n          me();\n        }\n      } catch (error) {\n        const { message } = JSON.parse(error.message);\n        alert(message);\n      }\n    },\n    [email.value, pwd.value, loading]\n  );\n\n  useEffect(() => {\n    if (data && data.getMyProfile) {\n      const { id, nickname, email, avatar, isMaster } = data.getMyProfile;\n      console.log(isMaster);\n      dispatch({\n        type: SET_ME,\n        id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  }, [data, dispatch]);\n\n  return (\n    <SignInPresenter\n      loading={loading}\n      email={email}\n      pwd={pwd}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default SignInContainer;\n"]},"metadata":{},"sourceType":"module"}