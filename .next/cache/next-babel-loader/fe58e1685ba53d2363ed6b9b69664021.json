{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nconst Index = () => {\n  const dispatch = useVssDispatch();\n  const {\n    data\n  } = useQuery(meQuery);\n\n  if (data) {\n    const {\n      id,\n      nickname,\n      email,\n      avatar,\n      isMaster\n    } = data.getMyProfile;\n    dispatch({\n      type: SET_ME,\n      id,\n      nickname,\n      email,\n      avatar,\n      isMaster\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\nexport const getStaticProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\nexport default Index;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/index.tsx"],"names":["React","useQuery","Layout","Feed","initializeApollo","feedQuery","meQuery","useVssDispatch","SET_ME","Index","dispatch","data","id","nickname","email","avatar","isMaster","getMyProfile","type","getStaticProps","apolloClient","query","variables","first","props","initialApolloState","cache","extract","revalidate"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;;AAEA,MAAMC,KAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGH,cAAc,EAA/B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWV,QAAQ,CAACK,OAAD,CAAzB;;AAEA,MAAIK,IAAJ,EAAU;AACR,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,QAAN;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA,MAAvB;AAA+BC,MAAAA;AAA/B,QAA4CL,IAAI,CAACM,YAAvD;AACAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV,MADC;AAEPI,MAAAA,EAFO;AAGPC,MAAAA,QAHO;AAIPC,MAAAA,KAJO;AAKPC,MAAAA,MALO;AAMPC,MAAAA;AANO,KAAD,CAAR;AAQD;;AAED,SACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF;AAKD,CArBD;;AAuBA,OAAO,MAAMG,cAA8B,GAAG,YAAY;AACxD,QAAMC,YAAY,GAAGhB,gBAAgB,EAArC;AACA,QAAMgB,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEhB,SADgB;AAEvBiB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAFY,GAAnB,CAAN;AAOA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEL,YAAY,CAACM,KAAb,CAAmBC,OAAnB;AADf,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAfM;AAiBP,eAAenB,KAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { getAccessToken } from \"../lib/token\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nconst Index: FC = () => {\n  const dispatch = useVssDispatch();\n  const { data } = useQuery(meQuery);\n\n  if (data) {\n    const { id, nickname, email, avatar, isMaster } = data.getMyProfile;\n    dispatch({\n      type: SET_ME,\n      id,\n      nickname,\n      email,\n      avatar,\n      isMaster\n    });\n  }\n\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}