{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport PostContainer from \"../post/PostContainer\";\nimport NoData from \"../common/NoData\";\nimport Subject from \"../common/Subject\";\nimport Loader from \"../common/Loader\";\nconst Filter = styled.div.withConfig({\n  displayName: \"SearchPostPresenter__Filter\",\n  componentId: \"sc-3o7za7-0\"\n})([\"\", \";width:100%;height:auto;margin-bottom:30px;& .accordion{width:100%;}& .card{border:none;}& .card-header{border:none;cursor:pointer;background:\", \";}& .table thead th{border:none;border-bottom:\", \";}& td{border:none;}\"], props => props.theme.whiteBox, props => props.theme.bgColor, props => props.theme.boxBorder);\nconst StyledTd = styled.td.withConfig({\n  displayName: \"SearchPostPresenter__StyledTd\",\n  componentId: \"sc-3o7za7-1\"\n})([\"cursor:pointer;font-weight:\", \";\"], props => props.active ? \"bold\" : 500);\n\nconst SearchPostPresenter = ({\n  loading,\n  loadingMorePosts,\n  posts,\n  orderBy,\n  onSort\n}) => __jsx(React.Fragment, null, __jsx(Subject, null, \"\\\"\", router.query.keyword, \"\\\"\\uC5D0 \\uB300\\uD55C \\uD3EC\\uC2A4\\uD2B8 \\uAC80\\uC0C9\\uACB0\\uACFC\"), loading && loadingMorePosts && __jsx(Loader, null), posts.length > 0 && __jsx(Filter, null, __jsx(Accordion, null, __jsx(Card, null, __jsx(Accordion.Toggle, {\n  as: Card.Header,\n  eventKey: \"0\"\n}, __jsx(\"h1\", null, \"\\uD544\\uD130\")), __jsx(Accordion.Collapse, {\n  eventKey: \"0\"\n}, __jsx(Card.Body, null, __jsx(Table, {\n  responsive: true\n}, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"\\uC815\\uB82C\\uAE30\\uC900\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(StyledTd, {\n  onClick: () => onSort(\"createdAt_DESC\"),\n  active: orderBy === \"createdAt_DESC\"\n}, \"\\uB4F1\\uB85D\\uC77C \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n  onClick: () => onSort(\"createdAt_ASC\"),\n  active: orderBy === \"createdAt_ASC\"\n}, \"\\uB4F1\\uB85D\\uC77C \\uC5ED\\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n  onClick: () => onSort(\"title_ASC\"),\n  active: orderBy === \"title_ASC\"\n}, \"\\uAC00\\uB098\\uB2E4 \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n  onClick: () => onSort(\"title_DESC\"),\n  active: orderBy === \"title_DESC\"\n}, \"\\uAC00\\uB098\\uB2E4 \\uC5ED\\uC21C\"))))))))), posts.length > 0 ? posts.map(post => __jsx(PostContainer, _extends({\n  key: post.id\n}, post))) : __jsx(NoData, null, \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"));\n\nexport default SearchPostPresenter;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchPostPresenter.tsx"],"names":["React","styled","Accordion","Card","Table","PostContainer","NoData","Subject","Loader","Filter","div","props","theme","whiteBox","bgColor","boxBorder","StyledTd","td","active","SearchPostPresenter","loading","loadingMorePosts","posts","orderBy","onSort","router","query","keyword","length","Header","map","post","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,qOACRC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QADb,EAiBMF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,OAjB3B,EAsBSH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,SAtB9B,CAAZ;AA8BA,MAAMC,QAAQ,GAAGf,MAAM,CAACgB,EAAV;AAAA;AAAA;AAAA,yCAEGN,KAAK,IAAKA,KAAK,CAACO,MAAN,GAAe,MAAf,GAAwB,GAFrC,CAAd;;AAaA,MAAMC,mBAA8B,GAAG,CAAC;AACtCC,EAAAA,OADsC;AAEtCC,EAAAA,gBAFsC;AAGtCC,EAAAA,KAHsC;AAItCC,EAAAA,OAJsC;AAKtCC,EAAAA;AALsC,CAAD,KAOrC,4BACE,MAAC,OAAD,cAAWC,MAAM,CAACC,KAAP,CAAaC,OAAxB,sEADF,EAEGP,OAAO,IAAIC,gBAAX,IAA+B,MAAC,MAAD,OAFlC,EAGGC,KAAK,CAACM,MAAN,GAAe,CAAf,IACC,MAAC,MAAD,QACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,MAAC,SAAD,CAAW,MAAX;AAAkB,EAAA,EAAE,EAAEzB,IAAI,CAAC0B,MAA3B;AAAmC,EAAA,QAAQ,EAAC;AAA5C,GACE,iCADF,CADF,EAIE,MAAC,SAAD,CAAW,QAAX;AAAoB,EAAA,QAAQ,EAAC;AAA7B,GACE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,KAAD;AAAO,EAAA,UAAU;AAAjB,GACE,qBACE,kBACE,6CADF,CADF,CADF,EAME,qBACE,kBACE,MAAC,QAAD;AACE,EAAA,OAAO,EAAE,MAAML,MAAM,CAAC,gBAAD,CADvB;AAEE,EAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,+BADF,CADF,EASE,kBACE,MAAC,QAAD;AACE,EAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,eAAD,CADvB;AAEE,EAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,qCADF,CATF,EAiBE,kBACE,MAAC,QAAD;AACE,EAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,WAAD,CADvB;AAEE,EAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,+BADF,CAjBF,EAyBE,kBACE,MAAC,QAAD;AACE,EAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,YAAD,CADvB;AAEE,EAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,qCADF,CAzBF,CANF,CADF,CADF,CAJF,CADF,CADF,CAJJ,EA2DGD,KAAK,CAACM,MAAN,GAAe,CAAf,GACCN,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI,MAAC,aAAD;AAAe,EAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,GAAiCD,IAAjC,EAAlB,CADD,GAGC,MAAC,MAAD,oEA9DJ,CAPF;;AA0EA,eAAeZ,mBAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport PostContainer from \"../post/PostContainer\";\nimport NoData from \"../common/NoData\";\nimport Subject from \"../common/Subject\";\nimport Loader from \"../common/Loader\";\n\nconst Filter = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  height: auto;\n  margin-bottom: 30px;\n\n  & .accordion {\n    width: 100%;\n  }\n\n  & .card {\n    border: none;\n  }\n\n  & .card-header {\n    border: none;\n    cursor: pointer;\n    background: ${props => props.theme.bgColor};\n  }\n\n  & .table thead th {\n    border: none;\n    border-bottom: ${props => props.theme.boxBorder};\n  }\n\n  & td {\n    border: none;\n  }\n`;\n\nconst StyledTd = styled.td<{ active?: boolean }>`\n  cursor: pointer;\n  font-weight: ${props => (props.active ? \"bold\" : 500)};\n`;\n\ntype Props = {\n  loading: boolean;\n  loadingMorePosts: boolean;\n  posts: any;\n  orderBy: string;\n  onSort: any;\n};\n\nconst SearchPostPresenter: FC<Props> = ({\n  loading,\n  loadingMorePosts,\n  posts,\n  orderBy,\n  onSort\n}) => (\n  <>\n    <Subject>\"{router.query.keyword}\"에 대한 포스트 검색결과</Subject>\n    {loading && loadingMorePosts && <Loader />}\n    {posts.length > 0 && (\n      <Filter>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              <h1>필터</h1>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>정렬기준</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_DESC\")}\n                        active={orderBy === \"createdAt_DESC\"}\n                      >\n                        등록일 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_ASC\")}\n                        active={orderBy === \"createdAt_ASC\"}\n                      >\n                        등록일 역순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_ASC\")}\n                        active={orderBy === \"title_ASC\"}\n                      >\n                        가나다 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_DESC\")}\n                        active={orderBy === \"title_DESC\"}\n                      >\n                        가나다 역순\n                      </StyledTd>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Filter>\n    )}\n    {posts.length > 0 ? (\n      posts.map(post => <PostContainer key={post.id} {...post} />)\n    ) : (\n      <NoData>검색 결과가 없습니다.</NoData>\n    )}\n  </>\n);\n\nexport default SearchPostPresenter;\n"]},"metadata":{},"sourceType":"module"}