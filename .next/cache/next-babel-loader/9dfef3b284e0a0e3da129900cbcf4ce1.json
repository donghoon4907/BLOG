{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Carousel } from \"react-bootstrap\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\nconst NoticeWrapper = styled.div.withConfig({\n  displayName: \"NoticeList__NoticeWrapper\",\n  componentId: \"ztp66g-0\"\n})([\"height:50px;display:flex;flex-direction:column;justify-content:center;margin-right:15%;margin-left:15%;padding:5px;text-align:center;cursor:pointer;\"]);\n\nconst NoticeList = ({\n  notices\n}) => {\n  const dispatch = useVssDispatch();\n  const {\n    isMaster\n  } = useVssState();\n  const handleClick = useCallback((title, description, noticeId) => {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: isMaster ? \"modifiable\" : \"readonly\",\n      actionText: \"\",\n      title,\n      description,\n      noticeId\n    });\n  }, [isMaster]);\n  return __jsx(CarouselContainer, null, notices.map(({\n    id,\n    title,\n    description,\n    updatedAt\n  }) => __jsx(Carousel.Item, {\n    key: id\n  }, __jsx(NoticeWrapper, {\n    onClick: () => handleClick(title, description, id)\n  }, __jsx(\"div\", null, title), __jsx(Timestamp, {\n    text: updatedAt\n  })))));\n};\n\nexport default memo(NoticeList);","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx"],"names":["React","useCallback","memo","styled","Carousel","CarouselContainer","Timestamp","useVssState","useVssDispatch","SHOW_NOTICE_MODAL","NoticeWrapper","div","NoticeList","notices","dispatch","isMaster","handleClick","title","description","noticeId","type","action","actionText","map","id","updatedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,4JAAnB;;AAgBA,MAAMC,UAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7C,QAAMC,QAAQ,GAAGN,cAAc,EAA/B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeR,WAAW,EAAhC;AAEA,QAAMS,WAAW,GAAGf,WAAW,CAC7B,CAACgB,KAAD,EAAQC,WAAR,EAAqBC,QAArB,KAAkC;AAChCL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,iBADC;AAEPY,MAAAA,MAAM,EAAEN,QAAQ,GAAG,YAAH,GAAkB,UAF3B;AAGPO,MAAAA,UAAU,EAAE,EAHL;AAIPL,MAAAA,KAJO;AAKPC,MAAAA,WALO;AAMPC,MAAAA;AANO,KAAD,CAAR;AAQD,GAV4B,EAW7B,CAACJ,QAAD,CAX6B,CAA/B;AAaA,SACE,MAAC,iBAAD,QACGF,OAAO,CAACU,GAAR,CAAY,CAAC;AAAEC,IAAAA,EAAF;AAAMP,IAAAA,KAAN;AAAaC,IAAAA,WAAb;AAA0BO,IAAAA;AAA1B,GAAD,KACX,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAED;AAApB,KACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAE,MAAMR,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBM,EAArB;AAAzC,KACE,mBAAMP,KAAN,CADF,EAEE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEQ;AAAjB,IAFF,CADF,CADD,CADH,CADF;AAYD,CA7BD;;AA+BA,eAAevB,IAAI,CAACU,UAAD,CAAnB","sourcesContent":["import React, { useCallback, FC, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Carousel } from \"react-bootstrap\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { Notice } from \"../../interfaces\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nconst NoticeWrapper = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-right: 15%;\n  margin-left: 15%;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n`;\n\ninterface Props {\n  notices: Notice[];\n}\n\nconst NoticeList: FC<Props> = ({ notices }) => {\n  const dispatch = useVssDispatch();\n  const { isMaster } = useVssState();\n\n  const handleClick = useCallback(\n    (title, description, noticeId) => {\n      dispatch({\n        type: SHOW_NOTICE_MODAL,\n        action: isMaster ? \"modifiable\" : \"readonly\",\n        actionText: \"\",\n        title,\n        description,\n        noticeId\n      });\n    },\n    [isMaster]\n  );\n  return (\n    <CarouselContainer>\n      {notices.map(({ id, title, description, updatedAt }) => (\n        <Carousel.Item key={id}>\n          <NoticeWrapper onClick={() => handleClick(title, description, id)}>\n            <div>{title}</div>\n            <Timestamp text={updatedAt} />\n          </NoticeWrapper>\n        </Carousel.Item>\n      ))}\n    </CarouselContainer>\n  );\n};\n\nexport default memo(NoticeList);\n"]},"metadata":{},"sourceType":"module"}