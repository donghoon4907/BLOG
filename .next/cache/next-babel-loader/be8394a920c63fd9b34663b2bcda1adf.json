{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer, useContext, createContext } from \"react\";\nexport const SET_ME = \"SET_ME\";\nexport const SHOW_NOTICE_MODAL = \"SHOW_NOTICE_MODAL\";\nexport const HIDE_NOTICE_MODAL = \"HIDE_NOTICE_MODAL\";\nexport const SHOW_POST_MODAL = \"SHOW_POST_MODAL\";\nexport const HIDE_POST_MODAL = \"HIDE_POST_MODAL\";\nexport const SHOW_LOGIN_MODAL = \"SHOW_LOGIN_MODAL\";\nexport const HIDE_LOGIN_MODAL = \"HIDE_LOGIN_MODAL\";\nexport const SHOW_SEARCH_BAR = \"SHOW_SEARCH_BAR\";\nexport const HIDE_SEARCH_BAR = \"HIDE_SEARCH_BAR\"; // type for action\n\n// create context\nconst VssContext = createContext(null);\nconst VssDispatchContext = createContext(null); // define reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userId: action.userId,\n        nickname: action.nickname,\n        email: action.email,\n        avatar: action.avatar,\n        isMaster: action.isMaster\n      });\n\n    case \"SHOW_NOTICE_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowNoticeModal: true,\n        activeNotice: {\n          noticeId: action.noticeId,\n          action: action.action,\n          actionText: action.actionText,\n          title: action.title,\n          description: action.description\n        }\n      });\n\n    case \"HIDE_NOTICE_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowNoticeModal: false,\n        activeNotice: {\n          noticeId: \"\",\n          action: \"wait\",\n          actionText: \"비활성화\",\n          title: \"\",\n          description: \"\"\n        }\n      });\n\n    case \"SHOW_POST_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowAddPostModal: true,\n        activePost: {\n          postId: action.postId,\n          title: action.title,\n          description: action.description,\n          status: action.status,\n          url: action.url\n        }\n      });\n\n    case \"HIDE_POST_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowAddPostModal: false,\n        activePost: {\n          postId: \"\",\n          title: \"\",\n          description: \"\",\n          status: \"\",\n          url: \"\"\n        }\n      });\n\n    case \"SHOW_SEARCH_BAR\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowSearchBar: true\n      });\n\n    case \"HIDE_SEARCH_BAR\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowSearchBar: false\n      });\n\n    case \"SHOW_LOGIN_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowLoginModal: true\n      });\n\n    case \"HIDE_LOGIN_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowLoginModal: false\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nconst initialState = {\n  userId: null,\n  nickname: null,\n  email: null,\n  avatar: null,\n  isMaster: false,\n  isShowNoticeModal: false,\n  isShowAddPostModal: false,\n  isShowSearchBar: false,\n  isShowLoginModal: false,\n  activePost: {\n    postId: \"\",\n    title: \"\",\n    description: \"\",\n    status: \"\",\n    url: \"\"\n  },\n  activeNotice: {\n    noticeId: \"\",\n    action: \"wait\",\n    actionText: \"비활성화\",\n    title: \"\",\n    description: \"\"\n  }\n};\nexport function VssProvider({\n  children\n}) {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(VssContext.Provider, {\n    value: state\n  }, __jsx(VssDispatchContext.Provider, {\n    value: dispatch\n  }, children));\n}\nexport function useVssState() {\n  const state = useContext(VssContext);\n  if (!state) throw new Error(\"not found provider\");\n  return state;\n}\nexport function useVssDispatch() {\n  const dispatch = useContext(VssDispatchContext);\n  if (!dispatch) throw new Error(\"not found provider\");\n  return dispatch;\n}","map":null,"metadata":{},"sourceType":"module"}