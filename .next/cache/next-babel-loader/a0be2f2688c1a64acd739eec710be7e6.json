{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nexport var useInput = function useInput(defaultValue) {\n  var _useState = useState(defaultValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var onChange = useCallback(function (e) {\n    setValue(e.target.value);\n  }, []);\n  return {\n    value: value,\n    onChange: onChange,\n    setValue: setValue\n  };\n};\nexport var useDebounce = function useDebounce(defaultValue, delay) {\n  var _useState2 = useState(\"\"),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(defaultValue),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  useEffect(function () {\n    if (value === state) return;\n    var timeout = setTimeout(function () {\n      return setValue(state);\n    }, delay);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, [value, state]);\n  return [value, setState];\n};\nexport var useLazyAxios = function useLazyAxios() {\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var call = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      var result, _yield$axios, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              result = {};\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return axios(options);\n\n            case 5:\n              _yield$axios = _context.sent;\n              data = _yield$axios.data;\n              result[\"data\"] = data;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              result[\"error\"] = _context.t0;\n\n            case 13:\n              setLoading(false);\n              return _context.abrupt(\"return\", result);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [loading]);\n  return {\n    loading: loading,\n    call: call\n  };\n};","map":null,"metadata":{},"sourceType":"module"}