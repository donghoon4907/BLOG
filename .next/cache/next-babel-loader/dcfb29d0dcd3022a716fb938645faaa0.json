{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport SearchPostPresenter from \"./SearchPostPresenter\";\nimport { usersQuery } from \"../../graphql/user/query\";\nimport Loader from \"../common/Loader\";\n\nvar SearchUserContainer = function SearchUserContainer() {\n  _s();\n\n  var router = useRouter();\n  var keyword = router.query.keyword || \"\";\n\n  var _useQuery = useQuery(usersQuery, {\n    variables: {\n      keyword: decodeURIComponent(keyword),\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  var handleSort = useCallback(function (nextOrderBy) {\n    router.push(\"/search?keyword=\".concat(keyword, \"&orderBy=\").concat(nextOrderBy));\n  }, []);\n\n  var handleScrollFetchMore = function handleScrollFetchMore() {\n    if (loadPostLoading) return;\n    var _document$documentEle = document.documentElement,\n        scrollHeight = _document$documentEle.scrollHeight,\n        clientHeight = _document$documentEle.clientHeight,\n        scrollTop = _document$documentEle.scrollTop;\n\n    if (posts && posts.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (posts.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: posts.getPosts.length\n            },\n            updateQuery: function updateQuery(prev, _ref) {\n              var fetchMoreResult = _ref.fetchMoreResult;\n              if (!fetchMoreResult) return prev;\n\n              if (fetchMoreResult.getPosts.length === 0) {\n                window.removeEventListener(\"scroll\", handleScrollFetchMore);\n              }\n\n              return Object.assign({}, prev, {\n                getPosts: [].concat(_toConsumableArray(prev.getPosts), _toConsumableArray(fetchMoreResult.getPosts))\n              });\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScrollFetchMore);\n    };\n  }, [posts && posts.getPosts, loadPostLoading]);\n\n  if (loadPostLoading && !posts) {\n    return __jsx(Loader, null);\n  }\n\n  return __jsx(SearchPostPresenter, {\n    posts: posts,\n    orderBy: orderBy,\n    onSort: handleSort\n  });\n};\n\n_s(SearchUserContainer, \"ykewJ1LzfRX6MdK/FJZCyjUjSpk=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SearchUserContainer;\nexport default SearchUserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUserContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchUserContainer.tsx"],"names":["useRouter","React","useCallback","useEffect","useQuery","SearchPostPresenter","usersQuery","Loader","SearchUserContainer","router","keyword","query","variables","decodeURIComponent","first","notifyOnNetworkStatusChange","data","loading","fetchMore","handleSort","nextOrderBy","push","handleScrollFetchMore","loadPostLoading","document","documentElement","scrollHeight","clientHeight","scrollTop","posts","getPosts","length","skip","updateQuery","prev","fetchMoreResult","window","removeEventListener","Object","assign","addEventListener","orderBy"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { useCallback, useEffect, FC } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport SearchPostPresenter from \"./SearchPostPresenter\";\nimport { usersQuery } from \"../../graphql/user/query\";\nimport Loader from \"../common/Loader\";\n\nconst SearchUserContainer: FC = () => {\n  const router = useRouter();\n  const keyword = (router.query.keyword || \"\") as string;\n\n  const { data, loading, fetchMore } = useQuery(usersQuery, {\n    variables: {\n      keyword: decodeURIComponent(keyword),\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  const handleSort = useCallback(nextOrderBy => {\n    router.push(`/search?keyword=${keyword}&orderBy=${nextOrderBy}`);\n  }, []);\n\n  const handleScrollFetchMore = () => {\n    if (loadPostLoading) return;\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n    if (posts && posts.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (posts.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: posts.getPosts.length\n            },\n            updateQuery: (\n              prev,\n              { fetchMoreResult }: { fetchMoreResult?: any }\n            ) => {\n              if (!fetchMoreResult) return prev;\n\n              if (fetchMoreResult.getPosts.length === 0) {\n                window.removeEventListener(\"scroll\", handleScrollFetchMore);\n              }\n\n              return Object.assign({}, prev, {\n                getPosts: [...prev.getPosts, ...fetchMoreResult.getPosts]\n              });\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return () => window.removeEventListener(\"scroll\", handleScrollFetchMore);\n  }, [posts && posts.getPosts, loadPostLoading]);\n\n  if (loadPostLoading && !posts) {\n    return <Loader />;\n  }\n\n  return (\n    <SearchPostPresenter posts={posts} orderBy={orderBy} onSort={handleSort} />\n  );\n};\n\nexport default SearchUserContainer;\n"]},"metadata":{},"sourceType":"module"}