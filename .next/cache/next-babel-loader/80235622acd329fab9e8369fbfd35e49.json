{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useContext, createContext } from \"react\";\nexport var SET_ME = \"SET_ME\";\nexport var SET_NOTICE_MODAL = \"SET_NOTICE_MODAL\";\nexport var SET_POST_MODAL = \"SET_POST_MODAL\"; // type for action\n\n// create context\nvar VssContext = createContext(null);\nvar VssDispatchContext = createContext(null); // define reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: action.id,\n        nickname: action.nickname,\n        email: action.email,\n        avatar: action.avatar,\n        isMaster: action.isMaster\n      });\n\n    case \"SET_NOTICE_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowNoticeModal: action.payload\n      });\n\n    case \"SET_POST_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowAddPostModal: action.isShowAddPostModal,\n        postId: action.postId,\n        title: action.title,\n        description: action.description,\n        status: action.status,\n        url: action.url\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nexport function VssProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, {\n    id: null,\n    nickname: null,\n    email: null,\n    avatar: null,\n    isMaster: false,\n    isShowNoticeModal: false,\n    isShowAddPostModal: false\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(VssContext.Provider, {\n    value: state\n  }, __jsx(VssDispatchContext.Provider, {\n    value: dispatch\n  }, children));\n} // for hooks\n\n_s(VssProvider, \"1chJuO1RvrKT+qmxFaa52aGafpU=\");\n\n_c = VssProvider;\nexport function useVssState() {\n  _s2();\n\n  var state = useContext(VssContext);\n  if (!state) throw new Error(\"not found provider\");\n  return state;\n}\n\n_s2(useVssState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nexport function useVssDispatch() {\n  _s3();\n\n  var dispatch = useContext(VssDispatchContext);\n  if (!dispatch) throw new Error(\"not found provider\");\n  return dispatch;\n}\n\n_s3(useVssDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"VssProvider\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/context/index.tsx"],"names":["React","useReducer","useContext","createContext","SET_ME","SET_NOTICE_MODAL","SET_POST_MODAL","VssContext","VssDispatchContext","reducer","state","action","type","id","nickname","email","avatar","isMaster","isShowNoticeModal","payload","isShowAddPostModal","postId","title","description","status","url","VssProvider","children","dispatch","useVssState","Error","useVssDispatch"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,QAAuE,OAAvE;AA0BA,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AAwBA;AACA,IAAMC,UAAU,GAAGJ,aAAa,CAAe,IAAf,CAAhC;AACA,IAAMK,kBAAkB,GAAGL,aAAa,CAAqB,IAArB,CAAxC,C,CAEA;;AACA,SAASM,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,6CACKF,KADL;AAEEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EAFb;AAGEC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QAHnB;AAIEC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAJhB;AAKEC,QAAAA,MAAM,EAAEL,MAAM,CAACK,MALjB;AAMEC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AANnB;;AAQF,SAAK,kBAAL;AACE,6CACKP,KADL;AAEEQ,QAAAA,iBAAiB,EAAEP,MAAM,CAACQ;AAF5B;;AAIF,SAAK,gBAAL;AACE,6CACKT,KADL;AAEEU,QAAAA,kBAAkB,EAAET,MAAM,CAACS,kBAF7B;AAGEC,QAAAA,MAAM,EAAEV,MAAM,CAACU,MAHjB;AAIEC,QAAAA,KAAK,EAAEX,MAAM,CAACW,KAJhB;AAKEC,QAAAA,WAAW,EAAEZ,MAAM,CAACY,WALtB;AAMEC,QAAAA,MAAM,EAAEb,MAAM,CAACa,MANjB;AAOEC,QAAAA,GAAG,EAAEd,MAAM,CAACc;AAPd;;AASF;AACE,+BAAYf,KAAZ;AA1BJ;AA4BD;;AAED,OAAO,SAASgB,WAAT,OAAmC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,oBACd1B,UAAU,CAACQ,OAAD,EAAU;AAC5CI,IAAAA,EAAE,EAAE,IADwC;AAE5CC,IAAAA,QAAQ,EAAE,IAFkC;AAG5CC,IAAAA,KAAK,EAAE,IAHqC;AAI5CC,IAAAA,MAAM,EAAE,IAJoC;AAK5CC,IAAAA,QAAQ,EAAE,KALkC;AAM5CC,IAAAA,iBAAiB,EAAE,KANyB;AAO5CE,IAAAA,kBAAkB,EAAE;AAPwB,GAAV,CADI;AAAA,MACjCV,KADiC;AAAA,MAC1BkB,QAD0B;;AAWxC,SACE,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAElB;AAA5B,KACE,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEkB;AAApC,KACGD,QADH,CADF,CADF;AAOD,C,CAED;;GApBgBD,W;;KAAAA,W;AAqBhB,OAAO,SAASG,WAAT,GAAuB;AAAA;;AAC5B,MAAMnB,KAAK,GAAGR,UAAU,CAACK,UAAD,CAAxB;AACA,MAAI,CAACG,KAAL,EAAY,MAAM,IAAIoB,KAAJ,CAAU,oBAAV,CAAN;AACZ,SAAOpB,KAAP;AACD;;IAJemB,W;;AAMhB,OAAO,SAASE,cAAT,GAA0B;AAAA;;AAC/B,MAAMH,QAAQ,GAAG1B,UAAU,CAACM,kBAAD,CAA3B;AACA,MAAI,CAACoB,QAAL,EAAe,MAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AACf,SAAOF,QAAP;AACD;;IAJeG,c","sourcesContent":["import React, { useReducer, useContext, createContext, Dispatch } from \"react\";\n\ntype Avatar = {\n  url: string;\n};\n\ntype ActivePost = {\n  postId: string;\n  title: string;\n  description: string;\n  status: string;\n  url: string;\n};\n\n// type for state\ntype State = {\n  id: string;\n  nickname: string;\n  email: string;\n  avatar: Avatar;\n  isMaster: boolean;\n  isShowNoticeModal: boolean;\n  isShowAddPostModal: boolean;\n  activePost: ActivePost;\n};\n\nexport const SET_ME = \"SET_ME\";\nexport const SET_NOTICE_MODAL = \"SET_NOTICE_MODAL\";\nexport const SET_POST_MODAL = \"SET_POST_MODAL\";\n\n// type for action\ntype Action =\n  | {\n      type: \"SET_ME\";\n      id: string;\n      nickname: string;\n      email: string;\n      avatar: Avatar;\n      isMaster: boolean;\n    }\n  | { type: \"SET_NOTICE_MODAL\"; payload: boolean }\n  | {\n      type: \"SET_POST_MODAL\";\n      isShowAddPostModal: boolean;\n      postId: string;\n      title: string;\n      description: string;\n      status: string;\n      url: string;\n    };\n\n// type for dispatch\ntype VssDispatch = Dispatch<Action>;\n\n// create context\nconst VssContext = createContext<State | null>(null);\nconst VssDispatchContext = createContext<VssDispatch | null>(null);\n\n// define reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ME\":\n      return {\n        ...state,\n        id: action.id,\n        nickname: action.nickname,\n        email: action.email,\n        avatar: action.avatar,\n        isMaster: action.isMaster\n      };\n    case \"SET_NOTICE_MODAL\":\n      return {\n        ...state,\n        isShowNoticeModal: action.payload\n      };\n    case \"SET_POST_MODAL\":\n      return {\n        ...state,\n        isShowAddPostModal: action.isShowAddPostModal,\n        postId: action.postId,\n        title: action.title,\n        description: action.description,\n        status: action.status,\n        url: action.url\n      };\n    default:\n      return { ...state };\n  }\n}\n\nexport function VssProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {\n    id: null,\n    nickname: null,\n    email: null,\n    avatar: null,\n    isMaster: false,\n    isShowNoticeModal: false,\n    isShowAddPostModal: false\n  });\n\n  return (\n    <VssContext.Provider value={state}>\n      <VssDispatchContext.Provider value={dispatch}>\n        {children}\n      </VssDispatchContext.Provider>\n    </VssContext.Provider>\n  );\n}\n\n// for hooks\nexport function useVssState() {\n  const state = useContext(VssContext);\n  if (!state) throw new Error(\"not found provider\");\n  return state;\n}\n\nexport function useVssDispatch() {\n  const dispatch = useContext(VssDispatchContext);\n  if (!dispatch) throw new Error(\"not found provider\");\n  return dispatch;\n}\n"]},"metadata":{},"sourceType":"module"}