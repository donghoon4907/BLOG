{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/pages/search.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchBar from \"../components/search/SearchBar\";\nimport SearchTag from \"../components/search/SearchTag\";\n\nconst Search = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({\n      getMyProfile\n    }) => {\n      const {\n        id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(SearchTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useRouter","useQuery","meQuery","useVssDispatch","SET_ME","Layout","Section","SearchBar","SearchTag","Search","router","dispatch","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAIA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGR,cAAc,EAA/B;AACAF,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChBU,IAAAA,WAAW,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAsB;AACjC,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,QAAN;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA,MAAvB;AAA+BC,QAAAA;AAA/B,UAA4CL,YAAlD;AACAF,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEf,MADC;AAEPgB,QAAAA,MAAM,EAAEN,EAFD;AAGPC,QAAAA,QAHO;AAIPC,QAAAA,KAJO;AAKPC,QAAAA,MALO;AAMPC,QAAAA;AANO,OAAD,CAAR;AAQD;AAXe,GAAV,CAAR;AAaA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAWD,CA3BD;;AA6BA,eAAeT,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { usersQuery } from \"../graphql/user/query\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchUser from \"../components/search/SearchUser\";\nimport SearchPost from \"../components/search/SearchPostContainer\";\nimport Subject from \"../components/common/Subject\";\nimport SearchBar from \"../components/search/SearchBar\";\nimport SearchTag from \"../components/search/SearchTag\";\n\nconst Search: NextPage = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({ getMyProfile }) => {\n      const { id, nickname, email, avatar, isMaster } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return (\n    <Layout title=\"검색\">\n      <Section>\n        <SearchBar />\n        <SearchTag />\n        {/* <Subject>\"{router.query.keyword}\"의 검색결과</Subject> */}\n        {/* {users.length > 0 && <SearchUser users={users} />} */}\n        {/* <SearchPost /> */}\n      </Section>\n    </Layout>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}