{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\n\n// import SearchPost from \"../components/search/SearchPostContainer\";\nconst Search = props => {\n  console.log(props); // const { data: posts, loading, fetchMore, networkStatus } = useQuery(\n  //   postsQuery,\n  //   {\n  //     variables: {\n  //       first: 10,\n  //       keyword: query.keyword\n  //     },\n  //     notifyOnNetworkStatusChange: true\n  //   }\n  // );\n\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"test\"));\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    keyword\n  } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n      query: {\n        keyword\n      }\n    }\n  };\n};\nexport default Search;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","initializeApollo","searchQuery","Layout","Search","props","console","log","getServerSideProps","query","keyword","apolloClient","variables","first","initialApolloState","cache","extract"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA;AAEA,MAAMC,MAAgB,GAAGC,KAAK,IAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,MAAC,MAAD,QACE,yBADF,CADF;AAKD,CAjBD;;AAmBA,OAAO,MAAMG,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,YAAY,GAAGV,gBAAgB,EAArC;AACA,QAAMU,YAAY,CAACF,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEP,WADgB;AAEvBU,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETH,MAAAA;AAFS;AAFY,GAAnB,CAAN;AAQA,SAAO;AACLL,IAAAA,KAAK,EAAE;AACLS,MAAAA,kBAAkB,EAAEH,YAAY,CAACI,KAAb,CAAmBC,OAAnB,EADf;AAELP,MAAAA,KAAK,EAAE;AACLC,QAAAA;AADK;AAFF;AADF,GAAP;AAQD,CAnBM;AAqBP,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\nimport { postsQuery } from \"../graphql/post/query\";\n// import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search: NextPage = props => {\n  console.log(props);\n  // const { data: posts, loading, fetchMore, networkStatus } = useQuery(\n  //   postsQuery,\n  //   {\n  //     variables: {\n  //       first: 10,\n  //       keyword: query.keyword\n  //     },\n  //     notifyOnNetworkStatusChange: true\n  //   }\n  // );\n  return (\n    <Layout>\n      <h1>test</h1>\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async ({ query }) => {\n  const { keyword } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n      query: {\n        keyword\n      }\n    }\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}