{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport FeedPresenter from \"./FeedPresenter\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nvar FeedContainer = function FeedContainer() {\n  var _useVssState = useVssState(),\n      isMaster = _useVssState.isMaster;\n\n  var dispatch = useVssDispatch();\n  var recommandUserEl = useRef(null);\n\n  var _useQuery = useQuery(postsQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      posts = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var _useQuery2 = useQuery(noticesQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      notices = _useQuery2.data;\n\n  var loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  var handleScrollFetchMore = function handleScrollFetchMore() {\n    if (loading) return;\n    var _document$documentEle = document.documentElement,\n        scrollHeight = _document$documentEle.scrollHeight,\n        clientHeight = _document$documentEle.clientHeight,\n        scrollTop = _document$documentEle.scrollTop;\n\n    if (posts.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (posts.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: posts.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  var handleAddNotice = useCallback(function () {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: \"add\",\n      actionText: \"등록\",\n      title: \"\",\n      description: \"\",\n      noticeId: \"\"\n    });\n  }, []);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScrollFetchMore);\n    };\n  }, [posts && posts.getPosts, loading]);\n  return __jsx(FeedPresenter, {\n    loading: loading,\n    loadingMorePosts: loadingMorePosts,\n    posts: posts.getPosts,\n    notices: notices.getNotices,\n    isMaster: isMaster,\n    onAddNotice: handleAddNotice,\n    recommandUserEl: recommandUserEl\n  });\n};\n\nexport default FeedContainer;","map":null,"metadata":{},"sourceType":"module"}