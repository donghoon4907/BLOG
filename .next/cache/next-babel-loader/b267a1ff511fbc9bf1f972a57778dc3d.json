{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/pages/search/[...keyword].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nconst Search = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({\n      getMyProfile\n    }) => {\n      const {\n        id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(SearchTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(SearchPost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\nSearch.getInitialProps = async ({\n  query\n}) => {\n  const [searchKeyword, orderBy = \"createdAt_DESC\"] = query.keyword;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: postsQuery,\n    variables: {\n      first: 10,\n      searchKeyword,\n      orderBy\n    }\n  });\n  return {\n    initialApolloState: apolloClient.cache.extract()\n  };\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search/[...keyword].tsx"],"names":["React","useRouter","useQuery","initializeApollo","meQuery","postsQuery","useVssDispatch","SET_ME","Layout","Section","SearchPost","SearchBar","SearchTag","Search","router","dispatch","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId","getInitialProps","query","searchKeyword","orderBy","keyword","apolloClient","variables","first","initialApolloState","cache","extract"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,eAAvC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,QAAQ,GAAGT,cAAc,EAA/B;AACAJ,EAAAA,QAAQ,CAACE,OAAD,EAAU;AAChBY,IAAAA,WAAW,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAsB;AACjC,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,QAAN;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA,MAAvB;AAA+BC,QAAAA;AAA/B,UAA4CL,YAAlD;AACAF,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEhB,MADC;AAEPiB,QAAAA,MAAM,EAAEN,EAFD;AAGPC,QAAAA,QAHO;AAIPC,QAAAA,KAJO;AAKPC,QAAAA,MALO;AAMPC,QAAAA;AANO,OAAD,CAAR;AAQD;AAXe,GAAV,CAAR;AAaA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CAzBD;;AA2BAT,MAAM,CAACY,eAAP,GAAyB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC5C,QAAM,CAACC,aAAD,EAAgBC,OAAO,GAAG,gBAA1B,IAA8CF,KAAK,CAACG,OAA1D;AAEA,QAAMC,YAAY,GAAG3B,gBAAgB,EAArC;AACA,QAAM2B,YAAY,CAACJ,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAErB,UADgB;AAEvB0B,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETL,MAAAA,aAFS;AAGTC,MAAAA;AAHS;AAFY,GAAnB,CAAN;AASA,SAAO;AACLK,IAAAA,kBAAkB,EAAEH,YAAY,CAACI,KAAb,CAAmBC,OAAnB;AADf,GAAP;AAGD,CAhBD;;AAkBA,eAAetB,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nconst Search: NextPage = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({ getMyProfile }) => {\n      const { id, nickname, email, avatar, isMaster } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return (\n    <Layout title=\"검색\">\n      <Section>\n        <SearchBar />\n        <SearchTag />\n        <SearchPost />\n      </Section>\n    </Layout>\n  );\n};\n\nSearch.getInitialProps = async ({ query }) => {\n  const [searchKeyword, orderBy = \"createdAt_DESC\"] = query.keyword as any;\n\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: postsQuery,\n    variables: {\n      first: 10,\n      searchKeyword,\n      orderBy\n    }\n  });\n\n  return {\n    initialApolloState: apolloClient.cache.extract()\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}