{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nvar Keyword = function Keyword() {\n  var dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: function onCompleted(_ref) {\n      var getMyProfile = _ref.getMyProfile;\n      var id = getMyProfile.id,\n          nickname = getMyProfile.nickname,\n          email = getMyProfile.email,\n          avatar = getMyProfile.avatar,\n          isMaster = getMyProfile.isMaster;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname: nickname,\n        email: email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\"\n  }, __jsx(Section, null, __jsx(SearchBar, null), __jsx(SearchTag, null), __jsx(SearchPost, null)));\n};\n\nKeyword.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, _ref4, _ref5, searchKeyword, _ref5$, orderBy, apolloClient;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            _ref4 = query.keyword, _ref5 = _slicedToArray(_ref4, 2), searchKeyword = _ref5[0], _ref5$ = _ref5[1], orderBy = _ref5$ === void 0 ? \"createdAt_DESC\" : _ref5$;\n            apolloClient = initializeApollo();\n            _context.next = 5;\n            return apolloClient.query({\n              query: postsQuery,\n              variables: {\n                first: 10,\n                searchKeyword: searchKeyword,\n                orderBy: orderBy\n              }\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", {\n              initialApolloState: apolloClient.cache.extract()\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Keyword;","map":null,"metadata":{},"sourceType":"module"}