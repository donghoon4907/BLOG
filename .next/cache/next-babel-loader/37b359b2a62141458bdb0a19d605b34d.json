{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/pages/search.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchPost from \"../components/search/SearchPostContainer\";\n\nvar Search = function Search() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: function onCompleted(_ref) {\n      var getMyProfile = _ref.getMyProfile;\n      var id = getMyProfile.id,\n          nickname = getMyProfile.nickname,\n          email = getMyProfile.email,\n          avatar = getMyProfile.avatar,\n          isMaster = getMyProfile.isMaster;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname: nickname,\n        email: email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(SearchPost, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Search, \"Ly4Vt2w/affoAKc+wwK7MyMdH58=\", false, function () {\n  return [useRouter, useVssDispatch, useQuery];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useRouter","useQuery","meQuery","useVssDispatch","SET_ME","Layout","Section","SearchPost","Search","router","dispatch","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,UAAP,MAAuB,0CAAvB;;AAGA,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,GAAM;AAAA;;AAC7B,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAMU,QAAQ,GAAGP,cAAc,EAA/B;AACAF,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChBS,IAAAA,WAAW,EAAE,2BAAsB;AAAA,UAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,UACzBC,EADyB,GACiBD,YADjB,CACzBC,EADyB;AAAA,UACrBC,QADqB,GACiBF,YADjB,CACrBE,QADqB;AAAA,UACXC,KADW,GACiBH,YADjB,CACXG,KADW;AAAA,UACJC,MADI,GACiBJ,YADjB,CACJI,MADI;AAAA,UACIC,QADJ,GACiBL,YADjB,CACIK,QADJ;AAEjCP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,MADC;AAEPe,QAAAA,MAAM,EAAEN,EAFD;AAGPC,QAAAA,QAAQ,EAARA,QAHO;AAIPC,QAAAA,KAAK,EAALA,KAJO;AAKPC,QAAAA,MAAM,EAANA,MALO;AAMPC,QAAAA,QAAQ,EAARA;AANO,OAAD,CAAR;AAQD;AAXe,GAAV,CAAR;AAaA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CAzBD;;GAAMT,M;UACWR,S,EACEG,c,EACjBF,Q;;;KAHIO,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { usersQuery } from \"../graphql/user/query\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchUser from \"../components/search/SearchUser\";\nimport SearchPost from \"../components/search/SearchPostContainer\";\nimport Subject from \"../components/common/Subject\";\n\nconst Search: NextPage = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({ getMyProfile }) => {\n      const { id, nickname, email, avatar, isMaster } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return (\n    <Layout title=\"검색\">\n      <Section>\n        {/* <Subject>\"{router.query.keyword}\"의 검색결과</Subject> */}\n        {/* {users.length > 0 && <SearchUser users={users} />} */}\n        <SearchPost />\n      </Section>\n    </Layout>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}