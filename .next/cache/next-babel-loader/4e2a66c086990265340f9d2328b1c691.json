{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport { followMutation, unfollowMutation } from \"../../graphql/user/mutation/follow\";\n\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n\n  var isFollowing = _ref.isFollowing,\n      userId = _ref.userId;\n\n  var _useState = useState(isFollowing),\n      ctrlIsFolling = _useState[0],\n      setCtrlIsFolling = _useState[1];\n\n  var _useMutation = useMutation(followMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      follow = _useMutation2[0],\n      followLoading = _useMutation2[1].loading;\n\n  var _useMutation3 = useMutation(unfollowMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      unfollow = _useMutation4[0],\n      unfollowLoading = _useMutation4[1].loading;\n\n  var handleFollow = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$unfollow, data, _yield$follow, _data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!ctrlIsFolling) {\n              _context.next = 10;\n              break;\n            }\n\n            if (!unfollowLoading) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return unfollow({\n              variables: {\n                userId: userId\n              }\n            });\n\n          case 5:\n            _yield$unfollow = _context.sent;\n            data = _yield$unfollow.data;\n\n            if (data.unfollow) {\n              setCtrlIsFolling(false);\n              alert(\"언팔로우 되었습니다.\");\n            }\n\n            _context.next = 17;\n            break;\n\n          case 10:\n            if (!followLoading) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 12:\n            _context.next = 14;\n            return follow({\n              variables: {\n                userId: userId\n              }\n            });\n\n          case 14:\n            _yield$follow = _context.sent;\n            _data = _yield$follow.data;\n\n            if (_data.follow) {\n              setCtrlIsFolling(true);\n              alert(\"팔로우 되었습니다.\");\n            }\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [ctrlIsFolling, followLoading, unfollowLoading]);\n  return __jsx(Button, {\n    text: ctrlIsFolling ? \"언팔로우\" : \"팔로우\",\n    onClick: handleFollow\n  });\n};\n\n_s(FollowButton, \"tzgwGjxbJuGf5tZEFBPyyzhjKDI=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = FollowButton;\nexport default FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/common/FollowButton.tsx"],"names":["React","useState","useCallback","useMutation","Button","followMutation","unfollowMutation","FollowButton","isFollowing","userId","ctrlIsFolling","setCtrlIsFolling","follow","followLoading","loading","unfollow","unfollowLoading","handleFollow","variables","data","alert"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,cADF,EAEEC,gBAFF,QAGO,oCAHP;;AAUA,IAAMC,YAAuB,GAAG,SAA1BA,YAA0B,OAA6B;AAAA;;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACjBR,QAAQ,CAAUO,WAAV,CADS;AAAA,MACpDE,aADoD;AAAA,MACrCC,gBADqC;;AAAA,qBAGdR,WAAW,CAACE,cAAD,CAHG;AAAA;AAAA,MAGpDO,MAHoD;AAAA,MAGjCC,aAHiC,oBAG1CC,OAH0C;;AAAA,sBAIVX,WAAW,CAC1DG,gBAD0D,CAJD;AAAA;AAAA,MAIpDS,QAJoD;AAAA,MAI/BC,eAJ+B,oBAIxCF,OAJwC;;AAQ3D,MAAMG,YAAY,GAAGf,WAAW,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC3BQ,aAD2B;AAAA;AAAA;AAAA;;AAAA,iBAEzBM,eAFyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAIND,QAAQ,CAAC;AAC9BG,cAAAA,SAAS,EAAE;AAAET,gBAAAA,MAAM,EAANA;AAAF;AADmB,aAAD,CAJF;;AAAA;AAAA;AAIrBU,YAAAA,IAJqB,mBAIrBA,IAJqB;;AAO7B,gBAAIA,IAAI,CAACJ,QAAT,EAAmB;AACjBJ,cAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAS,cAAAA,KAAK,CAAC,aAAD,CAAL;AACD;;AAV4B;AAAA;;AAAA;AAAA,iBAYzBP,aAZyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAcND,MAAM,CAAC;AAC5BM,cAAAA,SAAS,EAAE;AAAET,gBAAAA,MAAM,EAANA;AAAF;AADiB,aAAD,CAdA;;AAAA;AAAA;AAcrBU,YAAAA,KAdqB,iBAcrBA,IAdqB;;AAiB7B,gBAAIA,KAAI,CAACP,MAAT,EAAiB;AACfD,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAS,cAAAA,KAAK,CAAC,YAAD,CAAL;AACD;;AApB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAsB7B,CAACV,aAAD,EAAgBG,aAAhB,EAA+BG,eAA/B,CAtB6B,CAAhC;AAwBA,SACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAEN,aAAa,GAAG,MAAH,GAAY,KADjC;AAEE,IAAA,OAAO,EAAEO;AAFX,IADF;AAMD,CAtCD;;GAAMV,Y;UAGyCJ,W,EACIA,W;;;KAJ7CI,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { FC, useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport {\n  followMutation,\n  unfollowMutation\n} from \"../../graphql/user/mutation/follow\";\n\ninterface Props {\n  isFollowing: boolean;\n  userId: string;\n}\n\nconst FollowButton: FC<Props> = ({ isFollowing, userId }) => {\n  const [ctrlIsFolling, setCtrlIsFolling] = useState<boolean>(isFollowing);\n\n  const [follow, { loading: followLoading }] = useMutation(followMutation);\n  const [unfollow, { loading: unfollowLoading }] = useMutation(\n    unfollowMutation\n  );\n\n  const handleFollow = useCallback(async () => {\n    if (ctrlIsFolling) {\n      if (unfollowLoading) return;\n\n      const { data } = await unfollow({\n        variables: { userId }\n      });\n      if (data.unfollow) {\n        setCtrlIsFolling(false);\n        alert(\"언팔로우 되었습니다.\");\n      }\n    } else {\n      if (followLoading) return;\n\n      const { data } = await follow({\n        variables: { userId }\n      });\n      if (data.follow) {\n        setCtrlIsFolling(true);\n        alert(\"팔로우 되었습니다.\");\n      }\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n\n  return (\n    <Button\n      text={ctrlIsFolling ? \"언팔로우\" : \"팔로우\"}\n      onClick={handleFollow}\n    />\n  );\n};\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}