{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useInput = defaultValue => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue);\n  const onChange = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return {\n    value,\n    onChange,\n    setValue\n  };\n};\nexport const useDebounce = (defaultValue, delay) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: state,\n    1: setState\n  } = useState(defaultValue);\n  useEffect(() => {\n    if (value === state) return;\n    const timeout = setTimeout(() => setValue(state), delay);\n    return () => clearTimeout(timeout);\n  }, [value, state]);\n  return [value, setState];\n};\nexport const useLazyAxios = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const call = useCallback(async options => {\n    const result = {};\n    setLoading(true);\n\n    try {\n      const {\n        data\n      } = await axios(options);\n      result[\"data\"] = data;\n    } catch (error) {\n      result[\"error\"] = error;\n    }\n\n    setLoading(false);\n    return result;\n  }, [loading]);\n  return {\n    loading,\n    call\n  };\n};","map":null,"metadata":{},"sourceType":"module"}