{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/common/Layout\"; // import SearchPost from \"../components/search/SearchPostContainer\";\n\nvar Search = function Search() {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"test\"));\n}; // export async function getStaticPaths() {\n//   console.log(test);\n// return {\n//   //빌드 타임 때 아래 정의한  /dyna/1,  /dyna/2, ... /dyna/동적인값 경로만 pre렌더링.\n//   paths: [\n//     { params: { dynamic: 1 } },\n//     { params: { dynmic: 2 } }\n//     ......\n//     { params: { dynmic: 동적인값 } }\n//   ],\n//   // 만들어지지 않은 것도 추후 요청이 들어오면 만들어 줄 지 여부.\n//   fallback: true,\n// }\n// }\n\n\n_c = Search;\nexport var __N_SSG = true;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","Layout","Search"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAIA,OAAOC,MAAP,MAAmB,6BAAnB,C,CACA;;AAEA,IAAMC,MAAU,GAAG,SAAbA,MAAa,GAAM;AACvB,SACE,MAAC,MAAD,QACE,yBADF,CADF;AAKD,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArBMA,M;;AAyCN,eAAeA,MAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\n// import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search: FC = () => {\n  return (\n    <Layout>\n      <h1>test</h1>\n    </Layout>\n  );\n};\n\n// export async function getStaticPaths() {\n//   console.log(test);\n// return {\n//   //빌드 타임 때 아래 정의한  /dyna/1,  /dyna/2, ... /dyna/동적인값 경로만 pre렌더링.\n//   paths: [\n//     { params: { dynamic: 1 } },\n//     { params: { dynmic: 2 } }\n//     ......\n//     { params: { dynmic: 동적인값 } }\n//   ],\n//   // 만들어지지 않은 것도 추후 요청이 들어오면 만들어 줄 지 여부.\n//   fallback: true,\n// }\n// }\n\nexport const getStaticProps = async context => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10\n    }\n  });\n  console.log(context);\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}