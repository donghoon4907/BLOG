{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport Router from \"next/router\";\nimport { useMutation } from \"@apollo/client\";\nimport PostPresenter from \"./PostPresenter\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport { likeMutation } from \"../../graphql/post/mutation/like\";\n\nvar PostContainer = function PostContainer() {\n  _s();\n\n  var _props = props,\n      id = _props.id,\n      title = _props.title,\n      description = _props.description,\n      createdAt = _props.createdAt,\n      user = _props.user,\n      video = _props.video,\n      isLiked = _props.isLiked,\n      likeCount = _props.likeCount,\n      isMyPost = _props.isMyPost,\n      status = _props.status,\n      room = _props.room;\n\n  var _useState = useState(isLiked),\n      ctrlIsLiked = _useState[0],\n      setCtrlIsLiked = _useState[1];\n\n  var _useState2 = useState(likeCount),\n      ctrlLikeCount = _useState2[0],\n      setCtrlLikeCount = _useState2[1];\n\n  var _useMutation = useMutation(likeMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      like = _useMutation2[0],\n      likeLoading = _useMutation2[1].loading;\n\n  var _useMutation3 = useMutation(removePostMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      remove = _useMutation4[0],\n      removeLoading = _useMutation4[1].loading; // 포스트 채팅방 접근 이벤트\n\n\n  var handleRoom = useCallback(function () {\n    Router.push(\"/room/\".concat(room.id));\n  }, []); // 좋아요 / 좋아요 취소 이벤트\n\n  var handleLike = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$like, likePost;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!likeLoading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return like({\n              variables: {\n                postId: id\n              }\n            });\n\n          case 4:\n            _yield$like = _context.sent;\n            likePost = _yield$like.data.likePost;\n\n            if (likePost) {\n              if (ctrlIsLiked) {\n                setCtrlIsLiked(false);\n                setCtrlLikeCount(ctrlLikeCount - 1);\n              } else {\n                setCtrlIsLiked(true);\n                setCtrlLikeCount(ctrlLikeCount + 1);\n              }\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [ctrlIsLiked, ctrlLikeCount, likeLoading]); // 삭제 이벤트\n\n  var handleDelete = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$remove, deletePost;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!removeLoading) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!confirm(\"해당 포스트를 삭제하시겠습니까?\")) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 5;\n            return remove({\n              variables: {\n                postId: id\n              }\n            });\n\n          case 5:\n            _yield$remove = _context2.sent;\n            deletePost = _yield$remove.data.deletePost;\n\n            if (deletePost) {\n              alert(\"해당 포스트가 삭제되었습니다.\");\n              window.location.reload();\n            } else {\n              alert(\"포스트 삭제 중 오류가 발생했습니다.\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [removeLoading]);\n  return __jsx(PostPresenter, {\n    id: id,\n    title: title,\n    description: description,\n    status: status,\n    createdAt: createdAt,\n    user: user,\n    video: video,\n    isLiked: ctrlIsLiked,\n    likeCount: ctrlLikeCount,\n    isMyPost: isMyPost,\n    onClickLike: handleLike,\n    onClickRoom: handleRoom,\n    onClickDelete: handleDelete\n  });\n};\n\n_s(PostContainer, \"pA5nz5m/EASiznwwcnZasg8dBrg=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = PostContainer;\nexport default PostContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/post/PostContainer.tsx"],"names":["React","useState","useCallback","Router","useMutation","PostPresenter","removePostMutation","likeMutation","PostContainer","props","id","title","description","createdAt","user","video","isLiked","likeCount","isMyPost","status","room","ctrlIsLiked","setCtrlIsLiked","ctrlLikeCount","setCtrlLikeCount","like","likeLoading","loading","remove","removeLoading","handleRoom","push","handleLike","variables","postId","likePost","data","handleDelete","confirm","deletePost","alert","window","location","reload"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,YAAT,QAA6B,kCAA7B;;AAkBA,IAAMC,aAAwB,GAAG,SAA3BA,aAA2B,GAAM;AAAA;;AAAA,eAajCC,KAbiC;AAAA,MAEnCC,EAFmC,UAEnCA,EAFmC;AAAA,MAGnCC,KAHmC,UAGnCA,KAHmC;AAAA,MAInCC,WAJmC,UAInCA,WAJmC;AAAA,MAKnCC,SALmC,UAKnCA,SALmC;AAAA,MAMnCC,IANmC,UAMnCA,IANmC;AAAA,MAOnCC,KAPmC,UAOnCA,KAPmC;AAAA,MAQnCC,OARmC,UAQnCA,OARmC;AAAA,MASnCC,SATmC,UASnCA,SATmC;AAAA,MAUnCC,QAVmC,UAUnCA,QAVmC;AAAA,MAWnCC,MAXmC,UAWnCA,MAXmC;AAAA,MAYnCC,IAZmC,UAYnCA,IAZmC;;AAAA,kBAcCnB,QAAQ,CAACe,OAAD,CAdT;AAAA,MAc9BK,WAd8B;AAAA,MAcjBC,cAdiB;;AAAA,mBAeKrB,QAAQ,CAACgB,SAAD,CAfb;AAAA,MAe9BM,aAf8B;AAAA,MAefC,gBAfe;;AAAA,qBAiBIpB,WAAW,CAACG,YAAD,CAjBf;AAAA;AAAA,MAiB9BkB,IAjB8B;AAAA,MAiBbC,WAjBa,oBAiBtBC,OAjBsB;;AAAA,sBAkBQvB,WAAW,CAACE,kBAAD,CAlBnB;AAAA;AAAA,MAkB9BsB,MAlB8B;AAAA,MAkBXC,aAlBW,oBAkBpBF,OAlBoB,EAoBrC;;;AACA,MAAMG,UAAU,GAAG5B,WAAW,CAAC,YAAM;AACnCC,IAAAA,MAAM,CAAC4B,IAAP,iBAAqBX,IAAI,CAACV,EAA1B;AACD,GAF6B,EAE3B,EAF2B,CAA9B,CArBqC,CAyBrC;;AACA,MAAMsB,UAAU,GAAG9B,WAAW,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACzBwB,WADyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAKnBD,IAAI,CAAC;AACbQ,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,MAAM,EAAExB;AAAV;AADE,aAAD,CALe;;AAAA;AAAA;AAInByB,YAAAA,QAJmB,eAI3BC,IAJ2B,CAInBD,QAJmB;;AAS7B,gBAAIA,QAAJ,EAAc;AACZ,kBAAId,WAAJ,EAAiB;AACfC,gBAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,gBAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,eAHD,MAGO;AACLD,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,gBAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF;;AAjB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAkB3B,CAACF,WAAD,EAAcE,aAAd,EAA6BG,WAA7B,CAlB2B,CAA9B,CA1BqC,CA8CrC;;AACA,MAAMW,YAAY,GAAGnC,WAAW,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC3B2B,aAD2B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,iBAE3BS,OAAO,CAAC,mBAAD,CAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKnBV,MAAM,CAAC;AACfK,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,MAAM,EAAExB;AAAV;AADI,aAAD,CALa;;AAAA;AAAA;AAInB6B,YAAAA,UAJmB,iBAI3BH,IAJ2B,CAInBG,UAJmB;;AAS7B,gBAAIA,UAAJ,EAAgB;AACdC,cAAAA,KAAK,CAAC,kBAAD,CAAL;AACAC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,aAHD,MAGO;AACLH,cAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;;AAd4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAgB7B,CAACX,aAAD,CAhB6B,CAAhC;AAkBA,SACE,MAAC,aAAD;AACE,IAAA,EAAE,EAAEnB,EADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,MAAM,EAAEO,MAJV;AAKE,IAAA,SAAS,EAAEN,SALb;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,KAAK,EAAEC,KAPT;AAQE,IAAA,OAAO,EAAEM,WARX;AASE,IAAA,SAAS,EAAEE,aATb;AAUE,IAAA,QAAQ,EAAEL,QAVZ;AAWE,IAAA,WAAW,EAAEc,UAXf;AAYE,IAAA,WAAW,EAAEF,UAZf;AAaE,IAAA,aAAa,EAAEO;AAbjB,IADF;AAiBD,CAlFD;;GAAM7B,a;UAiBqCJ,W,EACIA,W;;;KAlBzCI,a;AAoFN,eAAeA,aAAf","sourcesContent":["import React, { useState, useCallback, FC } from \"react\";\nimport Router from \"next/router\";\nimport { useMutation } from \"@apollo/client\";\nimport PostPresenter from \"./PostPresenter\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport { likeMutation } from \"../../graphql/post/mutation/like\";\n\nexport type Props = {\n  id: string;\n  title: string;\n  description: string;\n  video: any;\n  user: any;\n  likes: any;\n  createdAt: string;\n  updatedAt: string;\n  status: any;\n  isLiked: boolean;\n  likeCount: number;\n  isMyPost: boolean;\n  room: any;\n};\n\nconst PostContainer: FC<Props> = () => {\n  const {\n    id,\n    title,\n    description,\n    createdAt,\n    user,\n    video,\n    isLiked,\n    likeCount,\n    isMyPost,\n    status,\n    room\n  } = props;\n  const [ctrlIsLiked, setCtrlIsLiked] = useState(isLiked);\n  const [ctrlLikeCount, setCtrlLikeCount] = useState(likeCount);\n\n  const [like, { loading: likeLoading }] = useMutation(likeMutation);\n  const [remove, { loading: removeLoading }] = useMutation(removePostMutation);\n\n  // 포스트 채팅방 접근 이벤트\n  const handleRoom = useCallback(() => {\n    Router.push(`/room/${room.id}`);\n  }, []);\n\n  // 좋아요 / 좋아요 취소 이벤트\n  const handleLike = useCallback(async () => {\n    if (likeLoading) return;\n\n    const {\n      data: { likePost }\n    } = await like({\n      variables: { postId: id }\n    });\n\n    if (likePost) {\n      if (ctrlIsLiked) {\n        setCtrlIsLiked(false);\n        setCtrlLikeCount(ctrlLikeCount - 1);\n      } else {\n        setCtrlIsLiked(true);\n        setCtrlLikeCount(ctrlLikeCount + 1);\n      }\n    }\n  }, [ctrlIsLiked, ctrlLikeCount, likeLoading]);\n\n  // 삭제 이벤트\n  const handleDelete = useCallback(async () => {\n    if (removeLoading) return;\n    if (confirm(\"해당 포스트를 삭제하시겠습니까?\")) {\n      const {\n        data: { deletePost }\n      } = await remove({\n        variables: { postId: id }\n      });\n\n      if (deletePost) {\n        alert(\"해당 포스트가 삭제되었습니다.\");\n        window.location.reload();\n      } else {\n        alert(\"포스트 삭제 중 오류가 발생했습니다.\");\n      }\n    }\n  }, [removeLoading]);\n\n  return (\n    <PostPresenter\n      id={id}\n      title={title}\n      description={description}\n      status={status}\n      createdAt={createdAt}\n      user={user}\n      video={video}\n      isLiked={ctrlIsLiked}\n      likeCount={ctrlLikeCount}\n      isMyPost={isMyPost}\n      onClickLike={handleLike}\n      onClickRoom={handleRoom}\n      onClickDelete={handleDelete}\n    />\n  );\n};\n\nexport default PostContainer;\n"]},"metadata":{},"sourceType":"module"}