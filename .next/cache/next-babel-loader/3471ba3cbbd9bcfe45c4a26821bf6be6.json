{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button, ProgressBar } from \"react-bootstrap\";\nimport Loader from \"../common/Loader\";\nimport { Upload } from \"../icon\";\nconst UploadWrapper = styled.div.withConfig({\n  displayName: \"SetPostPresenter__UploadWrapper\",\n  componentId: \"sc-17w3pe5-0\"\n})([\"\", \";background:\", \";width:100%;height:300px;cursor:pointer;padding:10px;display:flex;justify-content:center;align-items:center;\"], props => props.theme.whiteBox, props => props.theme.bgColor);\nconst GuideLine = styled.div.withConfig({\n  displayName: \"SetPostPresenter__GuideLine\",\n  componentId: \"sc-17w3pe5-1\"\n})([\"flex:1;display:flex;flex-direction:column;text-align:center;padding:10px;& > div{flex:1;padding:10px;}\"]);\n\nconst SetNoticePresenter = ({\n  loading,\n  header,\n  title,\n  description,\n  status,\n  progress,\n  file,\n  fileEl,\n  onClickFile,\n  onChangeFile,\n  onClose,\n  onSubmit\n}) => __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n  onHide: onClose,\n  animation: true,\n  show: true\n}, __jsx(Modal.Header, {\n  closeButton: true\n}, __jsx(Modal.Title, null, header)), __jsx(Modal.Body, null, !file && __jsx(UploadWrapper, {\n  onClick: onClickFile\n}, __jsx(GuideLine, null, progress > 0 && __jsx(\"div\", null, __jsx(ProgressBar, {\n  now: progress,\n  label: `${progress}%`,\n  style: {\n    width: \"100%\"\n  }\n})), progress === 0 && __jsx(\"div\", null, __jsx(Upload, null)), progress === 0 && __jsx(\"div\", null, \"\\uC601\\uC0C1\\uC744 \\uC5C5\\uB85C\\uB4DC\\uD558\\uB824\\uBA74 \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"), progress === 0 && __jsx(\"div\", null, __jsx(Button, {\n  variant: \"primary\"\n}, \"\\uD30C\\uC77C\\uC120\\uD0DD\"))), __jsx(\"input\", {\n  type: \"file\",\n  onChange: onChangeFile,\n  ref: fileEl,\n  hidden: true,\n  accept: \"video/*\"\n}))), __jsx(Modal.Footer, null, __jsx(Button, {\n  variant: \"info\",\n  onClick: onClose\n}, \"\\uCDE8\\uC18C\"), file && __jsx(Button, {\n  variant: \"primary\",\n  onClick: onSubmit\n}, action.code === \"add\" ? \"등록\" : \"수정\"))));\n\nexport default SetNoticePresenter;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SetPostPresenter.tsx"],"names":["React","Fragment","styled","Modal","Button","ProgressBar","Loader","Upload","UploadWrapper","div","props","theme","whiteBox","bgColor","GuideLine","SetNoticePresenter","loading","header","title","description","status","progress","file","fileEl","onClickFile","onChangeFile","onClose","onSubmit","width","action","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,iBAA3C;AAIA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,yIACfC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QADN,EAEHF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,OAFlB,CAAnB;AAYA,MAAMC,SAAS,GAAGZ,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,8GAAf;;AA6BA,MAAMM,kBAA6B,GAAG,CAAC;AACrCC,EAAAA,OADqC;AAErCC,EAAAA,MAFqC;AAGrCC,EAAAA,KAHqC;AAIrCC,EAAAA,WAJqC;AAKrCC,EAAAA,MALqC;AAMrCC,EAAAA,QANqC;AAOrCC,EAAAA,IAPqC;AAQrCC,EAAAA,MARqC;AASrCC,EAAAA,WATqC;AAUrCC,EAAAA,YAVqC;AAWrCC,EAAAA,OAXqC;AAYrCC,EAAAA;AAZqC,CAAD,KAcpC,MAAC,QAAD,QACGX,OAAO,IAAI,MAAC,MAAD,OADd,EAEE,MAAC,KAAD;AAAO,EAAA,MAAM,EAAEU,OAAf;AAAwB,EAAA,SAAS,EAAE,IAAnC;AAAyC,EAAA,IAAI;AAA7C,GACE,MAAC,KAAD,CAAO,MAAP;AAAc,EAAA,WAAW;AAAzB,GACE,MAAC,KAAD,CAAO,KAAP,QAAcT,MAAd,CADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACG,CAACK,IAAD,IACC,MAAC,aAAD;AAAe,EAAA,OAAO,EAAEE;AAAxB,GACE,MAAC,SAAD,QACGH,QAAQ,GAAG,CAAX,IACC,mBACE,MAAC,WAAD;AACE,EAAA,GAAG,EAAEA,QADP;AAEE,EAAA,KAAK,EAAG,GAAEA,QAAS,GAFrB;AAGE,EAAA,KAAK,EAAE;AAAEO,IAAAA,KAAK,EAAE;AAAT;AAHT,EADF,CAFJ,EAWGP,QAAQ,KAAK,CAAb,IACC,mBACE,MAAC,MAAD,OADF,CAZJ,EAiBGA,QAAQ,KAAK,CAAb,IAAkB,6GAjBrB,EAmBGA,QAAQ,KAAK,CAAb,IACC,mBACE,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC;AAAhB,8BADF,CApBJ,CADF,EA2BE;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,QAAQ,EAAEI,YAFZ;AAGE,EAAA,GAAG,EAAEF,MAHP;AAIE,EAAA,MAAM,MAJR;AAKE,EAAA,MAAM,EAAC;AALT,EA3BF,CAFJ,CAJF,EA2CE,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,MAAhB;AAAuB,EAAA,OAAO,EAAEG;AAAhC,kBADF,EAIGJ,IAAI,IACH,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,SAAhB;AAA0B,EAAA,OAAO,EAAEK;AAAnC,GACGE,MAAM,CAACC,IAAP,KAAgB,KAAhB,GAAwB,IAAxB,GAA+B,IADlC,CALJ,CA3CF,CAFF,CAdF;;AAyEA,eAAef,kBAAf","sourcesContent":["import React, { Fragment, FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button, ProgressBar } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { Label } from \"../common/Form\";\nimport { UseInputProps } from \"../../hooks\";\nimport Loader from \"../common/Loader\";\nimport { Upload } from \"../icon\";\n\nconst UploadWrapper = styled.div`\n  ${props => props.theme.whiteBox};\n  background: ${props => props.theme.bgColor};\n  width: 100%;\n  height: 300px;\n  cursor: pointer;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst GuideLine = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  text-align: center;\n  padding: 10px;\n\n  & > div {\n    flex: 1;\n    padding: 10px;\n  }\n`;\n\ntype Props = {\n  loading: boolean;\n  header: string;\n  title: UseInputProps;\n  description: UseInputProps;\n  status: UseInputProps;\n  progress: number;\n  file: string;\n  fileEl: any;\n  onClickFile: any;\n  onChangeFile: any;\n  onClose: any;\n  onSubmit: any;\n};\n\nconst SetNoticePresenter: FC<Props> = ({\n  loading,\n  header,\n  title,\n  description,\n  status,\n  progress,\n  file,\n  fileEl,\n  onClickFile,\n  onChangeFile,\n  onClose,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={true} show>\n      <Modal.Header closeButton>\n        <Modal.Title>{header}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!file && (\n          <UploadWrapper onClick={onClickFile}>\n            <GuideLine>\n              {progress > 0 && (\n                <div>\n                  <ProgressBar\n                    now={progress}\n                    label={`${progress}%`}\n                    style={{ width: \"100%\" }}\n                  />\n                </div>\n              )}\n\n              {progress === 0 && (\n                <div>\n                  <Upload />\n                </div>\n              )}\n\n              {progress === 0 && <div>영상을 업로드하려면 클릭하세요.</div>}\n\n              {progress === 0 && (\n                <div>\n                  <Button variant=\"primary\">파일선택</Button>\n                </div>\n              )}\n            </GuideLine>\n\n            <input\n              type=\"file\"\n              onChange={onChangeFile}\n              ref={fileEl}\n              hidden\n              accept=\"video/*\"\n            />\n          </UploadWrapper>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"info\" onClick={onClose}>\n          취소\n        </Button>\n        {file && (\n          <Button variant=\"primary\" onClick={onSubmit}>\n            {action.code === \"add\" ? \"등록\" : \"수정\"}\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  </Fragment>\n);\n\nexport default SetNoticePresenter;\n"]},"metadata":{},"sourceType":"module"}