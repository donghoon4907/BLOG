{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport PostContainer from \"../post/PostContainer\";\nimport NoData from \"../common/NoData\";\nimport Subject from \"../common/Subject\";\nvar Filter = styled.div.withConfig({\n  displayName: \"SearchPostPresenter__Filter\",\n  componentId: \"sc-3o7za7-0\"\n})([\"\", \";width:100%;height:auto;margin-bottom:30px;& .accordion{width:100%;}& .card{border:none;}& .card-header{border:none;cursor:pointer;background:\", \";}& .table thead th{border:none;border-bottom:\", \";}& td{border:none;}\"], function (props) {\n  return props.theme.whiteBox;\n}, function (props) {\n  return props.theme.bgColor;\n}, function (props) {\n  return props.theme.boxBorder;\n});\n_c = Filter;\nvar StyledTd = styled.td.withConfig({\n  displayName: \"SearchPostPresenter__StyledTd\",\n  componentId: \"sc-3o7za7-1\"\n})([\"cursor:pointer;font-weight:\", \";\"], function (props) {\n  return props.active ? \"bold\" : 500;\n});\n_c2 = StyledTd;\n\nvar SearchPostPresenter = function SearchPostPresenter(_ref) {\n  var posts = _ref.posts,\n      orderBy = _ref.orderBy,\n      onSort = _ref.onSort;\n  return __jsx(React.Fragment, null, __jsx(Subject, null, \"\\uD3EC\\uC2A4\\uD2B8 \\uAC80\\uC0C9\\uACB0\\uACFC\"), posts.length > 0 && __jsx(Filter, null, __jsx(Accordion, null, __jsx(Card, null, __jsx(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"0\"\n  }, __jsx(\"h1\", null, \"\\uD544\\uD130\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(Card.Body, null, __jsx(Table, {\n    responsive: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"\\uC815\\uB82C\\uAE30\\uC900\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"createdAt_DESC\");\n    },\n    active: orderBy === \"createdAt_DESC\"\n  }, \"\\uB4F1\\uB85D\\uC77C \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"createdAt_ASC\");\n    },\n    active: orderBy === \"createdAt_ASC\"\n  }, \"\\uB4F1\\uB85D\\uC77C \\uC5ED\\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"title_ASC\");\n    },\n    active: orderBy === \"title_ASC\"\n  }, \"\\uAC00\\uB098\\uB2E4 \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"title_DESC\");\n    },\n    active: orderBy === \"title_DESC\"\n  }, \"\\uAC00\\uB098\\uB2E4 \\uC5ED\\uC21C\"))))))))), posts.length > 0 ? posts.map(function (post) {\n    return __jsx(PostContainer, _extends({\n      key: post.id\n    }, post));\n  }) : __jsx(NoData, null, \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"));\n};\n\n_c3 = SearchPostPresenter;\nexport default SearchPostPresenter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"StyledTd\");\n$RefreshReg$(_c3, \"SearchPostPresenter\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchPostPresenter.tsx"],"names":["React","styled","Accordion","Card","Table","PostContainer","NoData","Subject","Filter","div","props","theme","whiteBox","bgColor","boxBorder","StyledTd","td","active","SearchPostPresenter","posts","orderBy","onSort","length","Header","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,IAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,qOACR,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CADG,EAiBM,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYE,OAAhB;AAAA,CAjBX,EAsBS,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYG,SAAhB;AAAA,CAtBd,CAAZ;KAAMN,M;AA8BN,IAAMO,QAAQ,GAAGd,MAAM,CAACe,EAAV;AAAA;AAAA;AAAA,yCAEG,UAAAN,KAAK;AAAA,SAAKA,KAAK,CAACO,MAAN,GAAe,MAAf,GAAwB,GAA7B;AAAA,CAFR,CAAd;MAAMF,Q;;AAWN,IAAMG,mBAA8B,GAAG,SAAjCA,mBAAiC;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,MAAnB,QAAmBA,MAAnB;AAAA,SACrC,4BACE,MAAC,OAAD,sDADF,EAEGF,KAAK,CAACG,MAAN,GAAe,CAAf,IACC,MAAC,MAAD,QACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,MAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAEnB,IAAI,CAACoB,MAA3B;AAAmC,IAAA,QAAQ,EAAC;AAA5C,KACE,iCADF,CADF,EAIE,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC;AAA7B,KACE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,KAAD;AAAO,IAAA,UAAU;AAAjB,KACE,qBACE,kBACE,6CADF,CADF,CADF,EAME,qBACE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMF,MAAM,CAAC,gBAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,iCADF,CADF,EASE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,CAAC,eAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,uCADF,CATF,EAiBE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,CAAC,WAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,iCADF,CAjBF,EAyBE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,CAAC,YAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAED,OAAO,KAAK;AAFtB,uCADF,CAzBF,CANF,CADF,CADF,CAJF,CADF,CADF,CAHJ,EA0DGD,KAAK,CAACG,MAAN,GAAe,CAAf,GACCH,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAI,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,OAAiCD,IAAjC,EAAJ;AAAA,GAAd,CADD,GAGC,MAAC,MAAD,oEA7DJ,CADqC;AAAA,CAAvC;;MAAMP,mB;AAmEN,eAAeA,mBAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport PostContainer from \"../post/PostContainer\";\nimport NoData from \"../common/NoData\";\nimport Subject from \"../common/Subject\";\n\nconst Filter = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  height: auto;\n  margin-bottom: 30px;\n\n  & .accordion {\n    width: 100%;\n  }\n\n  & .card {\n    border: none;\n  }\n\n  & .card-header {\n    border: none;\n    cursor: pointer;\n    background: ${props => props.theme.bgColor};\n  }\n\n  & .table thead th {\n    border: none;\n    border-bottom: ${props => props.theme.boxBorder};\n  }\n\n  & td {\n    border: none;\n  }\n`;\n\nconst StyledTd = styled.td<{ active?: boolean }>`\n  cursor: pointer;\n  font-weight: ${props => (props.active ? \"bold\" : 500)};\n`;\n\ntype Props = {\n  posts: any;\n  orderBy: string;\n  onSort: any;\n};\n\nconst SearchPostPresenter: FC<Props> = ({ posts, orderBy, onSort }) => (\n  <>\n    <Subject>포스트 검색결과</Subject>\n    {posts.length > 0 && (\n      <Filter>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              <h1>필터</h1>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>정렬기준</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_DESC\")}\n                        active={orderBy === \"createdAt_DESC\"}\n                      >\n                        등록일 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_ASC\")}\n                        active={orderBy === \"createdAt_ASC\"}\n                      >\n                        등록일 역순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_ASC\")}\n                        active={orderBy === \"title_ASC\"}\n                      >\n                        가나다 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_DESC\")}\n                        active={orderBy === \"title_DESC\"}\n                      >\n                        가나다 역순\n                      </StyledTd>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Filter>\n    )}\n    {posts.length > 0 ? (\n      posts.map(post => <PostContainer key={post.id} {...post} />)\n    ) : (\n      <NoData>검색 결과가 없습니다.</NoData>\n    )}\n  </>\n);\n\nexport default SearchPostPresenter;\n"]},"metadata":{},"sourceType":"module"}