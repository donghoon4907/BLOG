{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { postsQuery } from \"../graphql/post/query\";\n\nconst Index = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    isAuthenticated();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: postsQuery,\n    variables: {\n      first: 10\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}\nexport default Index;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/index.tsx"],"names":["React","useEffect","useState","Fragment","Layout","Feed","isAuthenticated","initializeApollo","postsQuery","Index","loading","setLoading","getStaticProps","apolloClient","query","variables","first","props","initialApolloState","cache","extract","revalidate"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,KAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,eAAe;AACfK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAID,OAAJ,EAAa;AACX,WAAO,MAAC,QAAD,OAAP;AACD;;AAED,SACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF;AAKD,CAhBD;;AAkBA,OAAO,eAAeE,cAAf,GAAgC;AACrC,QAAMC,YAAY,GAAGN,gBAAgB,EAArC;AAEA,QAAMM,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEN,UADgB;AAEvBO,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAFY,GAAnB,CAAN;AAOA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEL,YAAY,CAACM,KAAb,CAAmBC,OAAnB;AADf,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAeZ,KAAf","sourcesContent":["import React, { FC, useEffect, useState, Fragment } from \"react\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { postsQuery } from \"../graphql/post/query\";\n\nconst Index: FC = () => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    isAuthenticated();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return <Fragment />;\n  }\n\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: postsQuery,\n    variables: {\n      first: 10\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}