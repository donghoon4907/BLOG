{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\nconst NoticeWrapper = styled.div.withConfig({\n  displayName: \"NoticeList__NoticeWrapper\",\n  componentId: \"ztp66g-0\"\n})([\"height:50px;display:flex;flex-direction:column;justify-content:center;margin-right:15%;margin-left:15%;padding:5px;text-align:center;cursor:pointer;\"]);\n\nconst NoticeList = () => {\n  const dispatch = useVssDispatch();\n  const {\n    isMaster\n  } = useVssState();\n  const {\n    data\n  } = useQuery(noticesQuery, {\n    variables: {\n      first: 10\n    }\n  });\n  const handleClick = useCallback((title, description, noticeId) => {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: isMaster ? \"modifiable\" : \"readonly\",\n      actionText: \"\",\n      title,\n      description,\n      noticeId\n    });\n  }, [isMaster]);\n  return __jsx(CarouselContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, data.getNotices.map(({\n    id,\n    title,\n    description,\n    updatedAt\n  }) => __jsx(Carousel.Item, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(NoticeWrapper, {\n    onClick: () => handleClick(title, description, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, title), __jsx(Timestamp, {\n    text: updatedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default NoticeList;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx"],"names":["React","useCallback","styled","useQuery","Carousel","noticesQuery","CarouselContainer","Timestamp","useVssState","useVssDispatch","SHOW_NOTICE_MODAL","NoticeWrapper","div","NoticeList","dispatch","isMaster","data","variables","first","handleClick","title","description","noticeId","type","action","actionText","getNotices","map","id","updatedAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,4JAAnB;;AAYA,MAAMC,UAAc,GAAG,MAAM;AAC3B,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAWb,QAAQ,CAACE,YAAD,EAAe;AACtCY,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAD2B,GAAf,CAAzB;AAMA,QAAMC,WAAW,GAAGlB,WAAW,CAC7B,CAACmB,KAAD,EAAQC,WAAR,EAAqBC,QAArB,KAAkC;AAChCR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,iBADC;AAEPc,MAAAA,MAAM,EAAET,QAAQ,GAAG,YAAH,GAAkB,UAF3B;AAGPU,MAAAA,UAAU,EAAE,EAHL;AAIPL,MAAAA,KAJO;AAKPC,MAAAA,WALO;AAMPC,MAAAA;AANO,KAAD,CAAR;AAQD,GAV4B,EAW7B,CAACP,QAAD,CAX6B,CAA/B;AAcA,SACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACU,UAAL,CAAgBC,GAAhB,CAAoB,CAAC;AAAEC,IAAAA,EAAF;AAAMR,IAAAA,KAAN;AAAaC,IAAAA,WAAb;AAA0BQ,IAAAA;AAA1B,GAAD,KACnB,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAED,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAE,MAAMT,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBO,EAArB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,KAAN,CADF,EAEE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAES,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADD,CADH,CADF;AAYD,CApCD;;AAsCA,eAAehB,UAAf","sourcesContent":["import React, { useCallback, FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nconst NoticeWrapper = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-right: 15%;\n  margin-left: 15%;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst NoticeList: FC = () => {\n  const dispatch = useVssDispatch();\n  const { isMaster } = useVssState();\n\n  const { data } = useQuery(noticesQuery, {\n    variables: {\n      first: 10\n    }\n  });\n\n  const handleClick = useCallback(\n    (title, description, noticeId) => {\n      dispatch({\n        type: SHOW_NOTICE_MODAL,\n        action: isMaster ? \"modifiable\" : \"readonly\",\n        actionText: \"\",\n        title,\n        description,\n        noticeId\n      });\n    },\n    [isMaster]\n  );\n\n  return (\n    <CarouselContainer>\n      {data.getNotices.map(({ id, title, description, updatedAt }) => (\n        <Carousel.Item key={id}>\n          <NoticeWrapper onClick={() => handleClick(title, description, id)}>\n            <div>{title}</div>\n            <Timestamp text={updatedAt} />\n          </NoticeWrapper>\n        </Carousel.Item>\n      ))}\n    </CarouselContainer>\n  );\n};\n\nexport default NoticeList;\n"]},"metadata":{},"sourceType":"module"}