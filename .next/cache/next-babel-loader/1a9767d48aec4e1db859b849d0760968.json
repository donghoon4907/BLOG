{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nvar Index = function Index() {\n  _s();\n\n  var dispatch = useVssDispatch();\n\n  var _useQuery = useQuery(meQuery),\n      data = _useQuery.data;\n\n  if (data) {\n    var _data$getMyProfile = data.getMyProfile,\n        id = _data$getMyProfile.id,\n        nickname = _data$getMyProfile.nickname,\n        email = _data$getMyProfile.email,\n        avatar = _data$getMyProfile.avatar,\n        isMaster = _data$getMyProfile.isMaster;\n    console.log(id);\n    dispatch({\n      type: SET_ME,\n      id: id,\n      nickname: nickname,\n      email: email,\n      avatar: avatar,\n      isMaster: isMaster\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\n_s(Index, \"+JR9y/Ob2wwnxdhayHC/aQ102qM=\", false, function () {\n  return [useVssDispatch, useQuery];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/index.tsx"],"names":["React","useQuery","Layout","Feed","meQuery","useVssDispatch","SET_ME","Index","dispatch","data","getMyProfile","id","nickname","email","avatar","isMaster","console","log","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;;AAEA,IAAMC,KAAS,GAAG,SAAZA,KAAY,GAAM;AAAA;;AACtB,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;;AADsB,kBAELJ,QAAQ,CAACG,OAAD,CAFH;AAAA,MAEdK,IAFc,aAEdA,IAFc;;AAItB,MAAIA,IAAJ,EAAU;AAAA,6BAC0CA,IAAI,CAACC,YAD/C;AAAA,QACAC,EADA,sBACAA,EADA;AAAA,QACIC,QADJ,sBACIA,QADJ;AAAA,QACcC,KADd,sBACcA,KADd;AAAA,QACqBC,MADrB,sBACqBA,MADrB;AAAA,QAC6BC,QAD7B,sBAC6BA,QAD7B;AAERC,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEZ,MADC;AAEPK,MAAAA,EAAE,EAAFA,EAFO;AAGPC,MAAAA,QAAQ,EAARA,QAHO;AAIPC,MAAAA,KAAK,EAALA,KAJO;AAKPC,MAAAA,MAAM,EAANA,MALO;AAMPC,MAAAA,QAAQ,EAARA;AANO,KAAD,CAAR;AAQD;;AAED,SACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF;AAKD,CAtBD;;GAAMR,K;UACaF,c,EACAJ,Q;;;KAFbM,K;;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nconst Index: FC = () => {\n  const dispatch = useVssDispatch();\n  const { data } = useQuery(meQuery);\n\n  if (data) {\n    const { id, nickname, email, avatar, isMaster } = data.getMyProfile;\n    console.log(id);\n    dispatch({\n      type: SET_ME,\n      id,\n      nickname,\n      email,\n      avatar,\n      isMaster\n    });\n  }\n\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}