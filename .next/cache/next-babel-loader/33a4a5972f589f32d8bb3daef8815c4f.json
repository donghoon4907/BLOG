{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/feed/PostList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, memo } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport PostContainer from \"../post/PostContainer\";\nimport Loader from \"../common/Loader\";\n\nconst PostList = () => {\n  const {\n    data,\n    loading,\n    fetchMore,\n    networkStatus\n  } = useQuery(postsQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const handleScrollFetchMore = () => {\n    if (loading) return;\n    const {\n      scrollHeight,\n      clientHeight,\n      scrollTop\n    } = document.documentElement;\n\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  console.log(data);\n\n  const mapToPosts = () => data.getPosts.map(post => __jsx(PostContainer, _extends({\n    key: post.id\n  }, post, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 31\n    }\n  })));\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return () => window.removeEventListener(\"scroll\", handleScrollFetchMore);\n  }, [data.getPosts, loading]);\n  return __jsx(React.Fragment, null, loading && loadingMorePosts && __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 39\n    }\n  }), mapToPosts());\n};\n\nexport default memo(PostList);","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/PostList.tsx"],"names":["React","useEffect","memo","useQuery","NetworkStatus","postsQuery","PostContainer","Loader","PostList","data","loading","fetchMore","networkStatus","variables","first","notifyOnNetworkStatusChange","loadingMorePosts","handleScrollFetchMore","scrollHeight","clientHeight","scrollTop","document","documentElement","getPosts","length","skip","console","log","mapToPosts","map","post","id","window","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA+BC,IAA/B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,gBAAxC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,QAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,MAA8CT,QAAQ,CAACE,UAAD,EAAa;AACvEQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE,KAD4D;AAIvEC,IAAAA,2BAA2B,EAAE;AAJ0C,GAAb,CAA5D;AAOA,QAAMC,gBAAgB,GAAGJ,aAAa,KAAKR,aAAa,CAACO,SAAzD;;AAEA,QAAMM,qBAAqB,GAAG,MAAM;AAClC,QAAIP,OAAJ,EAAa;AACb,UAAM;AAAEQ,MAAAA,YAAF;AAAgBC,MAAAA,YAAhB;AAA8BC,MAAAA;AAA9B,QAA4CC,QAAQ,CAACC,eAA3D;;AACA,QAAIb,IAAI,CAACc,QAAT,EAAmB;AACjB,UAAIH,SAAS,GAAGD,YAAZ,KAA6BD,YAAjC,EAA+C;AAC7C,YAAIT,IAAI,CAACc,QAAL,CAAcC,MAAd,GAAuB,EAAvB,KAA8B,CAAlC,EAAqC;AACnCb,UAAAA,SAAS,CAAC;AACRE,YAAAA,SAAS,EAAE;AACTY,cAAAA,IAAI,EAAEhB,IAAI,CAACc,QAAL,CAAcC;AADX;AADH,WAAD,CAAT;AAKD;AACF;AACF;AACF,GAdD;;AAeAE,EAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;;AACA,QAAMmB,UAAU,GAAG,MACjBnB,IAAI,CAACc,QAAL,CAAcM,GAAd,CAAkBC,IAAI,IAAI,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,KAAiCD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B,CADF;;AAGA7B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkChB,qBAAlC;AACA,WAAO,MAAMe,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCjB,qBAArC,CAAb;AACD,GAHQ,EAGN,CAACR,IAAI,CAACc,QAAN,EAAgBb,OAAhB,CAHM,CAAT;AAKA,SACE,4BACGA,OAAO,IAAIM,gBAAX,IAA+B,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,EAEGY,UAAU,EAFb,CADF;AAMD,CAxCD;;AA0CA,eAAe1B,IAAI,CAACM,QAAD,CAAnB","sourcesContent":["import React, { useEffect, FC, memo } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport PostContainer from \"../post/PostContainer\";\nimport Loader from \"../common/Loader\";\n\nconst PostList: FC = () => {\n  const { data, loading, fetchMore, networkStatus } = useQuery(postsQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const handleScrollFetchMore = () => {\n    if (loading) return;\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n  console.log(data);\n  const mapToPosts = () =>\n    data.getPosts.map(post => <PostContainer key={post.id} {...post} />);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return () => window.removeEventListener(\"scroll\", handleScrollFetchMore);\n  }, [data.getPosts, loading]);\n\n  return (\n    <>\n      {loading && loadingMorePosts && <Loader />}\n      {mapToPosts()}\n    </>\n  );\n};\n\nexport default memo(PostList);\n"]},"metadata":{},"sourceType":"module"}