{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useInput = defaultValue => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue);\n  const onChange = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return {\n    value,\n    onChange,\n    setValue\n  };\n};\nexport const useDebounce = (defaultValue, delay) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: state,\n    1: setState\n  } = useState(defaultValue);\n  useEffect(() => {\n    if (value === state) return;\n    const timeout = setTimeout(() => setValue(state), delay);\n    return () => clearTimeout(timeout);\n  }, [value, state]);\n  return [value, setState];\n};\nexport const useLazyAxios = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const call = useCallback(async options => {\n    const result = {};\n    console.log(options);\n    setLoading(true);\n\n    try {\n      const {\n        data\n      } = await axios(options);\n      result[\"data\"] = data;\n    } catch (error) {\n      result[\"error\"] = error;\n    }\n\n    setLoading(false);\n    return result;\n  }, [loading]);\n  return {\n    loading,\n    call\n  };\n};","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/hooks/index.ts"],"names":["useState","useCallback","useEffect","axios","useInput","defaultValue","value","setValue","onChange","e","target","useDebounce","delay","state","setState","timeout","setTimeout","clearTimeout","useLazyAxios","loading","setLoading","call","options","result","console","log","data","error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAa,GAAIC,YAAD,IAA0B;AACrD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAASK,YAAT,CAAlC;AAEA,QAAMG,QAAQ,GAAGP,WAAW,CAAEQ,CAAD,IAAsC;AACjEF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,SAAO;AAAEA,IAAAA,KAAF;AAASE,IAAAA,QAAT;AAAmBD,IAAAA;AAAnB,GAAP;AACD,CARM;AAUP,OAAO,MAAMI,WAAgB,GAAG,CAACN,YAAD,EAAuBO,KAAvB,KAAyC;AACvE,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAASK,YAAT,CAAlC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,KAAKO,KAAd,EAAqB;AACrB,UAAME,OAAO,GAAGC,UAAU,CAAC,MAAMT,QAAQ,CAACM,KAAD,CAAf,EAAwBD,KAAxB,CAA1B;AAEA,WAAO,MAAMK,YAAY,CAACF,OAAD,CAAzB;AACD,GALQ,EAKN,CAACT,KAAD,EAAQO,KAAR,CALM,CAAT;AAOA,SAAO,CAACP,KAAD,EAAQQ,QAAR,CAAP;AACD,CAZM;AAcP,OAAO,MAAMI,YAAiB,GAAG,MAAM;AACrC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMqB,IAAI,GAAGpB,WAAW,CACtB,MAAMqB,OAAN,IAAiB;AACf,UAAMC,MAAW,GAAG,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAM;AAAEM,QAAAA;AAAF,UAAW,MAAMvB,KAAK,CAACmB,OAAD,CAA5B;AACAC,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBG,IAAjB;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBI,KAAlB;AACD;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAAOG,MAAP;AACD,GAbqB,EActB,CAACJ,OAAD,CAdsB,CAAxB;AAiBA,SAAO;AAAEA,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACD,CArBM","sourcesContent":["import { useState, useCallback, useEffect, ChangeEvent } from \"react\";\nimport axios from \"axios\";\n\nexport const useInput: any = (defaultValue: string) => {\n  const [value, setValue] = useState<string>(defaultValue);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  return { value, onChange, setValue };\n};\n\nexport const useDebounce: any = (defaultValue: string, delay: number) => {\n  const [value, setValue] = useState<string>(\"\");\n  const [state, setState] = useState<string>(defaultValue);\n\n  useEffect(() => {\n    if (value === state) return;\n    const timeout = setTimeout(() => setValue(state), delay);\n\n    return () => clearTimeout(timeout);\n  }, [value, state]);\n\n  return [value, setState];\n};\n\nexport const useLazyAxios: any = () => {\n  const [loading, setLoading] = useState(false);\n\n  const call = useCallback(\n    async options => {\n      const result: any = {};\n      console.log(options);\n      setLoading(true);\n      try {\n        const { data } = await axios(options);\n        result[\"data\"] = data;\n      } catch (error) {\n        result[\"error\"] = error;\n      }\n      setLoading(false);\n      return result;\n    },\n    [loading]\n  );\n\n  return { loading, call };\n};\n"]},"metadata":{},"sourceType":"module"}