{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"github-markdown-css/github-markdown.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ThemeProvider } from \"styled-components\";\nimport { VssProvider } from \"../context\";\nimport { withApollo } from \"../lib/apollo\";\nimport GlobalStyle from \"../theme/globalStyle\";\nimport theme from \"../theme\";\n\nvar AppComponent = /*#__PURE__*/function (_App) {\n  _inherits(AppComponent, _App);\n\n  var _super = _createSuper(AppComponent);\n\n  function AppComponent() {\n    _classCallCheck(this, AppComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient;\n      return __jsx(ApolloProvider, {\n        client: apolloClient\n      }, __jsx(GlobalStyle, null), __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(VssProvider, null, __jsx(Component, pageProps))));\n    }\n  }]);\n\n  return AppComponent;\n}(App);\n\nexport default withApollo(AppComponent);","map":null,"metadata":{},"sourceType":"module"}