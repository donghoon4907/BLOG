{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useContext, createContext } from \"react\";\nexport var SET_ME = \"SET_ME\";\nexport var SET_NOTICE_MODAL = \"SET_NOTICE_MODAL\";\nexport var SHOW_POST_MODAL = \"SHOW_POST_MODAL\";\nexport var HIDE_POST_MODAL = \"HIDE_POST_MODAL\"; // type for action\n\n// create context\nvar VssContext = createContext(null);\nvar VssDispatchContext = createContext(null); // define reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: action.id,\n        nickname: action.nickname,\n        email: action.email,\n        avatar: action.avatar,\n        isMaster: action.isMaster\n      });\n\n    case \"SET_NOTICE_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowNoticeModal: action.payload\n      });\n\n    case \"SHOW_POST_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowAddPostModal: action.isShow,\n        activePost: {\n          postId: action.postId ? action.postId : \"\",\n          title: action.title ? action.title : \"\",\n          description: action.description ? action.description : \"\",\n          status: action.status ? action.status : \"\",\n          url: action.url ? action.url : \"\"\n        }\n      });\n\n    case \"HIDE_POST_MODAL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isShowAddPostModal: action.payload,\n        activePost: {\n          postId: \"\",\n          title: \"\",\n          description: \"\",\n          status: \"\",\n          url: \"\"\n        }\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nvar initialState = {\n  id: \"\",\n  nickname: \"\",\n  email: \"\",\n  avatar: {\n    url: \"\"\n  },\n  isMaster: false,\n  isShowNoticeModal: false,\n  isShowAddPostModal: false,\n  activePost: {\n    postId: \"\",\n    title: \"\",\n    description: \"\",\n    status: \"\",\n    url: \"\"\n  }\n};\nexport function VssProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(VssContext.Provider, {\n    value: state\n  }, __jsx(VssDispatchContext.Provider, {\n    value: dispatch\n  }, children));\n} // for hooks\n\n_s(VssProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = VssProvider;\nexport function useVssState() {\n  _s2();\n\n  var state = useContext(VssContext);\n  if (!state) throw new Error(\"not found provider\");\n  return state;\n}\n\n_s2(useVssState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nexport function useVssDispatch() {\n  _s3();\n\n  var dispatch = useContext(VssDispatchContext);\n  if (!dispatch) throw new Error(\"not found provider\");\n  return dispatch;\n}\n\n_s3(useVssDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"VssProvider\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/context/index.tsx"],"names":["React","useReducer","useContext","createContext","SET_ME","SET_NOTICE_MODAL","SHOW_POST_MODAL","HIDE_POST_MODAL","VssContext","VssDispatchContext","reducer","state","action","type","id","nickname","email","avatar","isMaster","isShowNoticeModal","payload","isShowAddPostModal","isShow","activePost","postId","title","description","status","url","initialState","VssProvider","children","dispatch","useVssState","Error","useVssDispatch"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext, createContext, Dispatch } from \"react\";\n\ntype Avatar = {\n  url: string;\n};\n\ntype ActivePost = {\n  postId: string;\n  title: string;\n  description: string;\n  status: string;\n  url: string;\n};\n\n// type for state\ntype State = {\n  id: string;\n  nickname: string;\n  email: string;\n  avatar: Avatar;\n  isMaster: boolean;\n  isShowNoticeModal: boolean;\n  isShowAddPostModal: boolean;\n  activePost: ActivePost;\n};\n\nexport const SET_ME = \"SET_ME\";\nexport const SET_NOTICE_MODAL = \"SET_NOTICE_MODAL\";\nexport const SHOW_POST_MODAL = \"SHOW_POST_MODAL\";\nexport const HIDE_POST_MODAL = \"HIDE_POST_MODAL\";\n\n// type for action\ntype Action =\n  | {\n      type: \"SET_ME\";\n      id: string;\n      nickname: string;\n      email: string;\n      avatar: Avatar;\n      isMaster: boolean;\n    }\n  | { type: \"SET_NOTICE_MODAL\"; payload: boolean }\n  | {\n      type: \"SHOW_POST_MODAL\";\n      isShow: boolean;\n      postId?: string;\n      title?: string;\n      description?: string;\n      status?: string;\n      url?: string;\n    }\n  | { type: \"HIDE_POST_MODAL\"; payload: boolean };\n\n// type for dispatch\ntype VssDispatch = Dispatch<Action>;\n\n// create context\nconst VssContext = createContext<State | null>(null);\nconst VssDispatchContext = createContext<VssDispatch | null>(null);\n\n// define reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ME\":\n      return {\n        ...state,\n        id: action.id,\n        nickname: action.nickname,\n        email: action.email,\n        avatar: action.avatar,\n        isMaster: action.isMaster\n      };\n    case \"SET_NOTICE_MODAL\":\n      return {\n        ...state,\n        isShowNoticeModal: action.payload\n      };\n    case \"SHOW_POST_MODAL\":\n      return {\n        ...state,\n        isShowAddPostModal: action.isShow,\n        activePost: {\n          postId: action.postId ? action.postId : \"\",\n          title: action.title ? action.title : \"\",\n          description: action.description ? action.description : \"\",\n          status: action.status ? action.status : \"\",\n          url: action.url ? action.url : \"\"\n        }\n      };\n    case \"HIDE_POST_MODAL\":\n      return {\n        ...state,\n        isShowAddPostModal: action.payload,\n        activePost: {\n          postId: \"\",\n          title: \"\",\n          description: \"\",\n          status: \"\",\n          url: \"\"\n        }\n      };\n    default:\n      return { ...state };\n  }\n}\n\nconst initialState: State = {\n  id: \"\",\n  nickname: \"\",\n  email: \"\",\n  avatar: {\n    url: \"\"\n  },\n  isMaster: false,\n  isShowNoticeModal: false,\n  isShowAddPostModal: false,\n  activePost: {\n    postId: \"\",\n    title: \"\",\n    description: \"\",\n    status: \"\",\n    url: \"\"\n  }\n};\n\nexport function VssProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <VssContext.Provider value={state}>\n      <VssDispatchContext.Provider value={dispatch}>\n        {children}\n      </VssDispatchContext.Provider>\n    </VssContext.Provider>\n  );\n}\n\n// for hooks\nexport function useVssState() {\n  const state = useContext(VssContext);\n  if (!state) throw new Error(\"not found provider\");\n  return state;\n}\n\nexport function useVssDispatch() {\n  const dispatch = useContext(VssDispatchContext);\n  if (!dispatch) throw new Error(\"not found provider\");\n  return dispatch;\n}\n"]},"metadata":{},"sourceType":"module"}