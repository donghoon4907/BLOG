{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/pages/search/[...keyword].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport Subject from \"../../components/common/Subject\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nvar Search = function Search() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useVssDispatch();\n\n  var _ref = router.query.keyword,\n      _ref2 = _toArray(_ref);\n\n  useQuery(meQuery, {\n    onCompleted: function onCompleted(_ref3) {\n      var getMyProfile = _ref3.getMyProfile;\n      var id = getMyProfile.id,\n          nickname = getMyProfile.nickname,\n          email = getMyProfile.email,\n          avatar = getMyProfile.avatar,\n          isMaster = getMyProfile.isMaster;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname: nickname,\n        email: email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(SearchTag, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(Subject, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"\\\"\", router.query.keyword, \"\\\"\\uC758 \\uAC80\\uC0C9\\uACB0\\uACFC\"), __jsx(SearchPost, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Search, \"Ly4Vt2w/affoAKc+wwK7MyMdH58=\", false, function () {\n  return [useRouter, useVssDispatch, useQuery];\n});\n\n_c = Search;\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref4) {\n    var query, _ref6, _ref7, searchKeyword, _ref7$, orderBy, apolloClient;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref4.query;\n            _ref6 = query.keyword, _ref7 = _slicedToArray(_ref6, 2), searchKeyword = _ref7[0], _ref7$ = _ref7[1], orderBy = _ref7$ === void 0 ? \"createdAt_DESC\" : _ref7$;\n            apolloClient = initializeApollo();\n            _context.next = 5;\n            return apolloClient.query({\n              query: postsQuery,\n              variables: {\n                first: 10,\n                searchKeyword: searchKeyword,\n                orderBy: orderBy\n              }\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", {\n              initialApolloState: apolloClient.cache.extract()\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search/[...keyword].tsx"],"names":["React","useRouter","useQuery","initializeApollo","meQuery","postsQuery","useVssDispatch","SET_ME","Layout","Section","SearchPost","Subject","SearchBar","SearchTag","Search","router","dispatch","query","keyword","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId","getInitialProps","searchKeyword","orderBy","apolloClient","variables","first","initialApolloState","cache","extract"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport Subject from \"../../components/common/Subject\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nconst Search: NextPage = () => {\n  const router = useRouter();\n  const dispatch = useVssDispatch();\n\n  const [] = router.query.keyword as any;\n  useQuery(meQuery, {\n    onCompleted: ({ getMyProfile }) => {\n      const { id, nickname, email, avatar, isMaster } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return (\n    <Layout title=\"검색\">\n      <Section>\n        <SearchBar />\n        <SearchTag />\n        <Subject>\"{router.query.keyword}\"의 검색결과</Subject>\n        <SearchPost />\n      </Section>\n    </Layout>\n  );\n};\n\nSearch.getInitialProps = async ({ query }) => {\n  const [searchKeyword, orderBy = \"createdAt_DESC\"] = query.keyword as any;\n\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: postsQuery,\n    variables: {\n      first: 10,\n      searchKeyword: searchKeyword,\n      orderBy\n    }\n  });\n\n  return {\n    initialApolloState: apolloClient.cache.extract()\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}