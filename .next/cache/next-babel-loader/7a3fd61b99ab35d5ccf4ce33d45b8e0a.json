{"ast":null,"code":"var __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React, { useCallback, Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { keywordQuery } from \"../../graphql/search/query/keyword\";\nconst Container = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 37px;\n  left: 0;\n  height: auto;\n`;\nconst ContentType = styled.div`\n  background: rgba(0, 0, 0, 0.03);\n  font-size: 14px;\n  padding: 5px;\n  border-bottom: ${props => props.theme.boxBorder};\n`;\nconst Item = styled.li`\n  display: flex;\n  justify-content: flex-start\n  align-items: center;\n  padding: 5px;\n  font-size: 12px;\n  overflow: hidden;\n  cursor: pointer;\n`;\nconst Title = styled.h3`\n  width: 240px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  ${props => props.theme.tablet} {\n    width: 100px;\n  }\n`;\nexport default function SearchResult({\n  searchKeyword,\n  setSearch,\n  setSearchKeyword\n}) {\n  const {\n    data,\n    loading\n  } = useQuery(keywordQuery, {\n    variables: {\n      searchKeyword\n    },\n    fetchPolicy: \"no-cache\"\n  });\n  const handleClickItem = useCallback(keyword => {\n    Router.push(`/search?keyword=${keyword}`);\n    setSearch(keyword);\n    setSearchKeyword(\"\");\n  }, []);\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Container, null, __jsx(ContentType, null, \"\\uC5F0\\uAD00 \\uAC80\\uC0C9\\uC5B4\"), __jsx(\"ol\", null, data.getSearchKeyword.length > 0 ? data.getSearchKeyword.map(({\n    id,\n    keyword\n  }) => __jsx(Item, {\n    key: id,\n    onClick: () => handleClickItem(keyword)\n  }, __jsx(Title, null, keyword))) : __jsx(Item, null, \"\\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n}","map":null,"metadata":{},"sourceType":"module"}