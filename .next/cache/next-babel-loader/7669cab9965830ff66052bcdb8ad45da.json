{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/feed/RecommandUserList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { memo, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { recommandUsersQuery } from \"../../graphql/user/query\";\nimport Avatar from \"../common/Avatar\";\nimport HoverUser from \"../user/HoverUser\";\nimport FollowButton from \"../common/FollowButton\";\nimport { useVssState } from \"../../context\";\nvar Container = styled.div.withConfig({\n  displayName: \"RecommandUserList__Container\",\n  componentId: \"to77jb-0\"\n})([\"display:flex;flex-direction:column;\"]);\n_c = Container;\nvar Column = styled.div.withConfig({\n  displayName: \"RecommandUserList__Column\",\n  componentId: \"to77jb-1\"\n})([\"height:50px;display:flex;justfiy-content:flex-start;align-items:center;position:relative;\"]);\n_c2 = Column;\nvar AvatarWrapper = styled.div.withConfig({\n  displayName: \"RecommandUserList__AvatarWrapper\",\n  componentId: \"to77jb-2\"\n})([\"width:50px;\"]);\n_c3 = AvatarWrapper;\n\nvar RecommandUserList = function RecommandUserList() {\n  _s();\n\n  var _useVssState = useVssState(),\n      userId = _useVssState.userId;\n\n  var _useState = useState(false),\n      isShowUser = _useState[0],\n      setIsShowUser = _useState[1];\n\n  var _useQuery = useQuery(recommandUsersQuery),\n      data = _useQuery.data;\n\n  console.log(data);\n  var handleClickAvatar = useCallback(function () {\n    setIsShowUser(!isShowUser);\n  }, [isShowUser]);\n\n  var mapToRecommandUsers = function mapToRecommandUsers() {\n    return data.getRecommandUsers.map(function (_ref) {\n      var id = _ref.id,\n          avatar = _ref.avatar,\n          nickname = _ref.nickname,\n          followedBy = _ref.followedBy;\n      var isFollowing = followedBy.some(function (v) {\n        return v.id === userId;\n      });\n      return __jsx(Column, {\n        key: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, __jsx(AvatarWrapper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, __jsx(Avatar, {\n        size: \"30\",\n        src: avatar.url,\n        onClick: handleClickAvatar,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        style: {\n          textIndent: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, nickname), __jsx(FollowButton, {\n        isFollowing: isFollowing,\n        userId: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), isShowUser && __jsx(HoverUser, {\n        userId: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }\n      }));\n    });\n  };\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, mapToRecommandUsers());\n};\n\n_s(RecommandUserList, \"J1JfyppiFweYayhkCou8CEaU4cs=\", false, function () {\n  return [useVssState, useQuery];\n});\n\n_c4 = RecommandUserList;\nexport default _c5 = memo(RecommandUserList);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Column\");\n$RefreshReg$(_c3, \"AvatarWrapper\");\n$RefreshReg$(_c4, \"RecommandUserList\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/RecommandUserList.tsx"],"names":["React","memo","useState","useCallback","styled","useQuery","recommandUsersQuery","Avatar","HoverUser","FollowButton","useVssState","Container","div","Column","AvatarWrapper","RecommandUserList","userId","isShowUser","setIsShowUser","data","console","log","handleClickAvatar","mapToRecommandUsers","getRecommandUsers","map","id","avatar","nickname","followedBy","isFollowing","some","v","url","textIndent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,WAApC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,2CAAf;KAAMD,S;AAKN,IAAME,MAAM,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,iGAAZ;MAAMC,M;AAQN,IAAMC,aAAa,GAAGV,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,mBAAnB;MAAME,a;;AAIN,IAAMC,iBAAqB,GAAG,SAAxBA,iBAAwB,GAAM;AAAA;;AAAA,qBACfL,WAAW,EADI;AAAA,MAC1BM,MAD0B,gBAC1BA,MAD0B;;AAAA,kBAEEd,QAAQ,CAAU,KAAV,CAFV;AAAA,MAE3Be,UAF2B;AAAA,MAEfC,aAFe;;AAAA,kBAIjBb,QAAQ,CAACC,mBAAD,CAJS;AAAA,MAI1Ba,IAJ0B,aAI1BA,IAJ0B;;AAMlCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,MAAMG,iBAAiB,GAAGnB,WAAW,CAAC,YAAM;AAC1Ce,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFoC,EAElC,CAACA,UAAD,CAFkC,CAArC;;AAIA,MAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAC1BJ,IAAI,CAACK,iBAAL,CAAuBC,GAAvB,CAA2B,gBAA0C;AAAA,UAAvCC,EAAuC,QAAvCA,EAAuC;AAAA,UAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,UAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,UAAjBC,UAAiB,QAAjBA,UAAiB;AACnE,UAAMC,WAAW,GAAGD,UAAU,CAACE,IAAX,CAAgB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACN,EAAF,KAASV,MAAb;AAAA,OAAjB,CAApB;AACA,aACE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAEU,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,GAAG,EAAEC,MAAM,CAACM,GAA9B;AAAmC,QAAA,OAAO,EAAEX,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAK,QAAA,KAAK,EAAE;AAAEY,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCN,QAAjC,CALF,EAME,MAAC,YAAD;AAAc,QAAA,WAAW,EAAEE,WAA3B;AAAwC,QAAA,MAAM,EAAEJ,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOGT,UAAU,IAAI,MAAC,SAAD;AAAW,QAAA,MAAM,EAAES,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPjB,CADF;AAWD,KAbD,CAD0B;AAAA,GAA5B;;AAgBA,SAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,mBAAmB,EAA/B,CAAP;AACD,CA7BD;;GAAMR,iB;UACeL,W,EAGFL,Q;;;MAJbU,iB;AA+BN,qBAAed,IAAI,CAACc,iBAAD,CAAnB","sourcesContent":["import React, { FC, memo, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { recommandUsersQuery } from \"../../graphql/user/query\";\nimport Avatar from \"../common/Avatar\";\nimport HoverUser from \"../user/HoverUser\";\nimport FollowButton from \"../common/FollowButton\";\nimport { useVssState } from \"../../context\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Column = styled.div`\n  height: 50px;\n  display: flex;\n  justfiy-content: flex-start;\n  align-items: center;\n  position: relative;\n`;\n\nconst AvatarWrapper = styled.div`\n  width: 50px;\n`;\n\nconst RecommandUserList: FC = () => {\n  const { userId } = useVssState();\n  const [isShowUser, setIsShowUser] = useState<boolean>(false);\n\n  const { data } = useQuery(recommandUsersQuery);\n\n  console.log(data);\n\n  const handleClickAvatar = useCallback(() => {\n    setIsShowUser(!isShowUser);\n  }, [isShowUser]);\n\n  const mapToRecommandUsers = () =>\n    data.getRecommandUsers.map(({ id, avatar, nickname, followedBy }) => {\n      const isFollowing = followedBy.some(v => v.id === userId);\n      return (\n        <Column key={id}>\n          <AvatarWrapper>\n            <Avatar size=\"30\" src={avatar.url} onClick={handleClickAvatar} />\n          </AvatarWrapper>\n\n          <div style={{ textIndent: 10 }}>{nickname}</div>\n          <FollowButton isFollowing={isFollowing} userId={id} />\n          {isShowUser && <HoverUser userId={id} />}\n        </Column>\n      );\n    });\n\n  return <Container>{mapToRecommandUsers()}</Container>;\n};\n\nexport default memo(RecommandUserList);\n"]},"metadata":{},"sourceType":"module"}