{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\nimport { postsQuery } from \"../graphql/post/query\"; // import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search = ({\n  query\n}) => {\n  const {\n    data: posts,\n    loading,\n    fetchMore,\n    networkStatus\n  } = useQuery(postsQuery, {\n    variables: {\n      first: 10,\n      keyword: query.keyword\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"test\"));\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    keyword\n  } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n      query: {\n        keyword\n      }\n    }\n  };\n};\nexport default Search;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useQuery","initializeApollo","searchQuery","Layout","postsQuery","Search","query","data","posts","loading","fetchMore","networkStatus","variables","first","keyword","notifyOnNetworkStatusChange","getServerSideProps","apolloClient","props","initialApolloState","cache","extract"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CACA;;AAEA,MAAMC,MAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDX,QAAQ,CACjEI,UADiE,EAEjE;AACEQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAER,KAAK,CAACQ;AAFN,KADb;AAKEC,IAAAA,2BAA2B,EAAE;AAL/B,GAFiE,CAAnE;AAUA,SACE,MAAC,MAAD,QACE,yBADF,CADF;AAKD,CAhBD;;AAkBA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEV,EAAAA;AAAF,CAAP,KAAqB;AACzE,QAAM;AAAEQ,IAAAA;AAAF,MAAcR,KAApB;AACA,QAAMW,YAAY,GAAGhB,gBAAgB,EAArC;AACA,QAAMgB,YAAY,CAACX,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEJ,WADgB;AAEvBU,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA;AAFS;AAFY,GAAnB,CAAN;AAQA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEF,YAAY,CAACG,KAAb,CAAmBC,OAAnB,EADf;AAELf,MAAAA,KAAK,EAAE;AACLQ,QAAAA;AADK;AAFF;AADF,GAAP;AAQD,CAnBM;AAqBP,eAAeT,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\nimport { postsQuery } from \"../graphql/post/query\";\n// import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search: NextPage<any> = ({ query }) => {\n  const { data: posts, loading, fetchMore, networkStatus } = useQuery(\n    postsQuery,\n    {\n      variables: {\n        first: 10,\n        keyword: query.keyword\n      },\n      notifyOnNetworkStatusChange: true\n    }\n  );\n  return (\n    <Layout>\n      <h1>test</h1>\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async ({ query }) => {\n  const { keyword } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n      query: {\n        keyword\n      }\n    }\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}