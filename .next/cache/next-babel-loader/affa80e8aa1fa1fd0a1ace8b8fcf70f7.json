{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/feed/PostList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, memo } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport PostContainer from \"../post/PostContainer\";\nimport Loader from \"../common/Loader\";\n\nvar PostList = function PostList() {\n  _s();\n\n  var _useQuery = useQuery(postsQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  var handleScrollFetchMore = function handleScrollFetchMore() {\n    if (loading) return;\n    var _document$documentEle = document.documentElement,\n        scrollHeight = _document$documentEle.scrollHeight,\n        clientHeight = _document$documentEle.clientHeight,\n        scrollTop = _document$documentEle.scrollTop;\n\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScrollFetchMore);\n    };\n  }, [data.getPosts, loading]);\n  return __jsx(React.Fragment, null, loading && loadingMorePosts && __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }\n  }), data.getPosts.map(function (post) {\n    return __jsx(PostContainer, _extends({\n      key: post.id\n    }, post, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }));\n};\n\n_s(PostList, \"Hg8nRRXsV313/95+ylafcTQinlk=\", false, function () {\n  return [useQuery];\n});\n\n_c = PostList;\nexport default _c2 = memo(PostList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/PostList.tsx"],"names":["React","useEffect","memo","useQuery","NetworkStatus","postsQuery","PostContainer","Loader","PostList","variables","first","notifyOnNetworkStatusChange","data","loading","fetchMore","networkStatus","loadingMorePosts","handleScrollFetchMore","document","documentElement","scrollHeight","clientHeight","scrollTop","getPosts","length","skip","window","addEventListener","removeEventListener","map","post","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA+BC,IAA/B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,gBAAxC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,IAAMC,QAAY,GAAG,SAAfA,QAAe,GAAM;AAAA;;AAAA,kBAC2BL,QAAQ,CAACE,UAAD,EAAa;AACvEI,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE,KAD4D;AAIvEC,IAAAA,2BAA2B,EAAE;AAJ0C,GAAb,CADnC;AAAA,MACjBC,IADiB,aACjBA,IADiB;AAAA,MACXC,OADW,aACXA,OADW;AAAA,MACFC,SADE,aACFA,SADE;AAAA,MACSC,aADT,aACSA,aADT;;AAQzB,MAAMC,gBAAgB,GAAGD,aAAa,KAAKX,aAAa,CAACU,SAAzD;;AAEA,MAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAIJ,OAAJ,EAAa;AADqB,gCAEgBK,QAAQ,CAACC,eAFzB;AAAA,QAE1BC,YAF0B,yBAE1BA,YAF0B;AAAA,QAEZC,YAFY,yBAEZA,YAFY;AAAA,QAEEC,SAFF,yBAEEA,SAFF;;AAGlC,QAAIV,IAAI,CAACW,QAAT,EAAmB;AACjB,UAAID,SAAS,GAAGD,YAAZ,KAA6BD,YAAjC,EAA+C;AAC7C,YAAIR,IAAI,CAACW,QAAL,CAAcC,MAAd,GAAuB,EAAvB,KAA8B,CAAlC,EAAqC;AACnCV,UAAAA,SAAS,CAAC;AACRL,YAAAA,SAAS,EAAE;AACTgB,cAAAA,IAAI,EAAEb,IAAI,CAACW,QAAL,CAAcC;AADX;AADH,WAAD,CAAT;AAKD;AACF;AACF;AACF,GAdD;;AAgBAvB,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCV,qBAAlC;AACA,WAAO;AAAA,aAAMS,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCX,qBAArC,CAAN;AAAA,KAAP;AACD,GAHQ,EAGN,CAACL,IAAI,CAACW,QAAN,EAAgBV,OAAhB,CAHM,CAAT;AAKA,SACE,4BACGA,OAAO,IAAIG,gBAAX,IAA+B,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,EAEGJ,IAAI,CAACW,QAAL,CAAcM,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACrB,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,OAAiCD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA,GAAtB,CAFH,CADF;AAQD,CAvCD;;GAAMtB,Q;UACgDL,Q;;;KADhDK,Q;AAyCN,qBAAeN,IAAI,CAACM,QAAD,CAAnB","sourcesContent":["import React, { useEffect, FC, memo } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport PostContainer from \"../post/PostContainer\";\nimport Loader from \"../common/Loader\";\n\nconst PostList: FC = () => {\n  const { data, loading, fetchMore, networkStatus } = useQuery(postsQuery, {\n    variables: {\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const handleScrollFetchMore = () => {\n    if (loading) return;\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return () => window.removeEventListener(\"scroll\", handleScrollFetchMore);\n  }, [data.getPosts, loading]);\n\n  return (\n    <>\n      {loading && loadingMorePosts && <Loader />}\n      {data.getPosts.map(post => (\n        <PostContainer key={post.id} {...post} />\n      ))}\n    </>\n  );\n};\n\nexport default memo(PostList);\n"]},"metadata":{},"sourceType":"module"}