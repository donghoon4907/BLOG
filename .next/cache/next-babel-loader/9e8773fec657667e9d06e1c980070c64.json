{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button, ProgressBar } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { InputWrapper, Label, TextArea, Select } from \"../common/Form\";\nimport Loader from \"../common/Loader\";\nimport { Upload } from \"../icon\";\nvar UploadWrapper = styled.div.withConfig({\n  displayName: \"SetPostPresenter__UploadWrapper\",\n  componentId: \"sc-17w3pe5-0\"\n})([\"\", \";background:\", \";width:100%;height:300px;cursor:pointer;padding:10px;display:flex;justify-content:center;align-items:center;\"], function (props) {\n  return props.theme.whiteBox;\n}, function (props) {\n  return props.theme.bgColor;\n});\n_c = UploadWrapper;\nvar GuideLine = styled.div.withConfig({\n  displayName: \"SetPostPresenter__GuideLine\",\n  componentId: \"sc-17w3pe5-1\"\n})([\"flex:1;display:flex;flex-direction:column;text-align:center;padding:10px;& > div{flex:1;padding:10px;}\"]);\n_c2 = GuideLine;\n\nvar SetNoticePresenter = function SetNoticePresenter(_ref) {\n  var loading = _ref.loading,\n      header = _ref.header,\n      title = _ref.title,\n      description = _ref.description,\n      status = _ref.status,\n      progress = _ref.progress,\n      file = _ref.file,\n      fileEl = _ref.fileEl,\n      onClickFile = _ref.onClickFile,\n      onChangeFile = _ref.onChangeFile,\n      onClose = _ref.onClose,\n      onSubmit = _ref.onSubmit;\n  return __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n    onHide: onClose,\n    animation: false,\n    show: true\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"\\uD3EC\\uC2A4\\uD2B8 \".concat(header))), __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(Modal.Body, null, !file ? __jsx(UploadWrapper, {\n    onClick: onClickFile\n  }, __jsx(GuideLine, null, progress > 0 && __jsx(\"div\", null, __jsx(ProgressBar, {\n    now: progress,\n    label: \"\".concat(progress, \"%\"),\n    style: {\n      width: \"100%\"\n    }\n  })), progress === 0 && __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(Upload, null)), __jsx(\"div\", null, \"\\uC601\\uC0C1\\uC744 \\uC5C5\\uB85C\\uB4DC\\uD558\\uB824\\uBA74 \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"), __jsx(\"div\", null, __jsx(Button, {\n    variant: \"primary\"\n  }, \"\\uD30C\\uC77C\\uC120\\uD0DD\")))), __jsx(\"input\", {\n    type: \"file\",\n    onChange: onChangeFile,\n    ref: fileEl,\n    hidden: true,\n    accept: \"video/*\"\n  })) : __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"title\",\n    val: title.value\n  }, \"\\uC81C\\uBAA9\"), __jsx(Input, _extends({\n    name: \"title\",\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    required: true\n  }, title))), __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"description\",\n    val: description.value\n  }, \"\\uB0B4\\uC6A9\"), __jsx(TextArea, _extends({\n    required: true,\n    name: \"description\",\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n  }, description))), __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"status\",\n    val: status.value\n  }, \"\\uACF5\\uAC1C\\uC124\\uC815\"), __jsx(Select, _extends({\n    required: true,\n    name: \"status\"\n  }, status), __jsx(\"option\", {\n    value: \"PUBLIC\"\n  }, \"\\uACF5\\uAC1C\"), __jsx(\"option\", {\n    value: \"PRIVATE\"\n  }, \"\\uBE44\\uACF5\\uAC1C\"))))), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"info\",\n    onClick: onClose\n  }, \"\\uCDE8\\uC18C\"), file && __jsx(Button, {\n    variant: \"primary\",\n    onSubmit: onSubmit\n  }, header)))));\n};\n\n_c3 = SetNoticePresenter;\nexport default SetNoticePresenter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UploadWrapper\");\n$RefreshReg$(_c2, \"GuideLine\");\n$RefreshReg$(_c3, \"SetNoticePresenter\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SetPostPresenter.tsx"],"names":["React","Fragment","styled","Modal","Button","ProgressBar","Input","InputWrapper","Label","TextArea","Select","Loader","Upload","UploadWrapper","div","props","theme","whiteBox","bgColor","GuideLine","SetNoticePresenter","loading","header","title","description","status","progress","file","fileEl","onClickFile","onChangeFile","onClose","onSubmit","width","value"],"mappings":"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","sourcesContent":["import React, { Fragment, FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button, ProgressBar } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { InputWrapper, Label, TextArea, Select } from \"../common/Form\";\nimport { UseInputProps } from \"../../hooks\";\nimport Loader from \"../common/Loader\";\nimport { Upload } from \"../icon\";\n\nconst UploadWrapper = styled.div`\n  ${props => props.theme.whiteBox};\n  background: ${props => props.theme.bgColor};\n  width: 100%;\n  height: 300px;\n  cursor: pointer;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst GuideLine = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  text-align: center;\n  padding: 10px;\n\n  & > div {\n    flex: 1;\n    padding: 10px;\n  }\n`;\n\ntype Props = {\n  loading: boolean;\n  header: string;\n  title: UseInputProps;\n  description: UseInputProps;\n  status: UseInputProps;\n  progress: number;\n  file: string;\n  fileEl: any;\n  onClickFile: any;\n  onChangeFile: any;\n  onClose: any;\n  onSubmit: any;\n};\n\nconst SetNoticePresenter: FC<Props> = ({\n  loading,\n  header,\n  title,\n  description,\n  status,\n  progress,\n  file,\n  fileEl,\n  onClickFile,\n  onChangeFile,\n  onClose,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={false} show>\n      <Modal.Header closeButton>\n        <Modal.Title>{`포스트 ${header}`}</Modal.Title>\n      </Modal.Header>\n      <form onSubmit={onSubmit}>\n        <Modal.Body>\n          {!file ? (\n            <UploadWrapper onClick={onClickFile}>\n              <GuideLine>\n                {progress > 0 && (\n                  <div>\n                    <ProgressBar\n                      now={progress}\n                      label={`${progress}%`}\n                      style={{ width: \"100%\" }}\n                    />\n                  </div>\n                )}\n                {progress === 0 && (\n                  <>\n                    <div>\n                      <Upload />\n                    </div>\n                    <div>영상을 업로드하려면 클릭하세요.</div>\n                    <div>\n                      <Button variant=\"primary\">파일선택</Button>\n                    </div>\n                  </>\n                )}\n              </GuideLine>\n\n              <input\n                type=\"file\"\n                onChange={onChangeFile}\n                ref={fileEl}\n                hidden\n                accept=\"video/*\"\n              />\n            </UploadWrapper>\n          ) : (\n            <form onSubmit={onSubmit}>\n              <InputWrapper>\n                <Label htmlFor=\"title\" val={title.value}>\n                  제목\n                </Label>\n                <Input\n                  name=\"title\"\n                  placeholder=\"제목을 입력하세요.\"\n                  required\n                  {...title}\n                />\n              </InputWrapper>\n              <InputWrapper>\n                <Label htmlFor=\"description\" val={description.value}>\n                  내용\n                </Label>\n                <TextArea\n                  required\n                  name=\"description\"\n                  placeholder=\"내용을 입력하세요.\"\n                  {...description}\n                />\n              </InputWrapper>\n              <InputWrapper>\n                <Label htmlFor=\"status\" val={status.value}>\n                  공개설정\n                </Label>\n                <Select required name=\"status\" {...status}>\n                  <option value=\"PUBLIC\">공개</option>\n                  <option value=\"PRIVATE\">비공개</option>\n                </Select>\n              </InputWrapper>\n            </form>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={onClose}>\n            취소\n          </Button>\n          {file && (\n            <Button variant=\"primary\" onSubmit={onSubmit}>\n              {header}\n            </Button>\n          )}\n        </Modal.Footer>\n      </form>\n    </Modal>\n  </Fragment>\n);\n\nexport default SetNoticePresenter;\n"]},"metadata":{},"sourceType":"module"}