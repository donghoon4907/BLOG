{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput, useLazyAxios } from \"../../hooks\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport { signUpMutation } from \"../../graphql/user/mutation/signup\";\n\nvar SignUpContainer = function SignUpContainer(_ref) {\n  var setAction = _ref.setAction;\n\n  var _useLazyAxios = useLazyAxios(),\n      loading = _useLazyAxios.loading,\n      call = _useLazyAxios.call;\n\n  var fileEl = useRef(null);\n  var confirmPwdEl = useRef(null);\n  var nickname = useInput(\"\");\n  var email = useInput(\"\");\n  var pwd = useInput(\"\");\n\n  var _useState = useState(\"\"),\n      confirmPwd = _useState[0],\n      setConfirmPwd = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      preview = _useState2[0],\n      setPreview = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      file = _useState3[0],\n      setFile = _useState3[1];\n\n  var _useMutation = useMutation(signUpMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signUp = _useMutation2[0],\n      signUpLoading = _useMutation2[1].loading;\n\n  var handleChangeConfirmPwd = useCallback(function (e) {\n    var value = e.target.value;\n    var node = confirmPwdEl.current;\n    setConfirmPwd(value);\n\n    if (pwd.value !== value) {\n      if (node) {\n        node.setCustomValidity(\"비밀번호가 일치하지 않습니다.\");\n      }\n    } else {\n      if (node) {\n        node.setCustomValidity(\"\");\n      }\n    }\n  }, [pwd.value]);\n  var handleChangePreview = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _ref3, value, files, _files, file, formData, _yield$call, data, error, reader;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref3 = e.target, value = _ref3.value, files = _ref3.files;\n\n              if (value) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!loading) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              // prevent same request\n              _files = _slicedToArray(files, 1), file = _files[0];\n              formData = new FormData();\n              formData.append(\"file\", file);\n              _context.next = 10;\n              return call({\n                method: \"post\",\n                url: \"\".concat(process.env.BACKEND_API_PATH, \"/api/upload\"),\n                data: formData,\n                headers: {\n                  \"content-type\": \"multipart/form-data\"\n                }\n              });\n\n            case 10:\n              _yield$call = _context.sent;\n              data = _yield$call.data;\n              error = _yield$call.error;\n\n              if (data) {\n                reader = new FileReader();\n\n                reader.onloadend = function () {\n                  setPreview(reader.result);\n                  setFile(data);\n                };\n\n                reader.readAsDataURL(file);\n              }\n\n              if (error) {\n                alert(\"썸네일 업로드 중 오류가 발생했습니다.\");\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [loading]);\n  var handleClickUpload = useCallback(function () {\n    var node = fileEl.current;\n\n    if (node) {\n      node.click();\n    }\n  }, []);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var tf, _yield$signUp, addUser, _JSON$parse, message;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!signUpLoading) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n            case 3:\n              tf = confirm(\"입력한 내용으로 회원가입 하시겠어요?\");\n\n              if (!tf) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.prev = 5;\n              _context2.next = 8;\n              return signUp({\n                variables: {\n                  email: email.value,\n                  pwd: pwd.value,\n                  nickname: nickname.value,\n                  file: file ? file : process.env.DEFAULT_AVATAR\n                }\n              });\n\n            case 8:\n              _yield$signUp = _context2.sent;\n              addUser = _yield$signUp.data.addUser;\n\n              if (addUser) {\n                setAction(\"login\");\n                alert(\"회원가입이 정상처리되었습니다.\");\n              }\n\n              _context2.next = 17;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](5);\n              _JSON$parse = JSON.parse(_context2.t0.message), message = _JSON$parse.message;\n              alert(message);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 13]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [email.value, pwd.value, nickname.value, file, signUpLoading]);\n  return __jsx(SignUpPresenter, {\n    loading: loading,\n    signUpLoading: signUpLoading,\n    nickname: nickname,\n    email: email,\n    pwd: pwd,\n    confirmPwd: confirmPwd,\n    preview: preview,\n    fileEl: fileEl,\n    confirmPwdEl: confirmPwdEl,\n    onChangePreview: handleChangePreview,\n    onChangeConfirmPwd: handleChangeConfirmPwd,\n    onClickUpload: handleClickUpload,\n    onSubmit: handleSubmit\n  });\n};\n\nexport default SignUpContainer;","map":null,"metadata":{},"sourceType":"module"}