{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { usersQuery, recommandUsersQuery } from \"../../graphql/user/query\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport SearchUserPresenter from \"./SearchUserPresenter\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\n\nvar SearchUserContainer = function SearchUserContainer() {\n  var dispatch = useVssDispatch();\n  var router = useRouter();\n  var keyword = decodeURIComponent(router.query.keyword);\n\n  var _useQuery = useQuery(usersQuery, {\n    variables: {\n      keyword: keyword,\n      first: 10\n    }\n  }),\n      users = _useQuery.data;\n\n  var _useQuery2 = useQuery(recommandUsersQuery),\n      recommandUsers = _useQuery2.data;\n\n  useQuery(meQuery, {\n    ssr: false,\n    onCompleted: function onCompleted(_ref) {\n      var getMyProfile = _ref.getMyProfile;\n      var id = getMyProfile.id,\n          nickname = getMyProfile.nickname,\n          email = getMyProfile.email,\n          avatar = getMyProfile.avatar,\n          isMaster = getMyProfile.isMaster;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname: nickname,\n        email: email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  });\n  return __jsx(SearchUserPresenter, {\n    users: users.getUsers,\n    recommandUsers: recommandUsers.getRecommandUsers,\n    keyword: keyword\n  });\n};\n\nexport default SearchUserContainer;","map":null,"metadata":{},"sourceType":"module"}