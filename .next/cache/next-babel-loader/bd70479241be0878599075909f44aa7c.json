{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { meQuery } from \"../../graphql/auth/query/me\";\nimport { postsQuery } from \"../../graphql/post/query\";\nimport { useVssDispatch, SET_ME } from \"../../context\";\nimport Layout from \"../../components/common/Layout\";\nimport Section from \"../../components/common/Section\";\nimport SearchPost from \"../../components/search/SearchPostContainer\";\nimport SearchBar from \"../../components/search/SearchBar\";\nimport SearchTag from \"../../components/search/SearchTag\";\n\nconst Keyword = () => {\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    onCompleted: ({\n      getMyProfile\n    }) => {\n      const {\n        id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\"\n  }, __jsx(Section, null, __jsx(SearchBar, null), __jsx(SearchTag, null), __jsx(SearchPost, null)));\n};\n\nKeyword.getInitialProps = async ({\n  query\n}) => {\n  const variables = {\n    first: 10\n  };\n  query.keyword.forEach(v => {\n    const splitQuery = v.split(\"=\");\n    variables[splitQuery[0]] = splitQuery[1];\n  });\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: postsQuery,\n    variables\n  });\n  return {\n    initialApolloState: apolloClient.cache.extract()\n  };\n};\n\nexport default Keyword;","map":null,"metadata":{},"sourceType":"module"}