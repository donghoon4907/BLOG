{"ast":null,"code":"var __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React, { useCallback, Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { keywordQuery } from \"../../graphql/search/query/keyword\";\nconst Container = styled.div.withConfig({\n  displayName: \"SearchResult__Container\",\n  componentId: \"sc-5fh9lp-0\"\n})([\"\", \";width:100%;position:absolute;display:flex;flex-direction:column;top:37px;left:0;height:auto;\"], props => props.theme.whiteBox);\nconst ContentType = styled.div.withConfig({\n  displayName: \"SearchResult__ContentType\",\n  componentId: \"sc-5fh9lp-1\"\n})([\"background:rgba(0,0,0,0.03);font-size:14px;padding:5px;border-bottom:\", \";\"], props => props.theme.boxBorder);\nconst Item = styled.li.withConfig({\n  displayName: \"SearchResult__Item\",\n  componentId: \"sc-5fh9lp-2\"\n})([\"display:flex;justify-content:flex-start align-items:center;padding:5px;font-size:12px;overflow:hidden;cursor:pointer;\"]);\nconst Title = styled.h3.withConfig({\n  displayName: \"SearchResult__Title\",\n  componentId: \"sc-5fh9lp-3\"\n})([\"width:240px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;\", \"{width:100px;}\"], props => props.theme.tablet);\nexport default function SearchResult({\n  searchKeyword,\n  setSearch,\n  setSearchKeyword\n}) {\n  const {\n    data,\n    loading\n  } = useQuery(keywordQuery, {\n    variables: {\n      searchKeyword\n    },\n    fetchPolicy: \"no-cache\"\n  });\n  const handleClickItem = useCallback(keyword => {\n    Router.push(`/search?keyword=${keyword}`);\n    setSearch(keyword);\n    setSearchKeyword(\"\");\n  }, []);\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Container, null, __jsx(ContentType, null, \"\\uC5F0\\uAD00 \\uAC80\\uC0C9\\uC5B4\"), __jsx(\"ol\", null, data.getSearchKeyword.length > 0 ? data.getSearchKeyword.map(({\n    id,\n    keyword\n  }) => __jsx(Item, {\n    key: id,\n    onClick: () => handleClickItem(keyword)\n  }, __jsx(Title, null, keyword))) : __jsx(Item, null, \"\\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n}","map":null,"metadata":{},"sourceType":"module"}