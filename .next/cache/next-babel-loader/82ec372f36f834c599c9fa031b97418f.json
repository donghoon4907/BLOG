{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport { addPostMutation } from \"../../graphql/post/mutation/add\";\nimport { updatePostMutation } from \"../../graphql/post/mutation/update\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useVssState, useVssDispatch, HIDE_POST_MODAL } from \"../../context\";\n\nvar SetPostContainer = function SetPostContainer() {\n  _s();\n\n  var activePost = useVssState.activePost;\n  var dispatch = useVssDispatch();\n\n  var _useState = useState(\"영상 업로드\"),\n      header = _useState[0],\n      setHeader = _useState[1];\n\n  var fileEl = useRef(null);\n\n  var _useState2 = useState(\"\"),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var _useState4 = useState(\"PUBLIC\"),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(0),\n      progress = _useState5[0],\n      setProgress = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  useEffect(function () {\n    if (activePost.title) {\n      setTitle(activePost.title);\n    }\n\n    if (activePost.description) {\n      setDescription(activePost.description);\n    }\n\n    if (activePost.status) {\n      setStatus(activePost.status);\n    }\n\n    if (activePost.id) {\n      setProgress(100);\n    }\n\n    if (activePost.url) {\n      setFile(activePost.url);\n    }\n\n    set;\n  }, [activePost]);\n\n  var _useMutation = useMutation(postId ? updatePostMutation : addPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      set = _useMutation2[0],\n      setPostLoading = _useMutation2[1].loading;\n\n  var _useMutation3 = useMutation(removePostMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      remove = _useMutation4[0],\n      removePostLoading = _useMutation4[1].loading;\n\n  var handleClickFile = useCallback(function () {\n    var node = fileEl.current;\n\n    if (node) {\n      node.click();\n    }\n  }, []);\n  var handleChangeFile = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var files, formData, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (e.target.value) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              // cancel select file\n              files = e.target.files;\n              formData = new FormData();\n              formData.append(\"file\", files[0]);\n              _context.next = 7;\n              return axios.post(\"\".concat(process.env.BACKEND_API_PATH, \"/api/upload\"), formData, {\n                onUploadProgress: function onUploadProgress(_ref2) {\n                  var lengthComputable = _ref2.lengthComputable,\n                      loaded = _ref2.loaded,\n                      total = _ref2.total;\n\n                  if (lengthComputable) {\n                    setProgress(Math.floor(loaded / total * 100));\n                  }\n                }\n              });\n\n            case 7:\n              response = _context.sent;\n\n              if (response.data) {\n                setFile(response.data);\n                setHeader(\"등록\");\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var handleDelete = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var tf, _yield$remove, deletePost;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!removePostLoading) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n          case 2:\n            tf = confirm(\"포스트를 삭제하시겠어요?\");\n\n            if (!tf) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 6;\n            return remove({\n              variables: {\n                postId: postId\n              }\n            });\n\n          case 6:\n            _yield$remove = _context2.sent;\n            deletePost = _yield$remove.data.deletePost;\n\n            if (deletePost) {\n              alert(\"포스트가 삭제되었습니다.\");\n              window.location.reload();\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [removePostLoading]);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var tf, _yield$set, _yield$set$data, addPost, updatePost, _JSON$parse, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!setPostLoading) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n            case 3:\n              tf = confirm(\"\\uC785\\uB825\\uD55C \\uB0B4\\uC6A9\\uC73C\\uB85C \".concat(postId ? \"수정\" : \"등록\", \"\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\"));\n\n              if (!tf) {\n                _context3.next = 19;\n                break;\n              }\n\n              _context3.prev = 5;\n              _context3.next = 8;\n              return set({\n                variables: {\n                  postId: postId,\n                  title: modalTitle.value,\n                  description: modalDescription.value,\n                  status: modalStatus.value,\n                  file: file\n                }\n              });\n\n            case 8:\n              _yield$set = _context3.sent;\n              _yield$set$data = _yield$set.data;\n              addPost = _yield$set$data.addPost;\n              updatePost = _yield$set$data.updatePost;\n\n              if (addPost || updatePost) {\n                alert(\"\\uD3EC\\uC2A4\\uD2B8\\uAC00 \".concat(postId ? \"수정\" : \"등록\", \" \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"));\n                location.reload();\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](5);\n              _JSON$parse = JSON.parse(_context3.t0.message), message = _JSON$parse.message;\n              alert(message);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 15]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [modalTitle.value, modalDescription.value, modalStatus.value, file, setPostLoading]);\n  var handleClose = useCallback(function () {\n    dispatch({\n      type: HIDE_POST_MODAL,\n      payload: false\n    });\n  }, []);\n  return __jsx(SetPostPresenter, {\n    loading: setPostLoading,\n    header: header,\n    title: modalTitle,\n    description: modalDescription,\n    status: modalStatus,\n    progress: progress,\n    file: file,\n    fileEl: fileEl,\n    onClickFile: handleClickFile,\n    onChangeFile: handleChangeFile,\n    onClose: handleClose,\n    onDelete: handleDelete,\n    onSubmit: handleSubmit\n  });\n};\n\n_s(SetPostContainer, \"+4DYmMtzte1D86qGdqrqPOO/6yQ=\", false, function () {\n  return [useVssDispatch, useMutation, useMutation];\n});\n\n_c = SetPostContainer;\nexport default SetPostContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetPostContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SetPostContainer.tsx"],"names":["React","useCallback","useState","useRef","useEffect","useMutation","axios","addPostMutation","updatePostMutation","removePostMutation","SetPostPresenter","useVssState","useVssDispatch","HIDE_POST_MODAL","SetPostContainer","activePost","dispatch","header","setHeader","fileEl","title","setTitle","description","setDescription","status","setStatus","progress","setProgress","file","setFile","id","url","set","postId","setPostLoading","loading","remove","removePostLoading","handleClickFile","node","current","click","handleChangeFile","e","target","value","files","formData","FormData","append","post","process","env","BACKEND_API_PATH","onUploadProgress","lengthComputable","loaded","total","Math","floor","response","data","handleDelete","alert","tf","confirm","variables","deletePost","window","location","reload","handleSubmit","preventDefault","modalTitle","modalDescription","modalStatus","addPost","updatePost","JSON","parse","message","handleClose","type","payload"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  FC,\n  useRef,\n  FormEvent,\n  useEffect\n} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport { addPostMutation } from \"../../graphql/post/mutation/add\";\nimport { updatePostMutation } from \"../../graphql/post/mutation/update\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useVssState, useVssDispatch, HIDE_POST_MODAL } from \"../../context\";\n\nconst SetPostContainer: FC = () => {\n  const { activePost } = useVssState;\n  const dispatch = useVssDispatch();\n\n  const [header, setHeader] = useState(\"영상 업로드\");\n\n  const fileEl = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [status, setStatus] = useState<string>(\"PUBLIC\");\n  const [progress, setProgress] = useState<number>(0);\n  const [file, setFile] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (activePost.title) {\n      setTitle(activePost.title);\n    }\n    if (activePost.description) {\n      setDescription(activePost.description);\n    }\n    if (activePost.status) {\n      setStatus(activePost.status);\n    }\n    if (activePost.id) {\n      setProgress(100);\n    }\n    if (activePost.url) {\n      setFile(activePost.url);\n    }\n\n    set;\n  }, [activePost]);\n\n  const [set, { loading: setPostLoading }] = useMutation(\n    postId ? updatePostMutation : addPostMutation\n  );\n\n  const [remove, { loading: removePostLoading }] = useMutation(\n    removePostMutation\n  );\n\n  const handleClickFile = useCallback(() => {\n    const node = fileEl.current;\n    if (node) {\n      node.click();\n    }\n  }, []);\n\n  const handleChangeFile = useCallback(async e => {\n    if (!e.target.value) return; // cancel select file\n\n    const { files } = e.target;\n\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n\n    const response = await axios.post(\n      `${process.env.BACKEND_API_PATH}/api/upload`,\n      formData,\n      {\n        onUploadProgress: ({ lengthComputable, loaded, total }) => {\n          if (lengthComputable) {\n            setProgress(Math.floor((loaded / total) * 100));\n          }\n        }\n      }\n    );\n    if (response.data) {\n      setFile(response.data);\n      setHeader(\"등록\");\n    }\n  }, []);\n\n  const handleDelete = useCallback(async () => {\n    if (removePostLoading) {\n      return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n    }\n\n    const tf = confirm(\"포스트를 삭제하시겠어요?\");\n\n    if (tf) {\n      const {\n        data: { deletePost }\n      } = await remove({\n        variables: {\n          postId\n        }\n      });\n      if (deletePost) {\n        alert(\"포스트가 삭제되었습니다.\");\n        window.location.reload();\n      }\n    }\n  }, [removePostLoading]);\n\n  const handleSubmit = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (setPostLoading) {\n        return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n      }\n\n      const tf = confirm(\n        `입력한 내용으로 ${postId ? \"수정\" : \"등록\"}하시겠어요?`\n      );\n\n      if (tf) {\n        try {\n          const {\n            data: { addPost, updatePost }\n          } = await set({\n            variables: {\n              postId,\n              title: modalTitle.value,\n              description: modalDescription.value,\n              status: modalStatus.value,\n              file\n            }\n          });\n          if (addPost || updatePost) {\n            alert(`포스트가 ${postId ? \"수정\" : \"등록\"} 되었습니다.`);\n            location.reload();\n          }\n        } catch (error) {\n          const { message } = JSON.parse(error.message);\n          alert(message);\n        }\n      }\n    },\n    [\n      modalTitle.value,\n      modalDescription.value,\n      modalStatus.value,\n      file,\n      setPostLoading\n    ]\n  );\n\n  const handleClose = useCallback(() => {\n    dispatch({\n      type: HIDE_POST_MODAL,\n      payload: false\n    });\n  }, []);\n\n  return (\n    <SetPostPresenter\n      loading={setPostLoading}\n      header={header}\n      title={modalTitle}\n      description={modalDescription}\n      status={modalStatus}\n      progress={progress}\n      file={file}\n      fileEl={fileEl}\n      onClickFile={handleClickFile}\n      onChangeFile={handleChangeFile}\n      onClose={handleClose}\n      onDelete={handleDelete}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default SetPostContainer;\n"]},"metadata":{},"sourceType":"module"}