{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\nvar NoticeWrapper = styled.div.withConfig({\n  displayName: \"NoticeList__NoticeWrapper\",\n  componentId: \"ztp66g-0\"\n})([\"height:50px;display:flex;flex-direction:column;justify-content:center;margin-right:15%;margin-left:15%;padding:5px;text-align:center;cursor:pointer;\"]);\n_c = NoticeWrapper;\n\nvar NoticeList = function NoticeList() {\n  _s();\n\n  var dispatch = useVssDispatch();\n\n  var _useVssState = useVssState(),\n      isMaster = _useVssState.isMaster;\n\n  var _useQuery = useQuery(noticesQuery, {\n    variables: {\n      first: 10\n    }\n  }),\n      data = _useQuery.data;\n\n  var handleClick = useCallback(function (title, description, noticeId) {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: isMaster ? \"modifiable\" : \"readonly\",\n      actionText: \"\",\n      title: title,\n      description: description,\n      noticeId: noticeId\n    });\n  }, [isMaster]);\n  return __jsx(CarouselContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, data.getNotices.map(function (_ref) {\n    var id = _ref.id,\n        title = _ref.title,\n        description = _ref.description,\n        updatedAt = _ref.updatedAt;\n    return __jsx(Carousel.Item, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(NoticeWrapper, {\n      onClick: function onClick() {\n        return handleClick(title, description, id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, title), __jsx(Timestamp, {\n      text: updatedAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\n\n_s(NoticeList, \"EV/W6YNcs/gPWpH+JOyxthLbB64=\", false, function () {\n  return [useVssDispatch, useVssState, useQuery];\n});\n\n_c2 = NoticeList;\nexport default _c3 = memo(NoticeList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NoticeWrapper\");\n$RefreshReg$(_c2, \"NoticeList\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx"],"names":["React","useCallback","memo","styled","useQuery","Carousel","noticesQuery","CarouselContainer","Timestamp","useVssState","useVssDispatch","SHOW_NOTICE_MODAL","NoticeWrapper","div","NoticeList","dispatch","isMaster","variables","first","data","handleClick","title","description","noticeId","type","action","actionText","getNotices","map","id","updatedAt"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,IAAMC,aAAa,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,4JAAnB;KAAMD,a;;AAYN,IAAME,UAAc,GAAG,SAAjBA,UAAiB,GAAM;AAAA;;AAC3B,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAD2B,qBAEND,WAAW,EAFL;AAAA,MAEnBO,QAFmB,gBAEnBA,QAFmB;;AAAA,kBAIVZ,QAAQ,CAACE,YAAD,EAAe;AACtCW,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAD2B,GAAf,CAJE;AAAA,MAInBC,IAJmB,aAInBA,IAJmB;;AAU3B,MAAMC,WAAW,GAAGnB,WAAW,CAC7B,UAACoB,KAAD,EAAQC,WAAR,EAAqBC,QAArB,EAAkC;AAChCR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,iBADC;AAEPc,MAAAA,MAAM,EAAET,QAAQ,GAAG,YAAH,GAAkB,UAF3B;AAGPU,MAAAA,UAAU,EAAE,EAHL;AAIPL,MAAAA,KAAK,EAALA,KAJO;AAKPC,MAAAA,WAAW,EAAXA,WALO;AAMPC,MAAAA,QAAQ,EAARA;AANO,KAAD,CAAR;AAQD,GAV4B,EAW7B,CAACP,QAAD,CAX6B,CAA/B;AAcA,SACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,CAACQ,UAAL,CAAgBC,GAAhB,CAAoB;AAAA,QAAGC,EAAH,QAAGA,EAAH;AAAA,QAAOR,KAAP,QAAOA,KAAP;AAAA,QAAcC,WAAd,QAAcA,WAAd;AAAA,QAA2BQ,SAA3B,QAA2BA,SAA3B;AAAA,WACnB,MAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAED,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,OAAO,EAAE;AAAA,eAAMT,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBO,EAArB,CAAjB;AAAA,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,KAAN,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,IAAI,EAAES,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADmB;AAAA,GAApB,CADH,CADF;AAYD,CApCD;;GAAMhB,U;UACaJ,c,EACID,W,EAEJL,Q;;;MAJbU,U;AAsCN,qBAAeZ,IAAI,CAACY,UAAD,CAAnB","sourcesContent":["import React, { useCallback, FC, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nconst NoticeWrapper = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-right: 15%;\n  margin-left: 15%;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst NoticeList: FC = () => {\n  const dispatch = useVssDispatch();\n  const { isMaster } = useVssState();\n\n  const { data } = useQuery(noticesQuery, {\n    variables: {\n      first: 10\n    }\n  });\n\n  const handleClick = useCallback(\n    (title, description, noticeId) => {\n      dispatch({\n        type: SHOW_NOTICE_MODAL,\n        action: isMaster ? \"modifiable\" : \"readonly\",\n        actionText: \"\",\n        title,\n        description,\n        noticeId\n      });\n    },\n    [isMaster]\n  );\n\n  return (\n    <CarouselContainer>\n      {data.getNotices.map(({ id, title, description, updatedAt }) => (\n        <Carousel.Item key={id}>\n          <NoticeWrapper onClick={() => handleClick(title, description, id)}>\n            <div>{title}</div>\n            <Timestamp text={updatedAt} />\n          </NoticeWrapper>\n        </Carousel.Item>\n      ))}\n    </CarouselContainer>\n  );\n};\n\nexport default memo(NoticeList);\n"]},"metadata":{},"sourceType":"module"}