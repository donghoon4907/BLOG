{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Carousel } from \"react-bootstrap\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\nvar NoticeWrapper = styled.div.withConfig({\n  displayName: \"NoticeList__NoticeWrapper\",\n  componentId: \"ztp66g-0\"\n})([\"height:50px;display:flex;flex-direction:column;justify-content:center;margin-right:15%;margin-left:15%;padding:5px;text-align:center;cursor:pointer;\"]);\n_c = NoticeWrapper;\n\nvar NoticeList = function NoticeList(_ref) {\n  _s();\n\n  var notices = _ref.notices;\n  var dispatch = useVssDispatch();\n\n  var _useVssState = useVssState(),\n      isMaster = _useVssState.isMaster;\n\n  var handleClick = useCallback(function (title, description, noticeId) {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: isMaster ? \"modifiable\" : \"readonly\",\n      actionText: \"\",\n      title: title,\n      description: description,\n      noticeId: noticeId\n    });\n  }, [isMaster]);\n  return __jsx(CarouselContainer, null, notices.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        description = _ref2.description,\n        updatedAt = _ref2.updatedAt;\n    return __jsx(Carousel.Item, {\n      key: id\n    }, __jsx(NoticeWrapper, {\n      onClick: function onClick() {\n        return handleClick(title, description, id);\n      }\n    }, __jsx(\"div\", null, title), __jsx(Timestamp, {\n      text: updatedAt\n    })));\n  }));\n};\n\n_s(NoticeList, \"k37QNxgrP6CzQsnGA39LBl+Zptc=\", false, function () {\n  return [useVssDispatch, useVssState];\n});\n\n_c2 = NoticeList;\nexport default _c3 = memo(NoticeList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NoticeWrapper\");\n$RefreshReg$(_c2, \"NoticeList\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx"],"names":["React","useCallback","memo","styled","Carousel","CarouselContainer","Timestamp","useVssState","useVssDispatch","SHOW_NOTICE_MODAL","NoticeWrapper","div","NoticeList","notices","dispatch","isMaster","handleClick","title","description","noticeId","type","action","actionText","map","id","updatedAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,IAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,4JAAnB;KAAMD,a;;AAgBN,IAAME,UAAqB,GAAG,SAAxBA,UAAwB,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7C,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;;AAD6C,qBAExBD,WAAW,EAFa;AAAA,MAErCQ,QAFqC,gBAErCA,QAFqC;;AAI7C,MAAMC,WAAW,GAAGf,WAAW,CAC7B,UAACgB,KAAD,EAAQC,WAAR,EAAqBC,QAArB,EAAkC;AAChCL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,iBADC;AAEPY,MAAAA,MAAM,EAAEN,QAAQ,GAAG,YAAH,GAAkB,UAF3B;AAGPO,MAAAA,UAAU,EAAE,EAHL;AAIPL,MAAAA,KAAK,EAALA,KAJO;AAKPC,MAAAA,WAAW,EAAXA,WALO;AAMPC,MAAAA,QAAQ,EAARA;AANO,KAAD,CAAR;AAQD,GAV4B,EAW7B,CAACJ,QAAD,CAX6B,CAA/B;AAaA,SACE,MAAC,iBAAD,QACGF,OAAO,CAACU,GAAR,CAAY;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOP,KAAP,SAAOA,KAAP;AAAA,QAAcC,WAAd,SAAcA,WAAd;AAAA,QAA2BO,SAA3B,SAA2BA,SAA3B;AAAA,WACX,MAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAED;AAApB,OACE,MAAC,aAAD;AAAe,MAAA,OAAO,EAAE;AAAA,eAAMR,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBM,EAArB,CAAjB;AAAA;AAAxB,OACE,mBAAMP,KAAN,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,IAAI,EAAEQ;AAAjB,MAFF,CADF,CADW;AAAA,GAAZ,CADH,CADF;AAYD,CA7BD;;GAAMb,U;UACaJ,c,EACID,W;;;MAFjBK,U;AA+BN,qBAAeV,IAAI,CAACU,UAAD,CAAnB","sourcesContent":["import React, { useCallback, FC, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Carousel } from \"react-bootstrap\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { Notice } from \"../../interfaces\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nconst NoticeWrapper = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-right: 15%;\n  margin-left: 15%;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n`;\n\ninterface Props {\n  notices: Notice[];\n}\n\nconst NoticeList: FC<Props> = ({ notices }) => {\n  const dispatch = useVssDispatch();\n  const { isMaster } = useVssState();\n\n  const handleClick = useCallback(\n    (title, description, noticeId) => {\n      dispatch({\n        type: SHOW_NOTICE_MODAL,\n        action: isMaster ? \"modifiable\" : \"readonly\",\n        actionText: \"\",\n        title,\n        description,\n        noticeId\n      });\n    },\n    [isMaster]\n  );\n  return (\n    <CarouselContainer>\n      {notices.map(({ id, title, description, updatedAt }) => (\n        <Carousel.Item key={id}>\n          <NoticeWrapper onClick={() => handleClick(title, description, id)}>\n            <div>{title}</div>\n            <Timestamp text={updatedAt} />\n          </NoticeWrapper>\n        </Carousel.Item>\n      ))}\n    </CarouselContainer>\n  );\n};\n\nexport default memo(NoticeList);\n"]},"metadata":{},"sourceType":"module"}