{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/auth/SignUpPresenter.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Label, InputWrapper } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { Thumbnail } from \"../icon\";\nconst UploadWrapper = styled.div.withConfig({\n  displayName: \"SignUpPresenter__UploadWrapper\",\n  componentId: \"sc-5fc15h-0\"\n})([\"\", \" width:100%;height:150px;display:flex;justify-content:center;align-items:center;margin-bottom:10px;cursor:pointer;& img{width:100%;height:100%;}\"], props => props.theme.whiteBox);\n\nconst SignUpPresenter = ({\n  loading,\n  signUpLoading,\n  nickname,\n  email,\n  pwd,\n  confirmPwd,\n  preview,\n  fileEl,\n  confirmPwdEl,\n  onChangePreview,\n  onChangeConfirmPwd,\n  onClickUpload,\n  onSubmit\n}) => {\n  return __jsx(React.Fragment, null, (loading || signUpLoading) && __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }\n  }), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(UploadWrapper, {\n    onClick: onClickUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, preview ? __jsx(\"img\", {\n    src: preview,\n    alt: \"avatar\",\n    title: \"\\uBCC0\\uACBD\\uD558\\uB824\\uBA74 \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }) : __jsx(Thumbnail, {\n    style: {\n      width: 100,\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    onChange: onChangePreview,\n    ref: fileEl,\n    hidden: true,\n    accept: \"image/jpg, image/jpeg, image/png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), __jsx(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    htmlFor: \"email\",\n    val: email.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(Input, _extends({\n    type: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\",\n    name: \"email\",\n    autoComplete: \"off\",\n    required: true\n  }, email, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), __jsx(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    htmlFor: \"password\",\n    val: pwd.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"\\uC554\\uD638\"), __jsx(Input, _extends({\n    type: \"password\",\n    placeholder: \"\\uC554\\uD638\",\n    name: \"password\",\n    required: true\n  }, pwd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))), __jsx(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    htmlFor: \"conform_password\",\n    val: confirmPwd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"\\uC554\\uD638 \\uD655\\uC778\"), __jsx(Input, {\n    type: \"password\",\n    placeholder: \"\\uC554\\uD638 \\uD655\\uC778\",\n    name: \"conform_password\",\n    required: true,\n    value: confirmPwd,\n    onChange: onChangeConfirmPwd,\n    ref: confirmPwdEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), __jsx(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    htmlFor: \"nickname\",\n    val: nickname.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(Input, _extends({\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    required: true,\n    name: \"nickname\"\n  }, nickname, {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), __jsx(Button, {\n    text: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SignUpPresenter;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/auth/SignUpPresenter.tsx"],"names":["React","styled","Label","InputWrapper","Input","Button","Loader","Thumbnail","UploadWrapper","div","props","theme","whiteBox","SignUpPresenter","loading","signUpLoading","nickname","email","pwd","confirmPwd","preview","fileEl","confirmPwdEl","onChangePreview","onChangeConfirmPwd","onClickUpload","onSubmit","width","height","value"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Label, InputWrapper } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { Thumbnail } from \"../icon\";\nimport { UseInputProps } from \"../../hooks\";\n\nconst UploadWrapper = styled.div`\n  ${props => props.theme.whiteBox}\n  width: 100%;\n  height: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n  cursor: pointer;\n\n  & img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ninterface Props {\n  loading: boolean;\n  signUpLoading: boolean;\n  nickname: UseInputProps;\n  email: UseInputProps;\n  pwd: UseInputProps;\n  confirmPwd: string;\n  preview: string;\n  fileEl: any;\n  confirmPwdEl: any;\n  onChangePreview: any;\n  onChangeConfirmPwd: any;\n  onClickUpload: any;\n  onSubmit: any;\n}\n\nconst SignUpPresenter: FC<Props> = ({\n  loading,\n  signUpLoading,\n  nickname,\n  email,\n  pwd,\n  confirmPwd,\n  preview,\n  fileEl,\n  confirmPwdEl,\n  onChangePreview,\n  onChangeConfirmPwd,\n  onClickUpload,\n  onSubmit\n}) => {\n  return (\n    <>\n      {(loading || signUpLoading) && <Loader />}\n      <form onSubmit={onSubmit}>\n        <UploadWrapper onClick={onClickUpload}>\n          {preview ? (\n            <img src={preview} alt=\"avatar\" title=\"변경하려면 클릭하세요.\" />\n          ) : (\n            <Thumbnail style={{ width: 100, height: 50 }} />\n          )}\n\n          <input\n            type=\"file\"\n            onChange={onChangePreview}\n            ref={fileEl}\n            hidden\n            accept=\"image/jpg, image/jpeg, image/png\"\n          />\n        </UploadWrapper>\n        <InputWrapper>\n          <Label htmlFor=\"email\" val={email.value}>\n            이메일\n          </Label>\n          <Input\n            type=\"email\"\n            placeholder=\"이메일\"\n            name=\"email\"\n            autoComplete=\"off\"\n            required\n            {...email}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Label htmlFor=\"password\" val={pwd.value}>\n            암호\n          </Label>\n          <Input\n            type=\"password\"\n            placeholder=\"암호\"\n            name=\"password\"\n            required\n            {...pwd}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Label htmlFor=\"conform_password\" val={confirmPwd}>\n            암호 확인\n          </Label>\n          <Input\n            type=\"password\"\n            placeholder=\"암호 확인\"\n            name=\"conform_password\"\n            required\n            value={confirmPwd}\n            onChange={onChangeConfirmPwd}\n            ref={confirmPwdEl}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Label htmlFor=\"nickname\" val={nickname.value}>\n            닉네임\n          </Label>\n          <Input\n            placeholder=\"닉네임\"\n            required\n            name=\"nickname\"\n            {...nickname}\n            autoComplete=\"off\"\n          />\n        </InputWrapper>\n        <Button text=\"회원가입\" type=\"submit\" />\n      </form>\n    </>\n  );\n};\n\nexport default SignUpPresenter;\n"]},"metadata":{},"sourceType":"module"}