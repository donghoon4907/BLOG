{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport Section from \"../common/Section\";\nimport PostContainer from \"../post/PostContainer\";\n\nvar SearchUserPresenter = function SearchUserPresenter(_ref) {\n  var users = _ref.users;\n  return __jsx(Section, null, getPosts.length > 0 && __jsx(Filter, null, __jsx(Accordion, null, __jsx(Card, null, __jsx(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"0\"\n  }, __jsx(\"h1\", null, \"\\uD544\\uD130\")), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(Card.Body, null, __jsx(Table, {\n    responsive: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"\\uC815\\uB82C\\uAE30\\uC900\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"createdAt_DESC\");\n    },\n    active: orderBy === \"createdAt_DESC\"\n  }, \"\\uB4F1\\uB85D\\uC77C \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"createdAt_ASC\");\n    },\n    active: orderBy === \"createdAt_ASC\"\n  }, \"\\uB4F1\\uB85D\\uC77C \\uC5ED\\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"title_ASC\");\n    },\n    active: orderBy === \"title_ASC\"\n  }, \"\\uAC00\\uB098\\uB2E4 \\uC21C\")), __jsx(\"tr\", null, __jsx(StyledTd, {\n    onClick: function onClick() {\n      return onSort(\"title_DESC\");\n    },\n    active: orderBy === \"title_DESC\"\n  }, \"\\uAC00\\uB098\\uB2E4 \\uC5ED\\uC21C\"))))))))), getPosts.length > 0 ? getPosts.map(function (post) {\n    return __jsx(PostContainer, _extends({\n      key: post.id\n    }, post));\n  }) : __jsx(NoSearch, null, __jsx(\"h1\", null, \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n};\n\n_c = SearchUserPresenter;\nexport default SearchPostPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUserPresenter\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchUserPresenter.tsx"],"names":["React","Accordion","Card","Table","Section","PostContainer","SearchUserPresenter","users","getPosts","length","Header","onSort","orderBy","map","post","id","SearchPostPresenter"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,iBAAvC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAMA,IAAMC,mBAA8B,GAAG,SAAjCA,mBAAiC;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACrC,MAAC,OAAD,QACGC,QAAQ,CAACC,MAAT,GAAkB,CAAlB,IACC,MAAC,MAAD,QACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,MAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAEP,IAAI,CAACQ,MAA3B;AAAmC,IAAA,QAAQ,EAAC;AAA5C,KACE,iCADF,CADF,EAIE,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC;AAA7B,KACE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,KAAD;AAAO,IAAA,UAAU;AAAjB,KACE,qBACE,kBACE,6CADF,CADF,CADF,EAME,qBACE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,CAAC,gBAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAEC,OAAO,KAAK;AAFtB,iCADF,CADF,EASE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,MAAM,CAAC,eAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAEC,OAAO,KAAK;AAFtB,uCADF,CATF,EAiBE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,MAAM,CAAC,WAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAEC,OAAO,KAAK;AAFtB,iCADF,CAjBF,EAyBE,kBACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,MAAM,CAAC,YAAD,CAAZ;AAAA,KADX;AAEE,IAAA,MAAM,EAAEC,OAAO,KAAK;AAFtB,uCADF,CAzBF,CANF,CADF,CADF,CAJF,CADF,CADF,CAFJ,EAyDGJ,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GACCD,QAAQ,CAACK,GAAT,CAAa,UAAAC,IAAI;AAAA,WAAI,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,OAAiCD,IAAjC,EAAJ;AAAA,GAAjB,CADD,GAGC,MAAC,QAAD,QACE,8EADF,CA5DJ,CADqC;AAAA,CAAvC;;KAAMR,mB;AAoEN,eAAeU,mBAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport Section from \"../common/Section\";\nimport PostContainer from \"../post/PostContainer\";\n\ntype Props = {\n  users: any;\n};\n\nconst SearchUserPresenter: FC<Props> = ({ users }) => (\n  <Section>\n    {getPosts.length > 0 && (\n      <Filter>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              <h1>필터</h1>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>정렬기준</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_DESC\")}\n                        active={orderBy === \"createdAt_DESC\"}\n                      >\n                        등록일 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"createdAt_ASC\")}\n                        active={orderBy === \"createdAt_ASC\"}\n                      >\n                        등록일 역순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_ASC\")}\n                        active={orderBy === \"title_ASC\"}\n                      >\n                        가나다 순\n                      </StyledTd>\n                    </tr>\n                    <tr>\n                      <StyledTd\n                        onClick={() => onSort(\"title_DESC\")}\n                        active={orderBy === \"title_DESC\"}\n                      >\n                        가나다 역순\n                      </StyledTd>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Filter>\n    )}\n    {getPosts.length > 0 ? (\n      getPosts.map(post => <PostContainer key={post.id} {...post} />)\n    ) : (\n      <NoSearch>\n        <h1>검색 결과가 없습니다.</h1>\n      </NoSearch>\n    )}\n  </Section>\n);\n\nexport default SearchPostPresenter;\n"]},"metadata":{},"sourceType":"module"}