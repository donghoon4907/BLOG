{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nconst Index = () => {\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    ssr: false,\n    onCompleted: ({\n      getMyProfile\n    }) => {\n      const {\n        id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\nexport const getStaticProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    },\n    fetchPolicy: \"network-only\"\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    }\n  };\n};\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}