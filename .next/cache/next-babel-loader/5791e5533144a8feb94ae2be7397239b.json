{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput, useLazyAxios } from \"../../hooks\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport { signUpMutation } from \"../../graphql/user/mutation/signup\";\n\nvar SignUpContainer = function SignUpContainer(_ref) {\n  _s();\n\n  var setAction = _ref.setAction;\n\n  var _useLazyAxios = useLazyAxios(),\n      loading = _useLazyAxios.loading,\n      call = _useLazyAxios.call;\n\n  var fileEl = useRef(null);\n  var confirmPwdEl = useRef(null);\n  var nickname = useInput(\"\");\n  var email = useInput(\"\");\n  var pwd = useInput(\"\");\n\n  var _useState = useState(\"\"),\n      confirmPwd = _useState[0],\n      setConfirmPwd = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      preview = _useState2[0],\n      setPreview = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      file = _useState3[0],\n      setFile = _useState3[1];\n\n  var _useMutation = useMutation(signUpMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signUp = _useMutation2[0],\n      signUpLoading = _useMutation2[1].loading;\n\n  var handleChangeConfirmPwd = useCallback(function (e) {\n    var value = e.target.value;\n    var node = confirmPwdEl.current;\n    setConfirmPwd(value);\n\n    if (pwd.value !== value) {\n      if (node) {\n        node.setCustomValidity(\"비밀번호가 일치하지 않습니다.\");\n      }\n    } else {\n      if (node) {\n        node.setCustomValidity(\"\");\n      }\n    }\n  }, [pwd.value]);\n  var handleChangePreview = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _ref3, value, files, _files, file, formData, _yield$call, data, error, reader;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref3 = e.target, value = _ref3.value, files = _ref3.files;\n\n              if (value) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!loading) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              // prevent same request\n              _files = _slicedToArray(files, 1), file = _files[0];\n              formData = new FormData();\n              formData.append(\"file\", file);\n              _context.next = 10;\n              return call({\n                method: \"post\",\n                url: \"\".concat(process.env.BACKEND_API_PATH, \"/api/upload\"),\n                data: formData,\n                headers: {\n                  \"content-type\": \"multipart/form-data\"\n                }\n              });\n\n            case 10:\n              _yield$call = _context.sent;\n              data = _yield$call.data;\n              error = _yield$call.error;\n\n              if (data) {\n                reader = new FileReader();\n\n                reader.onloadend = function () {\n                  setPreview(reader.result);\n                  setFile(data);\n                };\n\n                reader.readAsDataURL(file);\n              }\n\n              if (error) {\n                alert(\"썸네일 업로드 중 오류가 발생했습니다.\");\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [loading]);\n  var handleClickUpload = useCallback(function () {\n    var node = fileEl.current;\n\n    if (node) {\n      node.click();\n    }\n  }, []);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var _yield$signUp, addUser;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!signUpLoading) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.next = 5;\n              return signUp({\n                variables: {\n                  email: email.value,\n                  pwd: pwd.value,\n                  nickname: nickname.value,\n                  file: file ? file : process.env.DEFAULT_AVATAR\n                }\n              });\n\n            case 5:\n              _yield$signUp = _context2.sent;\n              addUser = _yield$signUp.data.addUser;\n\n              if (addUser) {\n                setAction(\"login\");\n                alert(\"회원가입이 정상처리되었습니다.\");\n              } else {\n                alert(\"요청 중 오류가 발생했습니다.\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [email.value, pwd.value, nickname.value, file, signUpLoading]);\n  return __jsx(SignUpPresenter, {\n    loading: loading,\n    signUpLoading: signUpLoading,\n    nickname: nickname,\n    email: email,\n    pwd: pwd,\n    confirmPwd: confirmPwd,\n    preview: preview,\n    fileEl: fileEl,\n    confirmPwdEl: confirmPwdEl,\n    onChangePreview: handleChangePreview,\n    onChangeConfirmPwd: handleChangeConfirmPwd,\n    onClickUpload: handleClickUpload,\n    onSubmit: handleSubmit\n  });\n};\n\n_s(SignUpContainer, \"p7D+NZ+6dwLM4DGHHzAAp8bEpnI=\", false, function () {\n  return [useLazyAxios, useInput, useInput, useInput, useMutation];\n});\n\n_c = SignUpContainer;\nexport default SignUpContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/auth/SignUpContainer.tsx"],"names":["React","useState","useCallback","useRef","useMutation","useInput","useLazyAxios","SignUpPresenter","signUpMutation","SignUpContainer","setAction","loading","call","fileEl","confirmPwdEl","nickname","email","pwd","confirmPwd","setConfirmPwd","preview","setPreview","file","setFile","signUp","signUpLoading","handleChangeConfirmPwd","e","value","target","node","current","setCustomValidity","handleChangePreview","files","formData","FormData","append","method","url","process","env","BACKEND_API_PATH","data","headers","error","reader","FileReader","onloadend","result","readAsDataURL","alert","handleClickUpload","click","handleSubmit","preventDefault","variables","DEFAULT_AVATAR","addUser"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useRef,\n  FC,\n  FormEvent,\n  ChangeEvent\n} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput, useLazyAxios } from \"../../hooks\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport { signUpMutation } from \"../../graphql/user/mutation/signup\";\n\ntype Props = {\n  setAction: any;\n};\n\nconst SignUpContainer: FC<Props> = ({ setAction }) => {\n  const { loading, call } = useLazyAxios();\n  const fileEl = useRef<HTMLInputElement>(null);\n  const confirmPwdEl = useRef<HTMLInputElement>(null);\n\n  const nickname = useInput(\"\");\n  const email = useInput(\"\");\n  const pwd = useInput(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [preview, setPreview] = useState<string>(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const [signUp, { loading: signUpLoading }] = useMutation(signUpMutation);\n\n  const handleChangeConfirmPwd = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const node = confirmPwdEl.current;\n      setConfirmPwd(value);\n\n      if (pwd.value !== value) {\n        if (node) {\n          node.setCustomValidity(\"비밀번호가 일치하지 않습니다.\");\n        }\n      } else {\n        if (node) {\n          node.setCustomValidity(\"\");\n        }\n      }\n    },\n    [pwd.value]\n  );\n\n  const handleChangePreview = useCallback(\n    async (e: ChangeEvent<HTMLInputElement>) => {\n      const { value, files } = e.target as any;\n      if (!value) return; // prevent cancel action\n      if (loading) return; // prevent same request\n\n      const [file] = files;\n\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      const { data, error } = await call({\n        method: \"post\",\n        url: `${process.env.BACKEND_API_PATH}/api/upload`,\n        data: formData,\n        headers: { \"content-type\": \"multipart/form-data\" }\n      });\n\n      if (data) {\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n          setPreview(reader.result as string);\n          setFile(data);\n        };\n\n        reader.readAsDataURL(file);\n      }\n\n      if (error) {\n        alert(\"썸네일 업로드 중 오류가 발생했습니다.\");\n      }\n    },\n    [loading]\n  );\n\n  const handleClickUpload = useCallback(() => {\n    const node = fileEl.current;\n    if (node) {\n      node.click();\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (signUpLoading) return;\n\n      const {\n        data: { addUser }\n      } = await signUp({\n        variables: {\n          email: email.value,\n          pwd: pwd.value,\n          nickname: nickname.value,\n          file: file ? file : process.env.DEFAULT_AVATAR\n        }\n      });\n      if (addUser) {\n        setAction(\"login\");\n        alert(\"회원가입이 정상처리되었습니다.\");\n      } else {\n        alert(\"요청 중 오류가 발생했습니다.\");\n      }\n    },\n    [email.value, pwd.value, nickname.value, file, signUpLoading]\n  );\n\n  return (\n    <SignUpPresenter\n      loading={loading}\n      signUpLoading={signUpLoading}\n      nickname={nickname}\n      email={email}\n      pwd={pwd}\n      confirmPwd={confirmPwd}\n      preview={preview}\n      fileEl={fileEl}\n      confirmPwdEl={confirmPwdEl}\n      onChangePreview={handleChangePreview}\n      onChangeConfirmPwd={handleChangeConfirmPwd}\n      onClickUpload={handleClickUpload}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default SignUpContainer;\n"]},"metadata":{},"sourceType":"module"}