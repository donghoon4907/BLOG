{"ast":null,"code":"import { useLazyQuery } from \"@apollo/client\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { getAccessToken } from \"../lib/token\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nexport default async function isAuthenticated() {\n  const dispatch = useVssDispatch();\n  const [me] = useLazyQuery(meQuery);\n  const token = getAccessToken();\n\n  if (token) {\n    const {\n      data: {\n        getMyProfile\n      }\n    } = await me();\n\n    if (getMyProfile) {\n      dispatch({\n        type: SET_ME,\n        id: getMyProfile.id,\n        nickname: getMyProfile.nickname,\n        email: getMyProfile.email,\n        avatar: getMyProfile.avatar,\n        isMaster: getMyProfile.isMaster\n      });\n    }\n  }\n}","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/lib/isAuthenticated.ts"],"names":["useLazyQuery","meQuery","getAccessToken","useVssDispatch","SET_ME","isAuthenticated","dispatch","me","token","data","getMyProfile","type","id","nickname","email","avatar","isMaster"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;AAEA,eAAe,eAAeC,eAAf,GAAiC;AAC9C,QAAMC,QAAQ,GAAGH,cAAc,EAA/B;AACA,QAAM,CAACI,EAAD,IAAOP,YAAY,CAACC,OAAD,CAAzB;AACA,QAAMO,KAAK,GAAGN,cAAc,EAA5B;;AACA,MAAIM,KAAJ,EAAW;AACT,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEF,MAAMH,EAAE,EAFZ;;AAGA,QAAIG,YAAJ,EAAkB;AAChBJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEP,MADC;AAEPQ,QAAAA,EAAE,EAAEF,YAAY,CAACE,EAFV;AAGPC,QAAAA,QAAQ,EAAEH,YAAY,CAACG,QAHhB;AAIPC,QAAAA,KAAK,EAAEJ,YAAY,CAACI,KAJb;AAKPC,QAAAA,MAAM,EAAEL,YAAY,CAACK,MALd;AAMPC,QAAAA,QAAQ,EAAEN,YAAY,CAACM;AANhB,OAAD,CAAR;AAQD;AACF;AACF","sourcesContent":["import { useLazyQuery } from \"@apollo/client\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { getAccessToken } from \"../lib/token\";\nimport { useVssDispatch, SET_ME } from \"../context\";\n\nexport default async function isAuthenticated() {\n  const dispatch = useVssDispatch();\n  const [me] = useLazyQuery(meQuery);\n  const token = getAccessToken();\n  if (token) {\n    const {\n      data: { getMyProfile }\n    } = await me();\n    if (getMyProfile) {\n      dispatch({\n        type: SET_ME,\n        id: getMyProfile.id,\n        nickname: getMyProfile.nickname,\n        email: getMyProfile.email,\n        avatar: getMyProfile.avatar,\n        isMaster: getMyProfile.isMaster\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}