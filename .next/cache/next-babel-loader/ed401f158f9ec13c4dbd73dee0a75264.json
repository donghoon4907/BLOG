{"ast":null,"code":"var __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React, { useCallback, Fragment, memo } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { keywordQuery } from \"../../graphql/search/query/keyword\";\nvar Container = styled.div.withConfig({\n  displayName: \"SearchResult__Container\",\n  componentId: \"sc-5fh9lp-0\"\n})([\"\", \";width:100%;position:absolute;display:flex;flex-direction:column;top:37px;left:0;height:auto;overflow:hidden;\"], function (props) {\n  return props.theme.whiteBox;\n});\nvar ContentType = styled.div.withConfig({\n  displayName: \"SearchResult__ContentType\",\n  componentId: \"sc-5fh9lp-1\"\n})([\"background:rgba(0,0,0,0.03);font-size:14px;padding:5px;border-bottom:\", \";\"], function (props) {\n  return props.theme.boxBorder;\n});\nvar Item = styled.li.withConfig({\n  displayName: \"SearchResult__Item\",\n  componentId: \"sc-5fh9lp-2\"\n})([\"padding:5px;font-size:12px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;width:240px;\", \"{width:100px;}\"], function (props) {\n  return props.theme.media.tablet;\n});\n\nvar SearchResult = function SearchResult(_ref) {\n  var searchKeyword = _ref.searchKeyword,\n      setSearch = _ref.setSearch,\n      setSearchKeyword = _ref.setSearchKeyword;\n\n  var _useQuery = useQuery(keywordQuery, {\n    variables: {\n      searchKeyword: searchKeyword\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var handleClickItem = useCallback(function (keyword) {\n    Router.push(\"/search?keyword=\".concat(keyword));\n    setSearch(keyword);\n    setSearchKeyword(\"\");\n  }, []);\n\n  if (loading || data.getSearchKeyword.length === 0) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Container, null, __jsx(ContentType, null, \"\\uC5F0\\uAD00 \\uAC80\\uC0C9\\uC5B4\"), __jsx(\"ol\", null, data.getSearchKeyword.map(function (_ref2) {\n    var id = _ref2.id,\n        keyword = _ref2.keyword;\n    return __jsx(Item, {\n      key: id,\n      onClick: function onClick() {\n        return handleClickItem(keyword);\n      }\n    }, keyword);\n  })));\n};\n\nexport default memo(SearchResult);","map":null,"metadata":{},"sourceType":"module"}