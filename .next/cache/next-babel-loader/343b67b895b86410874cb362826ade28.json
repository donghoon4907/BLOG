{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Layout from \"../components/common/Layout\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\n\nvar Search = function Search() {\n  _s();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    isAuthenticated();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Layout, null, \"TEST\");\n};\n\n_s(Search, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c = Search;\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(context.query);\n            console.log(context.apolloClient);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useEffect","useState","Fragment","Layout","isAuthenticated","Search","loading","setLoading","getInitialProps","context","console","log","query","apolloClient"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;AAEA,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,GAAM;AAAA;;AAAA,kBACCJ,QAAQ,CAAC,IAAD,CADT;AAAA,MACtBK,OADsB;AAAA,MACbC,UADa;;AAE7BP,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,eAAe;AACfG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAID,OAAJ,EAAa;AACX,WAAO,MAAC,QAAD,OAAP;AACD;;AAED,SAAO,MAAC,MAAD,eAAP;AACD,CAZD;;GAAMD,M;;KAAAA,M;;AAaNA,MAAM,CAACG,eAAP;AAAA,sEAAyB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAApB;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACI,YAApB;;AAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeR,MAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { NextPage } from \"next\";\nimport Layout from \"../components/common/Layout\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\n\nconst Search: NextPage = () => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    isAuthenticated();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return <Fragment />;\n  }\n\n  return <Layout>TEST</Layout>;\n};\nSearch.getInitialProps = async (context: any) => {\n  console.log(context.query);\n  console.log(context.apolloClient);\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}