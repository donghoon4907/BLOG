{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { StateChanger } from \"../common/Form\";\nvar Link = styled.span.withConfig({\n  displayName: \"AuthPresenter__Link\",\n  componentId: \"sc-1y9205r-0\"\n})([\"color:\", \";cursor:pointer;\"], function (props) {\n  return props.theme.blueColor;\n});\n_c = Link;\n\nvar AuthPresenter = function AuthPresenter(_ref) {\n  var loading = _ref.loading,\n      email = _ref.email,\n      pwd = _ref.pwd,\n      onClose = _ref.onClose,\n      onSubmit = _ref.onSubmit;\n  return __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n    onHide: onClose,\n    animation: false,\n    show: true\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"\\uB85C\\uADF8\\uC778\")), __jsx(Modal.Body, null, __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"email\",\n    val: email.value\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(Input, _extends({\n    type: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\",\n    name: \"email\",\n    autoComplete: \"off\",\n    required: true\n  }, email))), __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"password\",\n    val: pwd.value\n  }, \"\\uC554\\uD638\"), __jsx(Input, _extends({\n    type: \"password\",\n    placeholder: \"\\uC554\\uD638\",\n    name: \"password\",\n    required: true\n  }, pwd))), __jsx(Button, {\n    text: \"\\uB85C\\uADF8\\uC778\"\n  })), __jsx(StateChanger, null, __jsx(\"div\", null, \"\\uACC4\\uC815\\uC774 \\uC5C6\\uB2E4\\uBA74\\xA0\", __jsx(Link, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))));\n};\n\n_c2 = AuthPresenter;\nexport default AuthPresenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Link\");\n$RefreshReg$(_c2, \"AuthPresenter\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/AuthPresenter.tsx"],"names":["React","Fragment","styled","Modal","InputWrapper","Label","Input","Button","Loader","StateChanger","Link","span","props","theme","blueColor","AuthPresenter","loading","email","pwd","onClose","onSubmit","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,gBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAGA,IAAMC,IAAI,GAAGR,MAAM,CAACS,IAAV;AAAA;AAAA;AAAA,mCACC,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,SAAhB;AAAA,CADN,CAAV;KAAMJ,I;;AAaN,IAAMK,aAAwB,GAAG,SAA3BA,aAA2B;AAAA,MAC/BC,OAD+B,QAC/BA,OAD+B;AAAA,MAE/BC,KAF+B,QAE/BA,KAF+B;AAAA,MAG/BC,GAH+B,QAG/BA,GAH+B;AAAA,MAI/BC,OAJ+B,QAI/BA,OAJ+B;AAAA,MAK/BC,QAL+B,QAK/BA,QAL+B;AAAA,SAO/B,MAAC,QAAD,QACGJ,OAAO,IAAI,MAAC,MAAD,OADd,EAEE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,OAAf;AAAwB,IAAA,SAAS,EAAE,KAAnC;AAA0C,IAAA,IAAI;AAA9C,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW;AAAzB,KACE,MAAC,KAAD,CAAO,KAAP,6BADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACE;AAAM,IAAA,QAAQ,EAAEC;AAAhB,KACE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEH,KAAK,CAACI;AAAlC,0BADF,EAIE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,QAAQ;AALV,KAMMJ,KANN,EAJF,CADF,EAcE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEC,GAAG,CAACG;AAAnC,oBADF,EAIE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ;AAJV,KAKMH,GALN,EAJF,CAdF,EA0BE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,IA1BF,CADF,EA6BE,MAAC,YAAD,QAEE,gEAEE,MAAC,IAAD,mCAFF,CAFF,CA7BF,CAJF,CAFF,CAP+B;AAAA,CAAjC;;MAAMH,a;AA6DN,eAAeA,aAAf","sourcesContent":["import React, { FC, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { StateChanger } from \"../common/Form\";\nimport { UseInputProps } from \"../../hooks\";\n\nconst Link = styled.span`\n  color: ${props => props.theme.blueColor};\n  cursor: pointer;\n`;\n\ntype Props = {\n  loading: boolean;\n  email: UseInputProps;\n  pwd: UseInputProps;\n  onClose: any;\n  onSubmit: any;\n};\n\nconst AuthPresenter: FC<Props> = ({\n  loading,\n  email,\n  pwd,\n  onClose,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={false} show>\n      <Modal.Header closeButton>\n        <Modal.Title>로그인</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={onSubmit}>\n          <InputWrapper>\n            <Label htmlFor=\"email\" val={email.value}>\n              이메일\n            </Label>\n            <Input\n              type=\"email\"\n              placeholder=\"이메일\"\n              name=\"email\"\n              autoComplete=\"off\"\n              required\n              {...email}\n            />\n          </InputWrapper>\n          <InputWrapper>\n            <Label htmlFor=\"password\" val={pwd.value}>\n              암호\n            </Label>\n            <Input\n              type=\"password\"\n              placeholder=\"암호\"\n              name=\"password\"\n              required\n              {...pwd}\n            />\n          </InputWrapper>\n          <Button text=\"로그인\" />\n        </form>\n        <StateChanger>\n          {/* {action === \"login\" && ( */}\n          <div>\n            계정이 없다면&nbsp;\n            <Link>회원가입</Link>\n          </div>\n          {/* )} */}\n          {/* {action === \"signup\" && (\n              <div>\n                계정이 있다면&nbsp;\n                <Link onClick={() => setAction(\"login\")}>로그인</Link>\n              </div>\n            )} */}\n        </StateChanger>\n      </Modal.Body>\n    </Modal>\n  </Fragment>\n);\n\nexport default AuthPresenter;\n"]},"metadata":{},"sourceType":"module"}