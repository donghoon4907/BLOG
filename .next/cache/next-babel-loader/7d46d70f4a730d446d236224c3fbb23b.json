{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport { followMutation, unfollowMutation } from \"../../graphql/user/mutation/follow\";\n\nconst FollowButton = ({\n  isFollowing,\n  userId\n}) => {\n  const {\n    0: ctrlIsFolling,\n    1: setCtrlIsFolling\n  } = useState(isFollowing);\n  const [follow, {\n    loading: followLoading\n  }] = useMutation(followMutation);\n  const [unfollow, {\n    loading: unfollowLoading\n  }] = useMutation(unfollowMutation);\n  const handleFollow = useCallback(async () => {\n    if (ctrlIsFolling) {\n      if (unfollowLoading) return;\n      const {\n        data\n      } = await unfollow({\n        variables: {\n          userId\n        }\n      });\n\n      if (data.unfollow) {\n        setCtrlIsFolling(false);\n        alert(\"언팔로우 되었습니다.\");\n      }\n    } else {\n      if (followLoading) return;\n      const {\n        data\n      } = await follow({\n        variables: {\n          userId\n        }\n      });\n\n      if (data.follow) {\n        setCtrlIsFolling(true);\n        alert(\"팔로우 되었습니다.\");\n      }\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n  return __jsx(Button, {\n    text: ctrlIsFolling ? \"언팔로우\" : \"팔로우\",\n    onClick: handleFollow\n  });\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/common/FollowButton.tsx"],"names":["React","useState","useCallback","useMutation","Button","followMutation","unfollowMutation","FollowButton","isFollowing","userId","ctrlIsFolling","setCtrlIsFolling","follow","loading","followLoading","unfollow","unfollowLoading","handleFollow","data","variables","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,cADF,EAEEC,gBAFF,QAGO,oCAHP;;AAUA,MAAMC,YAAuB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AAC3D,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCV,QAAQ,CAAUO,WAAV,CAAlD;AAEA,QAAM,CAACI,MAAD,EAAS;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAT,IAAuCX,WAAW,CAACE,cAAD,CAAxD;AACA,QAAM,CAACU,QAAD,EAAW;AAAEF,IAAAA,OAAO,EAAEG;AAAX,GAAX,IAA2Cb,WAAW,CAC1DG,gBAD0D,CAA5D;AAIA,QAAMW,YAAY,GAAGf,WAAW,CAAC,YAAY;AAC3C,QAAIQ,aAAJ,EAAmB;AACjB,UAAIM,eAAJ,EAAqB;AAErB,YAAM;AAAEE,QAAAA;AAAF,UAAW,MAAMH,QAAQ,CAAC;AAC9BI,QAAAA,SAAS,EAAE;AAAEV,UAAAA;AAAF;AADmB,OAAD,CAA/B;;AAGA,UAAIS,IAAI,CAACH,QAAT,EAAmB;AACjBJ,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAS,QAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,KAVD,MAUO;AACL,UAAIN,aAAJ,EAAmB;AAEnB,YAAM;AAAEI,QAAAA;AAAF,UAAW,MAAMN,MAAM,CAAC;AAC5BO,QAAAA,SAAS,EAAE;AAAEV,UAAAA;AAAF;AADiB,OAAD,CAA7B;;AAGA,UAAIS,IAAI,CAACN,MAAT,EAAiB;AACfD,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAS,QAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF;AACF,GAtB+B,EAsB7B,CAACV,aAAD,EAAgBI,aAAhB,EAA+BE,eAA/B,CAtB6B,CAAhC;AAwBA,SACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAEN,aAAa,GAAG,MAAH,GAAY,KADjC;AAEE,IAAA,OAAO,EAAEO;AAFX,IADF;AAMD,CAtCD;;AAwCA,eAAeV,YAAf","sourcesContent":["import React, { FC, useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport {\n  followMutation,\n  unfollowMutation\n} from \"../../graphql/user/mutation/follow\";\n\ninterface Props {\n  isFollowing: boolean;\n  userId: string;\n}\n\nconst FollowButton: FC<Props> = ({ isFollowing, userId }) => {\n  const [ctrlIsFolling, setCtrlIsFolling] = useState<boolean>(isFollowing);\n\n  const [follow, { loading: followLoading }] = useMutation(followMutation);\n  const [unfollow, { loading: unfollowLoading }] = useMutation(\n    unfollowMutation\n  );\n\n  const handleFollow = useCallback(async () => {\n    if (ctrlIsFolling) {\n      if (unfollowLoading) return;\n\n      const { data } = await unfollow({\n        variables: { userId }\n      });\n      if (data.unfollow) {\n        setCtrlIsFolling(false);\n        alert(\"언팔로우 되었습니다.\");\n      }\n    } else {\n      if (followLoading) return;\n\n      const { data } = await follow({\n        variables: { userId }\n      });\n      if (data.follow) {\n        setCtrlIsFolling(true);\n        alert(\"팔로우 되었습니다.\");\n      }\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n\n  return (\n    <Button\n      text={ctrlIsFolling ? \"언팔로우\" : \"팔로우\"}\n      onClick={handleFollow}\n    />\n  );\n};\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}