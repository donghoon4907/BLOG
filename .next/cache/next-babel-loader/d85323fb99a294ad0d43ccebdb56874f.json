{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport searchOptions from \"./search_options.json\";\nconst Container = styled.div.withConfig({\n  displayName: \"SearchTag__Container\",\n  componentId: \"n6c13p-0\"\n})([\"width:100%;margin:0 auto;margin-top:10px;margin-bottom:20px;\"]);\nconst FilterWrapper = styled.span.withConfig({\n  displayName: \"SearchTag__FilterWrapper\",\n  componentId: \"n6c13p-1\"\n})([\"\", \";display:inline-block;padding:10px;& + &{margin-left:10px;}\"], props => props.theme.whiteBox);\nconst sortAndFilter = searchOptions.sort.concat(searchOptions.filter);\n\nconst setTag = keyword => keyword.map(v => {\n  const splitQuery = v.split(\"=\");\n  return {\n    query: splitQuery[0],\n    value: splitQuery[1],\n    text: splitQuery[0] !== \"searchKeyword\" ? sortAndFilter.filter(v2 => v2.value === splitQuery[1])[0].text : \"\"\n  };\n});\n\nconst SearchTag = () => {\n  const router = useRouter();\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(router.query.keyword ? setTag(router.query.keyword) : []);\n  const handleRemove = useCallback(text => {\n    const nextFilters = filters.filter(v => v.text !== text);\n    setFilters(nextFilters);\n    const keyword = nextFilters.find(v => v.query === \"searchKeyword\");\n    const sort = nextFilters.find(v => v.query === \"orderBy\");\n    const filter = nextFilters.filter(v => v.query === \"filter\");\n    let url = `/search/searchKeyword=${keyword.value}`;\n\n    if (sort) {\n      url += `/orderBy=${sort.value}`;\n    }\n\n    filter.forEach(v => {\n      url += `/filter=${v.value}`;\n    });\n    router.push(url);\n  }, [filters, router.query]);\n  useEffect(() => {\n    setFilters(router.query.keyword ? setTag(router.query.keyword) : []);\n  }, [router.query.keyword]);\n  return __jsx(Container, null, filters.filter(v => v.text).map(v => __jsx(FilterWrapper, {\n    key: v.value\n  }, v.text, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    style: {\n      marginLeft: 10,\n      cursor: \"pointer\"\n    },\n    onClick: () => handleRemove(v.text)\n  }, \"\\xD7\"))));\n};\n\nexport default SearchTag;","map":null,"metadata":{},"sourceType":"module"}