{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\nvar NoticeWrapper = styled.div.withConfig({\n  displayName: \"NoticeList__NoticeWrapper\",\n  componentId: \"ztp66g-0\"\n})([\"height:50px;display:flex;flex-direction:column;justify-content:center;margin-right:15%;margin-left:15%;padding:5px;text-align:center;cursor:pointer;\"]);\n_c = NoticeWrapper;\n\nvar NoticeList = function NoticeList() {\n  _s();\n\n  var dispatch = useVssDispatch();\n\n  var _useVssState = useVssState(),\n      isMaster = _useVssState.isMaster;\n\n  var _useQuery = useQuery(noticesQuery),\n      getNotices = _useQuery.data.getNotices;\n\n  var handleClick = useCallback(function (title, description, noticeId) {\n    dispatch({\n      type: SHOW_NOTICE_MODAL,\n      action: isMaster ? \"modifiable\" : \"readonly\",\n      actionText: \"\",\n      title: title,\n      description: description,\n      noticeId: noticeId\n    });\n  }, [isMaster]);\n\n  var mapToNotices = function mapToNotices() {\n    return getNotices.length > 0 ? getNotices.map(function (_ref) {\n      var id = _ref.id,\n          title = _ref.title,\n          description = _ref.description,\n          updatedAt = _ref.updatedAt;\n      return __jsx(Carousel.Item, {\n        key: id\n      }, __jsx(NoticeWrapper, {\n        onClick: function onClick() {\n          return handleClick(title, description, id);\n        }\n      }, __jsx(\"div\", null, title), __jsx(Timestamp, {\n        text: updatedAt\n      })));\n    }) : __jsx(NoData, null, \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\");\n  };\n\n  return __jsx(CarouselContainer, null);\n};\n\n_s(NoticeList, \"3OYP7Rb+gu+1u1xVKFUwKfriHqo=\", false, function () {\n  return [useVssDispatch, useVssState, useQuery];\n});\n\n_c2 = NoticeList;\nexport default _c3 = memo(NoticeList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NoticeWrapper\");\n$RefreshReg$(_c2, \"NoticeList\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/feed/NoticeList.tsx"],"names":["React","useCallback","memo","styled","useQuery","Carousel","noticesQuery","CarouselContainer","Timestamp","useVssState","useVssDispatch","SHOW_NOTICE_MODAL","NoticeWrapper","div","NoticeList","dispatch","isMaster","getNotices","data","handleClick","title","description","noticeId","type","action","actionText","mapToNotices","length","map","id","updatedAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAwC,gBAAxC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,IAAMC,aAAa,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,4JAAnB;KAAMD,a;;AAYN,IAAME,UAAc,GAAG,SAAjBA,UAAiB,GAAM;AAAA;;AAC3B,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAD2B,qBAEND,WAAW,EAFL;AAAA,MAEnBO,QAFmB,gBAEnBA,QAFmB;;AAAA,kBAMvBZ,QAAQ,CAACE,YAAD,CANe;AAAA,MAKjBW,UALiB,aAKzBC,IALyB,CAKjBD,UALiB;;AAQ3B,MAAME,WAAW,GAAGlB,WAAW,CAC7B,UAACmB,KAAD,EAAQC,WAAR,EAAqBC,QAArB,EAAkC;AAChCP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEZ,iBADC;AAEPa,MAAAA,MAAM,EAAER,QAAQ,GAAG,YAAH,GAAkB,UAF3B;AAGPS,MAAAA,UAAU,EAAE,EAHL;AAIPL,MAAAA,KAAK,EAALA,KAJO;AAKPC,MAAAA,WAAW,EAAXA,WALO;AAMPC,MAAAA,QAAQ,EAARA;AANO,KAAD,CAAR;AAQD,GAV4B,EAW7B,CAACN,QAAD,CAX6B,CAA/B;;AAcA,MAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOT,UAAU,CAACU,MAAX,GAAoB,CAApB,GACLV,UAAU,CAACW,GAAX,CAAe;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,UAAOT,KAAP,QAAOA,KAAP;AAAA,UAAcC,WAAd,QAAcA,WAAd;AAAA,UAA2BS,SAA3B,QAA2BA,SAA3B;AAAA,aACb,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,GAAG,EAAED;AAApB,SACE,MAAC,aAAD;AAAe,QAAA,OAAO,EAAE;AAAA,iBAAMV,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBQ,EAArB,CAAjB;AAAA;AAAxB,SACE,mBAAMT,KAAN,CADF,EAEE,MAAC,SAAD;AAAW,QAAA,IAAI,EAAEU;AAAjB,QAFF,CADF,CADa;AAAA,KAAf,CADK,GAUL,MAAC,MAAD,mEAVF;AAYD,GAbD;;AAcA,SAAO,MAAC,iBAAD,OAAP;AACD,CArCD;;GAAMhB,U;UACaJ,c,EACID,W,EAIjBL,Q;;;MANAU,U;AAuCN,qBAAeZ,IAAI,CAACY,UAAD,CAAnB","sourcesContent":["import React, { useCallback, FC, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport { Carousel } from \"react-bootstrap\";\nimport { noticesQuery } from \"../../graphql/notice/query\";\nimport CarouselContainer from \"../common/Carousel\";\nimport Timestamp from \"../common/Timestamp\";\nimport { Notice } from \"../../interfaces\";\nimport { useVssState, useVssDispatch, SHOW_NOTICE_MODAL } from \"../../context\";\n\nconst NoticeWrapper = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-right: 15%;\n  margin-left: 15%;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst NoticeList: FC = () => {\n  const dispatch = useVssDispatch();\n  const { isMaster } = useVssState();\n\n  const {\n    data: { getNotices }\n  } = useQuery(noticesQuery);\n\n  const handleClick = useCallback(\n    (title, description, noticeId) => {\n      dispatch({\n        type: SHOW_NOTICE_MODAL,\n        action: isMaster ? \"modifiable\" : \"readonly\",\n        actionText: \"\",\n        title,\n        description,\n        noticeId\n      });\n    },\n    [isMaster]\n  );\n\n  const mapToNotices = () => {\n    return getNotices.length > 0 ? (\n      getNotices.map(({ id, title, description, updatedAt }) => (\n        <Carousel.Item key={id}>\n          <NoticeWrapper onClick={() => handleClick(title, description, id)}>\n            <div>{title}</div>\n            <Timestamp text={updatedAt} />\n          </NoticeWrapper>\n        </Carousel.Item>\n      ))\n    ) : (\n      <NoData>공지사항이 없습니다.</NoData>\n    );\n  };\n  return <CarouselContainer>{}</CarouselContainer>;\n};\n\nexport default memo(NoticeList);\n"]},"metadata":{},"sourceType":"module"}