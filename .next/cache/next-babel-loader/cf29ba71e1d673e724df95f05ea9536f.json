{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Loader from \"../common/Loader\";\nconst TextArea = styled.textarea.withConfig({\n  displayName: \"SetNoticePresenter__TextArea\",\n  componentId: \"ln0rkt-0\"\n})([\"\", \";width:100%;height:300px;resize:none;font-size:12px;overflow:auto;background:\", \";padding:15px;&:focus{outline:none;}\"], props => props.theme.whiteBox, props => props.theme.bgColor);\nconst ReadOnlyDescription = styled.div.withConfig({\n  displayName: \"SetNoticePresenter__ReadOnlyDescription\",\n  componentId: \"ln0rkt-1\"\n})([\"\", \";position:absolute;top:0;left:0;width:100%;height:300px;overflow:auto;background:white;padding:15px;\"], props => props.theme.whiteBox);\nconst PreviewWrap = styled(ReadOnlyDescription).withConfig({\n  displayName: \"SetNoticePresenter__PreviewWrap\",\n  componentId: \"ln0rkt-2\"\n})([\"z-index:10;& > span{position:absolute;top:5px;right:5px;cursor:pointer;}\"]);\n\nconst SetNoticePresenter = ({\n  loading,\n  action,\n  isMaster,\n  title,\n  description,\n  mdDescription,\n  preview,\n  onShowEdit,\n  onPreview,\n  onRefreshPreview,\n  onClose,\n  onDelete,\n  onSubmit\n}) => __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n  onHide: onClose,\n  animation: true,\n  show: true\n}, __jsx(Modal.Header, {\n  closeButton: true\n}, __jsx(Modal.Title, null, action.code === \"readonly\" || action.code === \"modifiable\" ? title.value : `공지사항 ${action.modalTitle}`)), __jsx(Modal.Body, null, __jsx(InputWrapper, null, (action.code === \"add\" || action.code === \"modify\") && __jsx(Fragment, null, __jsx(Label, {\n  htmlFor: \"title\",\n  val: title.value\n}, \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"), __jsx(Input, _extends({\n  placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n  name: \"title\"\n}, title)))), __jsx(InputWrapper, null, __jsx(Label, {\n  htmlFor: \"description\",\n  val: description.value\n}, \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"), __jsx(TextArea, _extends({\n  placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n  name: \"description\"\n}, description)), (action.code === \"readonly\" || action.code === \"modifiable\") && __jsx(ReadOnlyDescription, {\n  dangerouslySetInnerHTML: {\n    __html: mdDescription\n  },\n  className: \"markdown-body\"\n}), preview && __jsx(PreviewWrap, null, __jsx(\"div\", {\n  dangerouslySetInnerHTML: {\n    __html: preview\n  },\n  className: \"markdown-body\"\n}), __jsx(\"span\", {\n  \"aria-hidden\": \"true\",\n  onClick: onRefreshPreview\n}, \"\\xD7\")))), __jsx(Modal.Footer, null, (action.code === \"readonly\" || action.code === \"modifiable\") && __jsx(Fragment, null, isMaster && __jsx(Button, {\n  variant: \"danger\",\n  onClick: onDelete\n}, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n  variant: \"info\",\n  onClick: isMaster ? onShowEdit : onClose\n}, isMaster ? \"수정\" : \"확인\")), (action.code === \"modify\" || action.code === \"add\") && __jsx(Fragment, null, __jsx(Button, {\n  variant: \"info\",\n  onClick: preview ? onRefreshPreview : onPreview\n}, preview ? \"미리보기 취소\" : \"미리보기\"), __jsx(Button, {\n  variant: \"primary\",\n  onClick: onSubmit\n}, action.code === \"add\" ? \"등록\" : \"수정\")))));\n\nexport default SetNoticePresenter;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SetNoticePresenter.tsx"],"names":["React","Fragment","styled","Modal","Button","Input","InputWrapper","Label","Loader","TextArea","textarea","props","theme","whiteBox","bgColor","ReadOnlyDescription","div","PreviewWrap","SetNoticePresenter","loading","action","isMaster","title","description","mdDescription","preview","onShowEdit","onPreview","onRefreshPreview","onClose","onDelete","onSubmit","code","value","modalTitle","__html"],"mappings":"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","sourcesContent":["import React, { Fragment, FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport { UseInputProps } from \"../../hooks\";\nimport Loader from \"../common/Loader\";\n\nconst TextArea = styled.textarea`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  height: 300px;\n  resize: none;\n  font-size: 12px;\n  overflow: auto;\n  background: ${props => props.theme.bgColor};\n  padding: 15px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ReadOnlyDescription = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 300px;\n  overflow: auto;\n  background: white;\n  padding: 15px;\n`;\n\nconst PreviewWrap = styled(ReadOnlyDescription)`\n  z-index: 10;\n\n  & > span {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    cursor: pointer;\n  }\n`;\n\ntype Props = {\n  loading: boolean;\n  action: any;\n  isMaster: boolean;\n  title: UseInputProps;\n  description: UseInputProps;\n  mdDescription: string;\n  preview: string;\n  onShowEdit: any;\n  onPreview: any;\n  onRefreshPreview: any;\n  onClose: any;\n  onDelete: any;\n  onSubmit: any;\n};\n\nconst SetNoticePresenter: FC<Props> = ({\n  loading,\n  action,\n  isMaster,\n  title,\n  description,\n  mdDescription,\n  preview,\n  onShowEdit,\n  onPreview,\n  onRefreshPreview,\n  onClose,\n  onDelete,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={true} show>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {action.code === \"readonly\" || action.code === \"modifiable\"\n            ? title.value\n            : `공지사항 ${action.modalTitle}`}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputWrapper>\n          {(action.code === \"add\" || action.code === \"modify\") && (\n            <Fragment>\n              <Label htmlFor=\"title\" val={title.value}>\n                제목을 입력하세요.\n              </Label>\n              <Input placeholder=\"제목을 입력하세요.\" name=\"title\" {...title} />\n            </Fragment>\n          )}\n        </InputWrapper>\n        <InputWrapper>\n          <Label htmlFor=\"description\" val={description.value}>\n            내용을 입력하세요.\n          </Label>\n          <TextArea\n            placeholder=\"내용을 입력하세요.\"\n            name=\"description\"\n            {...description}\n          />\n          {(action.code === \"readonly\" || action.code === \"modifiable\") && (\n            <ReadOnlyDescription\n              dangerouslySetInnerHTML={{ __html: mdDescription }}\n              className=\"markdown-body\"\n            ></ReadOnlyDescription>\n          )}\n          {preview && (\n            <PreviewWrap>\n              <div\n                dangerouslySetInnerHTML={{ __html: preview }}\n                className=\"markdown-body\"\n              ></div>\n              <span aria-hidden=\"true\" onClick={onRefreshPreview}>\n                ×\n              </span>\n            </PreviewWrap>\n          )}\n        </InputWrapper>\n      </Modal.Body>\n      <Modal.Footer>\n        {(action.code === \"readonly\" || action.code === \"modifiable\") && (\n          <Fragment>\n            {isMaster && (\n              <Button variant=\"danger\" onClick={onDelete}>\n                삭제\n              </Button>\n            )}\n            <Button variant=\"info\" onClick={isMaster ? onShowEdit : onClose}>\n              {isMaster ? \"수정\" : \"확인\"}\n            </Button>\n          </Fragment>\n        )}\n        {(action.code === \"modify\" || action.code === \"add\") && (\n          <Fragment>\n            <Button\n              variant=\"info\"\n              onClick={preview ? onRefreshPreview : onPreview}\n            >\n              {preview ? \"미리보기 취소\" : \"미리보기\"}\n            </Button>\n            <Button variant=\"primary\" onClick={onSubmit}>\n              {action.code === \"add\" ? \"등록\" : \"수정\"}\n            </Button>\n          </Fragment>\n        )}\n      </Modal.Footer>\n    </Modal>\n  </Fragment>\n);\n\nexport default SetNoticePresenter;\n"]},"metadata":{},"sourceType":"module"}