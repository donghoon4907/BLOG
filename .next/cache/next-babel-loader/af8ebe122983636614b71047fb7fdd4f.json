{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { usersQuery } from \"../../graphql/user/query\";\nimport SearchUserPresenter from \"./SearchUserPresenter\";\n\nvar SearchUserContainer = function SearchUserContainer() {\n  _s();\n\n  var router = useRouter();\n  var keyword = decodeURIComponent(router.query.keyword);\n\n  var _useQuery = useQuery(usersQuery, {\n    variables: {\n      keyword: keyword,\n      first: 10\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (!data && loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(SearchUserPresenter, {\n    users: users.getUsers,\n    keyword: keyword\n  });\n};\n\n_s(SearchUserContainer, \"PBeJwjCc+kC7QHgKa3AwhbZ7QBk=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SearchUserContainer;\nexport default SearchUserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUserContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchUserContainer.tsx"],"names":["useRouter","React","Fragment","useQuery","usersQuery","SearchUserPresenter","SearchUserContainer","router","keyword","decodeURIComponent","query","variables","first","data","loading","users","getUsers"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,IAAMC,mBAAuB,GAAG,SAA1BA,mBAA0B,GAAM;AAAA;;AACpC,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,OAAO,GAAGC,kBAAkB,CAACF,MAAM,CAACG,KAAP,CAAaF,OAAd,CAAlC;;AAFoC,kBAIVL,QAAQ,CAACC,UAAD,EAAa;AAC7CO,IAAAA,SAAS,EAAE;AACTH,MAAAA,OAAO,EAAPA,OADS;AAETI,MAAAA,KAAK,EAAE;AAFE;AADkC,GAAb,CAJE;AAAA,MAI5BC,IAJ4B,aAI5BA,IAJ4B;AAAA,MAItBC,OAJsB,aAItBA,OAJsB;;AAWpC,MAAI,CAACD,IAAD,IAASC,OAAb,EAAsB;AACpB,WAAO,MAAC,QAAD,OAAP;AACD;;AAED,SAAO,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEC,KAAK,CAACC,QAAlC;AAA4C,IAAA,OAAO,EAAER;AAArD,IAAP;AACD,CAhBD;;GAAMF,mB;UACWN,S,EAGWG,Q;;;KAJtBG,mB;AAkBN,eAAeA,mBAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { FC, Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { usersQuery } from \"../../graphql/user/query\";\nimport SearchUserPresenter from \"./SearchUserPresenter\";\n\nconst SearchUserContainer: FC = () => {\n  const router = useRouter();\n  const keyword = decodeURIComponent(router.query.keyword as string);\n\n  const { data, loading } = useQuery(usersQuery, {\n    variables: {\n      keyword,\n      first: 10\n    }\n  });\n\n  if (!data && loading) {\n    return <Fragment />;\n  }\n\n  return <SearchUserPresenter users={users.getUsers} keyword={keyword} />;\n};\n\nexport default SearchUserContainer;\n"]},"metadata":{},"sourceType":"module"}