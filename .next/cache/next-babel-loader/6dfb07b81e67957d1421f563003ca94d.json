{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\n\nconst Index = () => {\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\nexport const getStaticProps = async props => {\n  console.log(props);\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}; // export async function getStaticProps() {\n//   const apolloClient = initializeApollo();\n//   await apolloClient.query({\n//     query: feedQuery,\n//     variables: {\n//       first: 10\n//     }\n//   });\n//   await apolloClient.query({\n//     query: noticesQuery,\n//     variables: {\n//       first: 10\n//     }\n//   });\n//   return {\n//     props: {\n//       initialApolloState: apolloClient.cache.extract()\n//     },\n//     revalidate: 1\n//   };\n// }\n\nexport default Index;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/index.tsx"],"names":["React","useEffect","Layout","Feed","isAuthenticated","initializeApollo","feedQuery","Index","getStaticProps","props","console","log","apolloClient","query","variables","first","initialApolloState","cache","extract","revalidate"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAGA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,MAAMC,KAAS,GAAG,MAAM;AACtBN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF;AAKD,CAVD;;AAYA,OAAO,MAAMI,cAA8B,GAAG,MAAMC,KAAN,IAAe;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,YAAY,GAAGP,gBAAgB,EAArC;AACA,QAAMO,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEP,SADgB;AAEvBQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAFY,GAAnB,CAAN;AAOA,SAAO;AACLN,IAAAA,KAAK,EAAE;AACLO,MAAAA,kBAAkB,EAAEJ,YAAY,CAACK,KAAb,CAAmBC,OAAnB;AADf,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAhBM,C,CAkBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeZ,KAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport isAuthenticated from \"../lib/isAuthenticated\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { postsQuery } from \"../graphql/post/query\";\nimport { noticesQuery } from \"../graphql/notice/query\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\n\nconst Index: FC = () => {\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async props => {\n  console.log(props);\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\n// export async function getStaticProps() {\n//   const apolloClient = initializeApollo();\n\n//   await apolloClient.query({\n//     query: feedQuery,\n//     variables: {\n//       first: 10\n//     }\n//   });\n\n//   await apolloClient.query({\n//     query: noticesQuery,\n//     variables: {\n//       first: 10\n//     }\n//   });\n\n//   return {\n//     props: {\n//       initialApolloState: apolloClient.cache.extract()\n//     },\n//     revalidate: 1\n//   };\n// }\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}