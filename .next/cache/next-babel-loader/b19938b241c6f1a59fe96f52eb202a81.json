{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport { postsQuery } from \"../graphql/post/query\"; // import SearchPost from \"../components/search/SearchPostContainer\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(postsQuery, {\n    variables: {\n      first: 10,\n      keyword: query.keyword\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"test\"));\n};\n\n_s(Search, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Search;\nexport var __N_SSP = true;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useQuery","Layout","postsQuery","Search","query","variables","first","keyword","notifyOnNetworkStatusChange","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CACA;;AAEA,IAAMC,MAAqB,GAAG,SAAxBA,MAAwB,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAC1BJ,QAAQ,CAACE,UAAD,EAAa;AACpCG,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAEH,KAAK,CAACG;AAFN,KADyB;AAKpCC,IAAAA,2BAA2B,EAAE;AALO,GAAb,CADkB;AAAA,MACnCC,IADmC,aACnCA,IADmC;;AAQ3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE,MAAC,MAAD,QACE,yBADF,CADF;AAKD,CAdD;;GAAMN,M;UACaH,Q;;;KADbG,M;;AAqCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport Layout from \"../components/common/Layout\";\nimport { postsQuery } from \"../graphql/post/query\";\n// import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search: NextPage<any> = ({ query }) => {\n  const { data } = useQuery(postsQuery, {\n    variables: {\n      first: 10,\n      keyword: query.keyword\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  console.log(data);\n  return (\n    <Layout>\n      <h1>test</h1>\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async ({ query }) => {\n  const { keyword } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n      query: {\n        keyword\n      }\n    }\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}