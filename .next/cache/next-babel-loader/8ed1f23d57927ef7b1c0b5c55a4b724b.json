{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/common/Layout\"; // import SearchPost from \"../components/search/SearchPostContainer\";\n\nvar Search = function Search() {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"test\"));\n};\n\n_c = Search;\nexport var __N_SSG = true;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search/[keyword].tsx"],"names":["React","Layout","Search"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAIA,OAAOC,MAAP,MAAmB,gCAAnB,C,CACA;;AAEA,IAAMC,MAAU,GAAG,SAAbA,MAAa,GAAM;AACvB,SACE,MAAC,MAAD,QACE,yBADF,CADF;AAKD,CAND;;KAAMA,M;;AAyCN,eAAeA,MAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { initializeApollo } from \"../../lib/apollo\";\nimport { searchQuery } from \"../../graphql/page/query/search\";\nimport Layout from \"../../components/common/Layout\";\n// import SearchPost from \"../components/search/SearchPostContainer\";\n\nconst Search: FC = () => {\n  return (\n    <Layout>\n      <h1>test</h1>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch(\"https://.../posts\");\n  const posts = await res.json();\n\n  // Get the paths we want to pre-render based on posts\n  const paths = posts.map(post => ({\n    params: { id: post.id }\n  }));\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\nexport const getStaticProps: GetStaticProps = async context => {\n  //   const apolloClient = initializeApollo();\n  //   await apolloClient.query({\n  //     query: searchQuery,\n  //     variables: {\n  //       first: 10\n  //     }\n  //   });\n  console.log(context);\n\n  return {\n    props: {\n      //   initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}