{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport { followMutation, unfollowMutation } from \"../../graphql/user/mutation/follow\";\nimport { getAccessToken } from \"../../lib/token\";\nimport { useVssDispatch, SHOW_LOGIN_MODAL } from \"../../context\";\n\nconst FollowButton = ({\n  isFollowing,\n  userId\n}) => {\n  const dispatch = useVssDispatch();\n  const {\n    0: ctrlIsFolling,\n    1: setCtrlIsFolling\n  } = useState(isFollowing);\n  const [follow, {\n    loading: followLoading\n  }] = useMutation(followMutation);\n  const [unfollow, {\n    loading: unfollowLoading\n  }] = useMutation(unfollowMutation);\n  const handleFollow = useCallback(async () => {\n    const token = getAccessToken();\n\n    if (token) {\n      if (ctrlIsFolling) {\n        if (unfollowLoading) return;\n        const {\n          data\n        } = await unfollow({\n          variables: {\n            userId\n          }\n        });\n\n        if (data.unfollow) {\n          setCtrlIsFolling(false);\n          alert(\"언팔로우 되었습니다.\");\n        }\n      } else {\n        if (followLoading) return;\n        const {\n          data\n        } = await follow({\n          variables: {\n            userId\n          }\n        });\n\n        if (data.follow) {\n          setCtrlIsFolling(true);\n          alert(\"팔로우 되었습니다.\");\n        }\n      }\n    } else {\n      dispatch({\n        type: SHOW_LOGIN_MODAL\n      });\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n  useEffect(() => {\n    setCtrlIsFolling(isFollowing);\n  }, [isFollowing]);\n  return __jsx(Button, {\n    text: ctrlIsFolling ? \"언팔로우\" : \"팔로우\",\n    onClick: handleFollow\n  });\n};\n\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}