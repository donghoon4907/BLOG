{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport { addPostMutation } from \"../../graphql/post/mutation/add\";\nimport { updatePostMutation } from \"../../graphql/post/mutation/update\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useVssState, useVssDispatch, HIDE_POST_MODAL } from \"../../context\";\n\nvar SetPostContainer = function SetPostContainer() {\n  _s();\n\n  var _useVssState = useVssState(),\n      activePost = _useVssState.activePost;\n\n  var dispatch = useVssDispatch();\n\n  var _useState = useState(\"영상 업로드\"),\n      header = _useState[0],\n      setHeader = _useState[1];\n\n  var fileEl = useRef(null);\n\n  var _useState2 = useState(\"\"),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var _useState4 = useState(\"PUBLIC\"),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(0),\n      progress = _useState5[0],\n      setProgress = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  var _useMutation = useMutation(addPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      add = _useMutation2[0],\n      addPostLoading = _useMutation2[1].loading;\n\n  var _useMutation3 = useMutation(updatePostMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      update = _useMutation4[0],\n      updatePostLoading = _useMutation4[1].loading;\n\n  var _useMutation5 = useMutation(removePostMutation),\n      _useMutation6 = _slicedToArray(_useMutation5, 2),\n      remove = _useMutation6[0],\n      removePostLoading = _useMutation6[1].loading;\n\n  var handleClickFile = useCallback(function () {\n    var node = fileEl.current;\n\n    if (node) {\n      node.click();\n    }\n  }, []);\n  var handleChangeFile = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var files, formData, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (e.target.value) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              // cancel select file\n              files = e.target.files;\n              formData = new FormData();\n              formData.append(\"file\", files[0]);\n              _context.next = 7;\n              return axios.post(\"\".concat(process.env.BACKEND_API_PATH, \"/api/upload\"), formData, {\n                onUploadProgress: function onUploadProgress(_ref2) {\n                  var lengthComputable = _ref2.lengthComputable,\n                      loaded = _ref2.loaded,\n                      total = _ref2.total;\n\n                  if (lengthComputable) {\n                    setProgress(Math.floor(loaded / total * 100));\n                  }\n                }\n              });\n\n            case 7:\n              response = _context.sent;\n\n              if (response.data) {\n                setFile(response.data);\n                setHeader(\"등록\");\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var handleDelete = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var tf, _yield$remove, deletePost;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!removePostLoading) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n          case 2:\n            tf = confirm(\"포스트를 삭제하시겠어요?\");\n\n            if (!tf) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 6;\n            return remove({\n              variables: {\n                postId: activePost.id\n              }\n            });\n\n          case 6:\n            _yield$remove = _context2.sent;\n            deletePost = _yield$remove.data.deletePost;\n\n            if (deletePost) {\n              alert(\"포스트가 삭제되었습니다.\");\n              window.location.reload();\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [activePost, removePostLoading]);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var tf, _yield$add, addPost, _yield$update, updatePost, _JSON$parse, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(addPostLoading || updatePostLoading)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n            case 3:\n              tf = confirm(\"\\uC785\\uB825\\uD55C \\uB0B4\\uC6A9\\uC73C\\uB85C \".concat(header, \"\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\"));\n\n              if (!tf) {\n                _context3.next = 29;\n                break;\n              }\n\n              _context3.prev = 5;\n\n              if (!(header === \"등록\")) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 9;\n              return add({\n                variables: {\n                  title: title,\n                  description: description,\n                  status: status,\n                  file: file\n                }\n              });\n\n            case 9:\n              _yield$add = _context3.sent;\n              addPost = _yield$add.data.addPost;\n\n              if (addPost) {\n                alert(\"포스트가 등록되었습니다.\");\n                location.reload();\n              }\n\n              _context3.next = 23;\n              break;\n\n            case 14:\n              if (!(header === \"수정\")) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 17;\n              return update({\n                variables: {\n                  postId: activePost.id,\n                  title: title,\n                  description: description,\n                  status: status,\n                  file: file\n                }\n              });\n\n            case 17:\n              _yield$update = _context3.sent;\n              updatePost = _yield$update.data.updatePost;\n\n              if (updatePost) {\n                alert(\"포스트가 수정되었습니다.\");\n                location.reload();\n              }\n\n              _context3.next = 23;\n              break;\n\n            case 22:\n              throw new Error(\"check current header\");\n\n            case 23:\n              _context3.next = 29;\n              break;\n\n            case 25:\n              _context3.prev = 25;\n              _context3.t0 = _context3[\"catch\"](5);\n              _JSON$parse = JSON.parse(_context3.t0.message), message = _JSON$parse.message;\n              alert(message);\n\n            case 29:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 25]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [title, description, status, file, addPostLoading, activePost, updatePostLoading]);\n  var handleClose = useCallback(function () {\n    dispatch({\n      type: HIDE_POST_MODAL,\n      payload: false\n    });\n  }, []);\n  useEffect(function () {\n    if (activePost.title) {\n      setTitle(activePost.title);\n    }\n\n    if (activePost.description) {\n      setDescription(activePost.description);\n    }\n\n    if (activePost.status) {\n      setStatus(activePost.status);\n    }\n\n    if (activePost.id) {\n      setProgress(100);\n      setHeader(\"수정\");\n    }\n\n    if (activePost.url) {\n      setFile(activePost.url);\n    }\n  }, [activePost]);\n  return __jsx(SetPostPresenter, {\n    loading: setPostLoading,\n    header: header,\n    title: title,\n    description: description,\n    status: status,\n    progress: progress,\n    file: file,\n    fileEl: fileEl,\n    onClickFile: handleClickFile,\n    onChangeFile: handleChangeFile,\n    onClose: handleClose,\n    onDelete: handleDelete,\n    onSubmit: handleSubmit\n  });\n};\n\n_s(SetPostContainer, \"JuHbe/QmckhW5HPsiwPuVYL+ua0=\", false, function () {\n  return [useVssState, useVssDispatch, useMutation, useMutation, useMutation];\n});\n\n_c = SetPostContainer;\nexport default SetPostContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetPostContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SetPostContainer.tsx"],"names":["React","useCallback","useState","useRef","useEffect","useMutation","axios","addPostMutation","updatePostMutation","removePostMutation","SetPostPresenter","useVssState","useVssDispatch","HIDE_POST_MODAL","SetPostContainer","activePost","dispatch","header","setHeader","fileEl","title","setTitle","description","setDescription","status","setStatus","progress","setProgress","file","setFile","add","addPostLoading","loading","update","updatePostLoading","remove","removePostLoading","handleClickFile","node","current","click","handleChangeFile","e","target","value","files","formData","FormData","append","post","process","env","BACKEND_API_PATH","onUploadProgress","lengthComputable","loaded","total","Math","floor","response","data","handleDelete","alert","tf","confirm","variables","postId","id","deletePost","window","location","reload","handleSubmit","preventDefault","addPost","updatePost","Error","JSON","parse","message","handleClose","type","payload","url","setPostLoading"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  FC,\n  useRef,\n  FormEvent,\n  useEffect\n} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport { addPostMutation } from \"../../graphql/post/mutation/add\";\nimport { updatePostMutation } from \"../../graphql/post/mutation/update\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useVssState, useVssDispatch, HIDE_POST_MODAL } from \"../../context\";\n\nconst SetPostContainer: FC = () => {\n  const { activePost } = useVssState();\n  const dispatch = useVssDispatch();\n\n  const [header, setHeader] = useState(\"영상 업로드\");\n\n  const fileEl = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [status, setStatus] = useState<string>(\"PUBLIC\");\n  const [progress, setProgress] = useState<number>(0);\n  const [file, setFile] = useState<string>(\"\");\n\n  const [add, { loading: addPostLoading }] = useMutation(addPostMutation);\n\n  const [update, { loading: updatePostLoading }] = useMutation(\n    updatePostMutation\n  );\n\n  const [remove, { loading: removePostLoading }] = useMutation(\n    removePostMutation\n  );\n\n  const handleClickFile = useCallback(() => {\n    const node = fileEl.current;\n    if (node) {\n      node.click();\n    }\n  }, []);\n\n  const handleChangeFile = useCallback(async e => {\n    if (!e.target.value) return; // cancel select file\n\n    const { files } = e.target;\n\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n\n    const response = await axios.post(\n      `${process.env.BACKEND_API_PATH}/api/upload`,\n      formData,\n      {\n        onUploadProgress: ({ lengthComputable, loaded, total }) => {\n          if (lengthComputable) {\n            setProgress(Math.floor((loaded / total) * 100));\n          }\n        }\n      }\n    );\n    if (response.data) {\n      setFile(response.data);\n      setHeader(\"등록\");\n    }\n  }, []);\n\n  const handleDelete = useCallback(async () => {\n    if (removePostLoading) {\n      return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n    }\n\n    const tf = confirm(\"포스트를 삭제하시겠어요?\");\n\n    if (tf) {\n      const {\n        data: { deletePost }\n      } = await remove({\n        variables: {\n          postId: activePost.id\n        }\n      });\n      if (deletePost) {\n        alert(\"포스트가 삭제되었습니다.\");\n        window.location.reload();\n      }\n    }\n  }, [activePost, removePostLoading]);\n\n  const handleSubmit = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (addPostLoading || updatePostLoading) {\n        return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n      }\n\n      const tf = confirm(`입력한 내용으로 ${header}하시겠어요?`);\n\n      if (tf) {\n        try {\n          if (header === \"등록\") {\n            const {\n              data: { addPost }\n            } = await add({\n              variables: {\n                title,\n                description,\n                status,\n                file\n              }\n            });\n            if (addPost) {\n              alert(\"포스트가 등록되었습니다.\");\n              location.reload();\n            }\n          } else if (header === \"수정\") {\n            const {\n              data: { updatePost }\n            } = await update({\n              variables: {\n                postId: activePost.id,\n                title,\n                description,\n                status,\n                file\n              }\n            });\n            if (updatePost) {\n              alert(\"포스트가 수정되었습니다.\");\n              location.reload();\n            }\n          } else {\n            throw new Error(\"check current header\");\n          }\n        } catch (error) {\n          const { message } = JSON.parse(error.message);\n          alert(message);\n        }\n      }\n    },\n    [\n      title,\n      description,\n      status,\n      file,\n      addPostLoading,\n      activePost,\n      updatePostLoading\n    ]\n  );\n\n  const handleClose = useCallback(() => {\n    dispatch({\n      type: HIDE_POST_MODAL,\n      payload: false\n    });\n  }, []);\n\n  useEffect(() => {\n    if (activePost.title) {\n      setTitle(activePost.title);\n    }\n    if (activePost.description) {\n      setDescription(activePost.description);\n    }\n    if (activePost.status) {\n      setStatus(activePost.status);\n    }\n    if (activePost.id) {\n      setProgress(100);\n      setHeader(\"수정\");\n    }\n    if (activePost.url) {\n      setFile(activePost.url);\n    }\n  }, [activePost]);\n\n  return (\n    <SetPostPresenter\n      loading={setPostLoading}\n      header={header}\n      title={title}\n      description={description}\n      status={status}\n      progress={progress}\n      file={file}\n      fileEl={fileEl}\n      onClickFile={handleClickFile}\n      onChangeFile={handleChangeFile}\n      onClose={handleClose}\n      onDelete={handleDelete}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default SetPostContainer;\n"]},"metadata":{},"sourceType":"module"}