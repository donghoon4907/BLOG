{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Input from \"../common/Input\";\nimport { InputWrapper, Label, TextArea } from \"../common/Form\";\nimport Loader from \"../common/Loader\";\nvar ReadOnlyDescription = styled.div.withConfig({\n  displayName: \"SetNoticePresenter__ReadOnlyDescription\",\n  componentId: \"ln0rkt-0\"\n})([\"\", \";position:absolute;top:0;left:0;width:100%;height:300px;overflow:auto;background:white;padding:15px;\"], function (props) {\n  return props.theme.whiteBox;\n});\nvar PreviewWrap = styled(ReadOnlyDescription).withConfig({\n  displayName: \"SetNoticePresenter__PreviewWrap\",\n  componentId: \"ln0rkt-1\"\n})([\"z-index:10;& > span{position:absolute;top:5px;right:5px;cursor:pointer;}\"]);\n\nvar SetNoticePresenter = function SetNoticePresenter(_ref) {\n  var loading = _ref.loading,\n      setNoticeLoading = _ref.setNoticeLoading,\n      removeNoticeLoading = _ref.removeNoticeLoading,\n      action = _ref.action,\n      isMaster = _ref.isMaster,\n      title = _ref.title,\n      description = _ref.description,\n      mdDescription = _ref.mdDescription,\n      preview = _ref.preview,\n      onShowEdit = _ref.onShowEdit,\n      onPreview = _ref.onPreview,\n      onRefreshPreview = _ref.onRefreshPreview,\n      onClose = _ref.onClose,\n      onDelete = _ref.onDelete,\n      onSubmit = _ref.onSubmit;\n  return __jsx(Fragment, null, (loading || setNoticeLoading || removeNoticeLoading) && __jsx(Loader, null), __jsx(Modal, {\n    onHide: onClose,\n    show: true,\n    animation: false\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, action.code === \"readonly\" || action.code === \"modifiable\" ? title.value : \"\\uACF5\\uC9C0\\uC0AC\\uD56D \".concat(action.modalTitle))), __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(Modal.Body, null, __jsx(InputWrapper, null, (action.code === \"add\" || action.code === \"modify\") && __jsx(Fragment, null, __jsx(Label, {\n    htmlFor: \"title\",\n    val: title.value\n  }, \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"), __jsx(Input, _extends({\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    name: \"title\",\n    required: true,\n    autoComplete: \"off\"\n  }, title)))), __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"description\",\n    val: description.value\n  }, \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"), __jsx(TextArea, _extends({\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    name: \"description\",\n    required: true,\n    autoComplete: \"off\"\n  }, description)), (action.code === \"readonly\" || action.code === \"modifiable\") && __jsx(ReadOnlyDescription, {\n    dangerouslySetInnerHTML: {\n      __html: mdDescription\n    },\n    className: \"markdown-body\"\n  }), preview && __jsx(PreviewWrap, null, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: preview\n    },\n    className: \"markdown-body\"\n  }), __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    onClick: onRefreshPreview\n  }, \"\\xD7\")))), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: onClose\n  }, \"\\uCDE8\\uC18C\"), (action.code === \"readonly\" || action.code === \"modifiable\") && __jsx(Fragment, null, isMaster && __jsx(Button, {\n    variant: \"danger\",\n    onClick: onDelete\n  }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: isMaster ? onShowEdit : onClose\n  }, isMaster ? \"수정\" : \"확인\")), (action.code === \"modify\" || action.code === \"add\") && __jsx(Fragment, null, __jsx(Button, {\n    variant: \"info\",\n    onClick: preview ? onRefreshPreview : onPreview\n  }, preview ? \"미리보기 취소\" : \"미리보기\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\"\n  }, action.code === \"add\" ? \"등록\" : \"수정\"))))));\n};\n\nexport default SetNoticePresenter;","map":null,"metadata":{},"sourceType":"module"}