{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\nvar Container = styled.div.withConfig({\n  displayName: \"HoverUser__Container\",\n  componentId: \"v2im11-0\"\n})([\"\", \";position:absolute;display:flex;flex-direction:column;overflow:hidden;top:35px;left:0;width:240px;height:300px;z-index:100;\"], function (props) {\n  return props.theme.whiteBox;\n});\n_c = Container;\nvar Background = styled.img.withConfig({\n  displayName: \"HoverUser__Background\",\n  componentId: \"v2im11-1\"\n})([\"width:100%;height:150px;\"]);\n_c2 = Background;\n\nvar HoverUser = function HoverUser(_ref) {\n  _s();\n\n  var userId = _ref.userId;\n\n  var _useQuery = useQuery(userQuery, {\n    variables: {\n      userId: userId\n    },\n    fetchPolicy: \"network-only\"\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Container, null, __jsx(Background, {\n    src: data.getUser.avatar.url\n  }));\n};\n\n_s(HoverUser, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c3 = HoverUser;\nexport default HoverUser;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"HoverUser\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/user/HoverUser.tsx"],"names":["React","Fragment","styled","useQuery","userQuery","Container","div","props","theme","whiteBox","Background","img","HoverUser","userId","variables","fetchPolicy","data","loading","getUser","avatar","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,IAAMC,SAAS,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,wIACX,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CADM,CAAf;KAAMJ,S;AAaN,IAAMK,UAAU,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,gCAAhB;MAAMD,U;;AASN,IAAME,SAAoB,GAAG,SAAvBA,SAAuB,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACjBV,QAAQ,CAACC,SAAD,EAAY;AAC5CU,IAAAA,SAAS,EAAE;AACTD,MAAAA,MAAM,EAANA;AADS,KADiC;AAI5CE,IAAAA,WAAW,EAAE;AAJ+B,GAAZ,CADS;AAAA,MACnCC,IADmC,aACnCA,IADmC;AAAA,MAC7BC,OAD6B,aAC7BA,OAD6B;;AAO3C,MAAIA,OAAJ,EAAa;AACX,WAAO,MAAC,QAAD,OAAP;AACD;;AACD,SACE,MAAC,SAAD,QACE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAED,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoBC;AAArC,IADF,CADF;AAKD,CAfD;;GAAMR,S;UACsBT,Q;;;MADtBS,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React, { FC, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\n\nconst Container = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  top: 35px;\n  left: 0;\n  width: 240px;\n  height: 300px;\n  z-index: 100;\n`;\n\nconst Background = styled.img`\n  width: 100%;\n  height: 150px;\n`;\n\ninterface Props {\n  userId: string;\n}\n\nconst HoverUser: FC<Props> = ({ userId }) => {\n  const { data, loading } = useQuery(userQuery, {\n    variables: {\n      userId\n    },\n    fetchPolicy: \"network-only\"\n  });\n  if (loading) {\n    return <Fragment />;\n  }\n  return (\n    <Container>\n      <Background src={data.getUser.avatar.url} />\n    </Container>\n  );\n};\n\nexport default HoverUser;\n"]},"metadata":{},"sourceType":"module"}