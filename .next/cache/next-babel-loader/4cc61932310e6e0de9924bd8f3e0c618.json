{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { StateChanger } from \"../common/Form\";\nconst Link = styled.span`\n  color: ${props => props.theme.blueColor};\n  cursor: pointer;\n`;\n\nconst SignInPresenter = ({\n  loading,\n  email,\n  pwd,\n  onClose,\n  onSubmit\n}) => __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n  onHide: onClose,\n  animation: false,\n  show: true\n}, __jsx(Modal.Header, {\n  closeButton: true\n}, __jsx(Modal.Title, null, \"\\uB85C\\uADF8\\uC778\")), __jsx(Modal.Body, null, __jsx(\"form\", {\n  onSubmit: onSubmit\n}, __jsx(InputWrapper, null, __jsx(Label, {\n  htmlFor: \"email\",\n  val: email.value\n}, \"\\uC774\\uBA54\\uC77C\"), __jsx(Input, _extends({\n  type: \"email\",\n  placeholder: \"\\uC774\\uBA54\\uC77C\",\n  name: \"email\",\n  autoComplete: \"off\",\n  required: true\n}, email))), __jsx(InputWrapper, null, __jsx(Label, {\n  htmlFor: \"password\",\n  val: pwd.value\n}, \"\\uC554\\uD638\"), __jsx(Input, _extends({\n  type: \"password\",\n  placeholder: \"\\uC554\\uD638\",\n  name: \"password\",\n  required: true\n}, pwd))), __jsx(Button, {\n  text: \"\\uB85C\\uADF8\\uC778\"\n})), __jsx(StateChanger, null, __jsx(\"div\", null, \"\\uACC4\\uC815\\uC774 \\uC5C6\\uB2E4\\uBA74\\xA0\", __jsx(Link, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))));\n\nexport default SignInPresenter;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SignInPresenter.tsx"],"names":["React","Fragment","styled","Modal","InputWrapper","Label","Input","Button","Loader","StateChanger","Link","span","props","theme","blueColor","SignInPresenter","loading","email","pwd","onClose","onSubmit","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,gBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAGA,MAAMC,IAAI,GAAGR,MAAM,CAACS,IAAK;WACdC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAU;;CAD1C;;AAaA,MAAMC,eAA0B,GAAG,CAAC;AAClCC,EAAAA,OADkC;AAElCC,EAAAA,KAFkC;AAGlCC,EAAAA,GAHkC;AAIlCC,EAAAA,OAJkC;AAKlCC,EAAAA;AALkC,CAAD,KAOjC,MAAC,QAAD,QACGJ,OAAO,IAAI,MAAC,MAAD,OADd,EAEE,MAAC,KAAD;AAAO,EAAA,MAAM,EAAEG,OAAf;AAAwB,EAAA,SAAS,EAAE,KAAnC;AAA0C,EAAA,IAAI;AAA9C,GACE,MAAC,KAAD,CAAO,MAAP;AAAc,EAAA,WAAW;AAAzB,GACE,MAAC,KAAD,CAAO,KAAP,6BADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACE;AAAM,EAAA,QAAQ,EAAEC;AAAhB,GACE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,EAAA,OAAO,EAAC,OAAf;AAAuB,EAAA,GAAG,EAAEH,KAAK,CAACI;AAAlC,wBADF,EAIE,MAAC,KAAD;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,WAAW,EAAC,oBAFd;AAGE,EAAA,IAAI,EAAC,OAHP;AAIE,EAAA,YAAY,EAAC,KAJf;AAKE,EAAA,QAAQ;AALV,GAMMJ,KANN,EAJF,CADF,EAcE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,EAAA,OAAO,EAAC,UAAf;AAA0B,EAAA,GAAG,EAAEC,GAAG,CAACG;AAAnC,kBADF,EAIE,MAAC,KAAD;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,WAAW,EAAC,cAFd;AAGE,EAAA,IAAI,EAAC,UAHP;AAIE,EAAA,QAAQ;AAJV,GAKMH,GALN,EAJF,CAdF,EA0BE,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAC;AAAb,EA1BF,CADF,EA6BE,MAAC,YAAD,QAEE,gEAEE,MAAC,IAAD,mCAFF,CAFF,CA7BF,CAJF,CAFF,CAPF;;AA6DA,eAAeH,eAAf","sourcesContent":["import React, { FC, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { StateChanger } from \"../common/Form\";\nimport { UseInputProps } from \"../../hooks\";\n\nconst Link = styled.span`\n  color: ${props => props.theme.blueColor};\n  cursor: pointer;\n`;\n\ntype Props = {\n  loading: boolean;\n  email: UseInputProps;\n  pwd: UseInputProps;\n  onClose: any;\n  onSubmit: any;\n};\n\nconst SignInPresenter: FC<Props> = ({\n  loading,\n  email,\n  pwd,\n  onClose,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={false} show>\n      <Modal.Header closeButton>\n        <Modal.Title>로그인</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={onSubmit}>\n          <InputWrapper>\n            <Label htmlFor=\"email\" val={email.value}>\n              이메일\n            </Label>\n            <Input\n              type=\"email\"\n              placeholder=\"이메일\"\n              name=\"email\"\n              autoComplete=\"off\"\n              required\n              {...email}\n            />\n          </InputWrapper>\n          <InputWrapper>\n            <Label htmlFor=\"password\" val={pwd.value}>\n              암호\n            </Label>\n            <Input\n              type=\"password\"\n              placeholder=\"암호\"\n              name=\"password\"\n              required\n              {...pwd}\n            />\n          </InputWrapper>\n          <Button text=\"로그인\" />\n        </form>\n        <StateChanger>\n          {/* {action === \"login\" && ( */}\n          <div>\n            계정이 없다면&nbsp;\n            <Link>회원가입</Link>\n          </div>\n          {/* )} */}\n          {/* {action === \"signup\" && (\n              <div>\n                계정이 있다면&nbsp;\n                <Link onClick={() => setAction(\"login\")}>로그인</Link>\n              </div>\n            )} */}\n        </StateChanger>\n      </Modal.Body>\n    </Modal>\n  </Fragment>\n);\n\nexport default SignInPresenter;\n"]},"metadata":{},"sourceType":"module"}