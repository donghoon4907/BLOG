{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\nimport { useVssState } from \"../../context\";\nimport FollowButton from \"../common/FollowButton\";\nimport { Thumbnail, Column } from \"./common\";\nconst Container = styled.div.withConfig({\n  displayName: \"HoverUser__Container\",\n  componentId: \"v2im11-0\"\n})([\"\", \";position:absolute;display:flex;flex-direction:column;overflow:hidden;top:35px;left:0;width:240px;height:220px;z-index:100;\"], props => props.theme.whiteBox);\nconst Loading = styled.div.withConfig({\n  displayName: \"HoverUser__Loading\",\n  componentId: \"v2im11-1\"\n})([\"\", \";position:absolute;overflow:hidden;display:flex;justfiy-content:flex-start;align-items:center;text-indent:10px;top:35px;left:0;width:240px;height:50px;z-index:100;\"], props => props.theme.whiteBox);\n\nconst HoverUser = ({\n  userId\n}) => {\n  const {\n    userId: myUserId\n  } = useVssState();\n  const {\n    data,\n    loading\n  } = useQuery(userQuery, {\n    variables: {\n      userId\n    },\n    fetchPolicy: \"network-only\"\n  });\n\n  if (loading) {\n    return __jsx(Loading, null, \"\\uB85C\\uB529 \\uC911\\uC785\\uB2C8\\uB2E4...\");\n  }\n\n  const {\n    nickname,\n    avatar,\n    followedBy,\n    following,\n    posts\n  } = data.getUser;\n  const isFollowing = followedBy.some(v => v.id === myUserId);\n  return __jsx(Container, null, __jsx(Thumbnail, {\n    src: avatar.url\n  }), __jsx(Column, null, __jsx(\"div\", null, nickname), __jsx(\"div\", null, myUserId && userId !== myUserId && __jsx(FollowButton, {\n    userId: userId,\n    isFollowing: isFollowing\n  }))), __jsx(Column, null, __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD3EC\\uC2A4\\uD2B8: \", posts.length), __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD314\\uB85C\\uC6CC: \", followedBy.length), __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD314\\uB85C\\uC789: \", following.length)));\n};\n\nexport default HoverUser;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/user/HoverUser.tsx"],"names":["React","styled","useQuery","userQuery","useVssState","FollowButton","Thumbnail","Column","Container","div","props","theme","whiteBox","Loading","HoverUser","userId","myUserId","data","loading","variables","fetchPolicy","nickname","avatar","followedBy","following","posts","getUser","isFollowing","some","v","id","url","length"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,UAAlC;AAEA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,wIACXC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QADV,CAAf;AAaA,MAAMC,OAAO,GAAGZ,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,gLACTC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QADZ,CAAb;;AAmBA,MAAME,SAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC3C,QAAM;AAAEA,IAAAA,MAAM,EAAEC;AAAV,MAAuBZ,WAAW,EAAxC;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBhB,QAAQ,CAACC,SAAD,EAAY;AAC5CgB,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS,KADiC;AAI5CK,IAAAA,WAAW,EAAE;AAJ+B,GAAZ,CAAlC;;AAOA,MAAIF,OAAJ,EAAa;AACX,WAAO,MAAC,OAAD,mDAAP;AACD;;AACD,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA;AAA3C,MAAqDR,IAAI,CAACS,OAAhE;AACA,QAAMC,WAAW,GAAGJ,UAAU,CAACK,IAAX,CAAiBC,CAAD,IAAYA,CAAC,CAACC,EAAF,KAASd,QAArC,CAApB;AACA,SACE,MAAC,SAAD,QACE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEM,MAAM,CAACS;AAAvB,IADF,EAEE,MAAC,MAAD,QACE,mBAAMV,QAAN,CADF,EAEE,mBACGL,QAAQ,IAAID,MAAM,KAAKC,QAAvB,IACC,MAAC,YAAD;AAAc,IAAA,MAAM,EAAED,MAAtB;AAA8B,IAAA,WAAW,EAAEY;AAA3C,IAFJ,CAFF,CAFF,EAUE,MAAC,MAAD,QACE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BF,KAAK,CAACO,MAAnC,CADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BT,UAAU,CAACS,MAAxC,CAFF,EAGE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BR,SAAS,CAACQ,MAAvC,CAHF,CAVF,CADF;AAkBD,CAhCD;;AAkCA,eAAelB,SAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\nimport { useVssState } from \"../../context\";\nimport FollowButton from \"../common/FollowButton\";\nimport { Thumbnail, Column } from \"./common\";\n\nconst Container = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  top: 35px;\n  left: 0;\n  width: 240px;\n  height: 220px;\n  z-index: 100;\n`;\n\nconst Loading = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  overflow: hidden;\n  display: flex;\n  justfiy-content: flex-start;\n  align-items: center;\n  text-indent: 10px;\n  top: 35px;\n  left: 0;\n  width: 240px;\n  height: 50px;\n  z-index: 100;\n`;\n\ninterface Props {\n  userId: string;\n}\n\nconst HoverUser: FC<Props> = ({ userId }) => {\n  const { userId: myUserId } = useVssState();\n  const { data, loading } = useQuery(userQuery, {\n    variables: {\n      userId\n    },\n    fetchPolicy: \"network-only\"\n  });\n\n  if (loading) {\n    return <Loading>로딩 중입니다...</Loading>;\n  }\n  const { nickname, avatar, followedBy, following, posts } = data.getUser;\n  const isFollowing = followedBy.some((v: any) => v.id === myUserId);\n  return (\n    <Container>\n      <Thumbnail src={avatar.url} />\n      <Column>\n        <div>{nickname}</div>\n        <div>\n          {myUserId && userId !== myUserId && (\n            <FollowButton userId={userId} isFollowing={isFollowing} />\n          )}\n        </div>\n      </Column>\n      <Column>\n        <span className=\"info\">포스트: {posts.length}</span>\n        <span className=\"info\">팔로워: {followedBy.length}</span>\n        <span className=\"info\">팔로잉: {following.length}</span>\n      </Column>\n    </Container>\n  );\n};\n\nexport default HoverUser;\n"]},"metadata":{},"sourceType":"module"}