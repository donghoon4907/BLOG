{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\n\nvar SignInPresenter = function SignInPresenter(_ref) {\n  var loading = _ref.loading,\n      email = _ref.email,\n      pwd = _ref.pwd,\n      onClose = _ref.onClose,\n      onSubmit = _ref.onSubmit;\n  return __jsx(Fragment, null, loading && __jsx(Loader, null), __jsx(Modal, {\n    onHide: onClose,\n    animation: false,\n    show: true\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"\\uB85C\\uADF8\\uC778\")), __jsx(Modal.Body, null, __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"email\",\n    val: email.value\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(Input, _extends({\n    type: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\",\n    name: \"email\",\n    autoComplete: \"off\",\n    required: true\n  }, email))), __jsx(InputWrapper, null, __jsx(Label, {\n    htmlFor: \"password\",\n    val: pwd.value\n  }, \"\\uC554\\uD638\"), __jsx(Input, _extends({\n    type: \"password\",\n    placeholder: \"\\uC554\\uD638\",\n    name: \"password\",\n    required: true\n  }, pwd))), __jsx(Button, {\n    text: \"\\uB85C\\uADF8\\uC778\"\n  })))));\n};\n\n_c = SignInPresenter;\nexport default SignInPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInPresenter\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/modal/SignInPresenter.tsx"],"names":["React","Fragment","Modal","InputWrapper","Label","Input","Button","Loader","SignInPresenter","loading","email","pwd","onClose","onSubmit","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,gBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAWA,IAAMC,eAA0B,GAAG,SAA7BA,eAA6B;AAAA,MACjCC,OADiC,QACjCA,OADiC;AAAA,MAEjCC,KAFiC,QAEjCA,KAFiC;AAAA,MAGjCC,GAHiC,QAGjCA,GAHiC;AAAA,MAIjCC,OAJiC,QAIjCA,OAJiC;AAAA,MAKjCC,QALiC,QAKjCA,QALiC;AAAA,SAOjC,MAAC,QAAD,QACGJ,OAAO,IAAI,MAAC,MAAD,OADd,EAEE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,OAAf;AAAwB,IAAA,SAAS,EAAE,KAAnC;AAA0C,IAAA,IAAI;AAA9C,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW;AAAzB,KACE,MAAC,KAAD,CAAO,KAAP,6BADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACE;AAAM,IAAA,QAAQ,EAAEC;AAAhB,KACE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEH,KAAK,CAACI;AAAlC,0BADF,EAIE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,QAAQ;AALV,KAMMJ,KANN,EAJF,CADF,EAcE,MAAC,YAAD,QACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEC,GAAG,CAACG;AAAnC,oBADF,EAIE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ;AAJV,KAKMH,GALN,EAJF,CAdF,EA0BE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,IA1BF,CADF,CAJF,CAFF,CAPiC;AAAA,CAAnC;;KAAMH,e;AA+CN,eAAeA,eAAf","sourcesContent":["import React, { FC, Fragment } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { InputWrapper, Label } from \"../common/Form\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport Loader from \"../common/Loader\";\nimport { UseInputProps } from \"../../hooks\";\n\ntype Props = {\n  loading: boolean;\n  email: UseInputProps;\n  pwd: UseInputProps;\n  onClose: any;\n  onSubmit: any;\n};\n\nconst SignInPresenter: FC<Props> = ({\n  loading,\n  email,\n  pwd,\n  onClose,\n  onSubmit\n}) => (\n  <Fragment>\n    {loading && <Loader />}\n    <Modal onHide={onClose} animation={false} show>\n      <Modal.Header closeButton>\n        <Modal.Title>로그인</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={onSubmit}>\n          <InputWrapper>\n            <Label htmlFor=\"email\" val={email.value}>\n              이메일\n            </Label>\n            <Input\n              type=\"email\"\n              placeholder=\"이메일\"\n              name=\"email\"\n              autoComplete=\"off\"\n              required\n              {...email}\n            />\n          </InputWrapper>\n          <InputWrapper>\n            <Label htmlFor=\"password\" val={pwd.value}>\n              암호\n            </Label>\n            <Input\n              type=\"password\"\n              placeholder=\"암호\"\n              name=\"password\"\n              required\n              {...pwd}\n            />\n          </InputWrapper>\n          <Button text=\"로그인\" />\n        </form>\n      </Modal.Body>\n    </Modal>\n  </Fragment>\n);\n\nexport default SignInPresenter;\n"]},"metadata":{},"sourceType":"module"}