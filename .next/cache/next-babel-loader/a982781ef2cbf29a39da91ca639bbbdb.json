{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport isBrowser from \"../lib/isBrowser\";\n\nvar Index = function Index() {\n  _s();\n\n  var dispatch = useVssDispatch();\n\n  if (isBrowser) {\n    useQuery(meQuery, {\n      ssr: false,\n      onCompleted: function onCompleted(_ref) {\n        var getMyProfile = _ref.getMyProfile;\n        var id = getMyProfile.id,\n            nickname = getMyProfile.nickname,\n            email = getMyProfile.email,\n            avatar = getMyProfile.avatar,\n            isMaster = getMyProfile.isMaster;\n        dispatch({\n          type: SET_ME,\n          userId: id,\n          nickname: nickname,\n          email: email,\n          avatar: avatar,\n          isMaster: isMaster\n        });\n      }\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Feed, null));\n};\n\n_s(Index, \"jV7g94KRg7WDCZmKxPP9DnOJQYM=\", false, function () {\n  return [useVssDispatch, useQuery];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/index.tsx"],"names":["React","useQuery","Layout","Feed","meQuery","useVssDispatch","SET_ME","isBrowser","Index","dispatch","ssr","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,YAAvC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAAA;;AAC5B,MAAMC,QAAQ,GAAGJ,cAAc,EAA/B;;AACA,MAAIE,SAAJ,EAAe;AACbN,IAAAA,QAAQ,CAACG,OAAD,EAAU;AAChBM,MAAAA,GAAG,EAAE,KADW;AAEhBC,MAAAA,WAAW,EAAE,2BAAsB;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,YACzBC,EADyB,GACiBD,YADjB,CACzBC,EADyB;AAAA,YACrBC,QADqB,GACiBF,YADjB,CACrBE,QADqB;AAAA,YACXC,KADW,GACiBH,YADjB,CACXG,KADW;AAAA,YACJC,MADI,GACiBJ,YADjB,CACJI,MADI;AAAA,YACIC,QADJ,GACiBL,YADjB,CACIK,QADJ;AAEjCR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAEZ,MADC;AAEPa,UAAAA,MAAM,EAAEN,EAFD;AAGPC,UAAAA,QAAQ,EAARA,QAHO;AAIPC,UAAAA,KAAK,EAALA,KAJO;AAKPC,UAAAA,MAAM,EAANA,MALO;AAMPC,UAAAA,QAAQ,EAARA;AANO,SAAD,CAAR;AAQD;AAZe,KAAV,CAAR;AAcD;;AAED,SACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF;AAKD,CAxBD;;GAAMT,K;UACaH,c,EAEfJ,Q;;;KAHEO,K;;AA2CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { GetStaticProps, NextPage } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport Layout from \"../components/common/Layout\";\nimport Feed from \"../components/feed/FeedContainer\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { feedQuery } from \"../graphql/page/query/feed\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssDispatch, SET_ME } from \"../context\";\nimport isBrowser from \"../lib/isBrowser\";\n\nconst Index: NextPage = () => {\n  const dispatch = useVssDispatch();\n  if (isBrowser) {\n    useQuery(meQuery, {\n      ssr: false,\n      onCompleted: ({ getMyProfile }) => {\n        const { id, nickname, email, avatar, isMaster } = getMyProfile;\n        dispatch({\n          type: SET_ME,\n          userId: id,\n          nickname,\n          email,\n          avatar,\n          isMaster\n        });\n      }\n    });\n  }\n\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: feedQuery,\n    variables: {\n      first: 10\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}