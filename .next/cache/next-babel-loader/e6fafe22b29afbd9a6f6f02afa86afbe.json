{"ast":null,"code":"var _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/common/FollowButton.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport { followMutation, unfollowMutation } from \"../../graphql/user/mutation/follow\";\nimport { getAccessToken } from \"../../lib/token\";\nimport { useVssDispatch, SHOW_LOGIN_MODAL } from \"../../context\";\n\nconst FollowButton = ({\n  isFollowing,\n  userId\n}) => {\n  const dispatch = useVssDispatch();\n  const {\n    0: ctrlIsFolling,\n    1: setCtrlIsFolling\n  } = useState(isFollowing);\n  console.log(`in follow ${ctrlIsFolling}`);\n  const [follow, {\n    loading: followLoading\n  }] = useMutation(followMutation);\n  const [unfollow, {\n    loading: unfollowLoading\n  }] = useMutation(unfollowMutation);\n  const handleFollow = useCallback(async () => {\n    const token = getAccessToken();\n\n    if (token) {\n      if (ctrlIsFolling) {\n        if (unfollowLoading) return;\n        const {\n          data\n        } = await unfollow({\n          variables: {\n            userId\n          }\n        });\n\n        if (data.unfollow) {\n          setCtrlIsFolling(false);\n          alert(\"언팔로우 되었습니다.\");\n        }\n      } else {\n        if (followLoading) return;\n        const {\n          data\n        } = await follow({\n          variables: {\n            userId\n          }\n        });\n\n        if (data.follow) {\n          setCtrlIsFolling(true);\n          alert(\"팔로우 되었습니다.\");\n        }\n      }\n    } else {\n      dispatch({\n        type: SHOW_LOGIN_MODAL\n      });\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n  return __jsx(Button, {\n    text: ctrlIsFolling ? \"언팔로우\" : \"팔로우\",\n    onClick: handleFollow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/common/FollowButton.tsx"],"names":["React","useState","useCallback","useMutation","Button","followMutation","unfollowMutation","getAccessToken","useVssDispatch","SHOW_LOGIN_MODAL","FollowButton","isFollowing","userId","dispatch","ctrlIsFolling","setCtrlIsFolling","console","log","follow","loading","followLoading","unfollow","unfollowLoading","handleFollow","token","data","variables","alert","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,cADF,EAEEC,gBAFF,QAGO,oCAHP;AAIA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;;AAOA,MAAMC,YAAuB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AAC3D,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAM;AAAA,OAACM,aAAD;AAAA,OAAgBC;AAAhB,MAAoCd,QAAQ,CAAUU,WAAV,CAAlD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,aAAc,EAAvC;AAEA,QAAM,CAACI,MAAD,EAAS;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAT,IAAuCjB,WAAW,CAACE,cAAD,CAAxD;AACA,QAAM,CAACgB,QAAD,EAAW;AAAEF,IAAAA,OAAO,EAAEG;AAAX,GAAX,IAA2CnB,WAAW,CAC1DG,gBAD0D,CAA5D;AAIA,QAAMiB,YAAY,GAAGrB,WAAW,CAAC,YAAY;AAC3C,UAAMsB,KAAK,GAAGjB,cAAc,EAA5B;;AACA,QAAIiB,KAAJ,EAAW;AACT,UAAIV,aAAJ,EAAmB;AACjB,YAAIQ,eAAJ,EAAqB;AAErB,cAAM;AAAEG,UAAAA;AAAF,YAAW,MAAMJ,QAAQ,CAAC;AAC9BK,UAAAA,SAAS,EAAE;AAAEd,YAAAA;AAAF;AADmB,SAAD,CAA/B;;AAGA,YAAIa,IAAI,CAACJ,QAAT,EAAmB;AACjBN,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAY,UAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,OAVD,MAUO;AACL,YAAIP,aAAJ,EAAmB;AAEnB,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMP,MAAM,CAAC;AAC5BQ,UAAAA,SAAS,EAAE;AAAEd,YAAAA;AAAF;AADiB,SAAD,CAA7B;;AAGA,YAAIa,IAAI,CAACP,MAAT,EAAiB;AACfH,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAY,UAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF;AACF,KAtBD,MAsBO;AACLd,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEnB;AADC,OAAD,CAAR;AAGD;AACF,GA7B+B,EA6B7B,CAACK,aAAD,EAAgBM,aAAhB,EAA+BE,eAA/B,CA7B6B,CAAhC;AA+BA,SACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAER,aAAa,GAAG,MAAH,GAAY,KADjC;AAEE,IAAA,OAAO,EAAES,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CA/CD;;AAiDA,eAAeb,YAAf","sourcesContent":["import React, { FC, useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"./Button\";\nimport {\n  followMutation,\n  unfollowMutation\n} from \"../../graphql/user/mutation/follow\";\nimport { getAccessToken } from \"../../lib/token\";\nimport { useVssDispatch, SHOW_LOGIN_MODAL } from \"../../context\";\n\ninterface Props {\n  isFollowing: boolean;\n  userId: string;\n}\n\nconst FollowButton: FC<Props> = ({ isFollowing, userId }) => {\n  const dispatch = useVssDispatch();\n  const [ctrlIsFolling, setCtrlIsFolling] = useState<boolean>(isFollowing);\n  console.log(`in follow ${ctrlIsFolling}`);\n\n  const [follow, { loading: followLoading }] = useMutation(followMutation);\n  const [unfollow, { loading: unfollowLoading }] = useMutation(\n    unfollowMutation\n  );\n\n  const handleFollow = useCallback(async () => {\n    const token = getAccessToken();\n    if (token) {\n      if (ctrlIsFolling) {\n        if (unfollowLoading) return;\n\n        const { data } = await unfollow({\n          variables: { userId }\n        });\n        if (data.unfollow) {\n          setCtrlIsFolling(false);\n          alert(\"언팔로우 되었습니다.\");\n        }\n      } else {\n        if (followLoading) return;\n\n        const { data } = await follow({\n          variables: { userId }\n        });\n        if (data.follow) {\n          setCtrlIsFolling(true);\n          alert(\"팔로우 되었습니다.\");\n        }\n      }\n    } else {\n      dispatch({\n        type: SHOW_LOGIN_MODAL\n      });\n    }\n  }, [ctrlIsFolling, followLoading, unfollowLoading]);\n\n  return (\n    <Button\n      text={ctrlIsFolling ? \"언팔로우\" : \"팔로우\"}\n      onClick={handleFollow}\n    />\n  );\n};\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}