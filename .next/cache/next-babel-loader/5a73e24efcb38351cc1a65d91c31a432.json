{"ast":null,"code":"var __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React, { useCallback, Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { keywordQuery } from \"../../graphql/search/query/keyword\";\nconst Container = styled.div.withConfig({\n  displayName: \"SearchResult__Container\",\n  componentId: \"sc-5fh9lp-0\"\n})([\"\", \";width:100%;position:absolute;display:flex;flex-direction:column;top:37px;left:0;height:auto;overflow:hidden;\"], props => props.theme.whiteBox);\nconst ContentType = styled.div.withConfig({\n  displayName: \"SearchResult__ContentType\",\n  componentId: \"sc-5fh9lp-1\"\n})([\"background:rgba(0,0,0,0.03);font-size:14px;padding:5px;border-bottom:\", \";\"], props => props.theme.boxBorder);\nconst Item = styled.li.withConfig({\n  displayName: \"SearchResult__Item\",\n  componentId: \"sc-5fh9lp-2\"\n})([\"display:flex;justify-content:flex-start align-items:center;padding:5px;font-size:12px;overflow:hidden;cursor:pointer;\"]);\nconst Title = styled.h3.withConfig({\n  displayName: \"SearchResult__Title\",\n  componentId: \"sc-5fh9lp-3\"\n})([\"width:240px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;\", \"{width:100px;}\"], props => props.theme.tablet);\n\nconst SearchResult = ({\n  searchKeyword,\n  setSearch,\n  setSearchKeyword\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(keywordQuery, {\n    variables: {\n      searchKeyword\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const handleClickItem = useCallback(keyword => {\n    Router.push(`/search?keyword=${keyword}`);\n    setSearch(keyword);\n    setSearchKeyword(\"\");\n  }, []);\n\n  if (loading) {\n    return __jsx(Fragment, null);\n  }\n\n  return __jsx(Container, null, __jsx(ContentType, null, \"\\uC5F0\\uAD00 \\uAC80\\uC0C9\\uC5B4\"));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/common/SearchResult.tsx"],"names":["Router","React","useCallback","Fragment","useQuery","styled","keywordQuery","Container","div","props","theme","whiteBox","ContentType","boxBorder","Item","li","Title","h3","tablet","SearchResult","searchKeyword","setSearch","setSearchKeyword","data","loading","variables","notifyOnNetworkStatusChange","handleClickItem","keyword","push"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IACEC,WADF,EAEEC,QAFF,QAMO,OANP;AAOA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,0HACXC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QADV,CAAf;AAYA,MAAMC,WAAW,GAAGP,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,mFAIEC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,SAJvB,CAAjB;AAOA,MAAMC,IAAI,GAAGT,MAAM,CAACU,EAAV;AAAA;AAAA;AAAA,6HAAV;AAUA,MAAMC,KAAK,GAAGX,MAAM,CAACY,EAAV;AAAA;AAAA;AAAA,iGAMPR,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYQ,MANd,CAAX;;AAiBA,MAAMC,YAAuB,GAAG,CAAC;AAC/BC,EAAAA,aAD+B;AAE/BC,EAAAA,SAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAI1B;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBpB,QAAQ,CAACE,YAAD,EAAe;AAC/CmB,IAAAA,SAAS,EAAE;AACTL,MAAAA;AADS,KADoC;AAI/CM,IAAAA,2BAA2B,EAAE;AAJkB,GAAf,CAAlC;AAOA,QAAMC,eAAe,GAAGzB,WAAW,CAAC0B,OAAO,IAAI;AAC7C5B,IAAAA,MAAM,CAAC6B,IAAP,CAAa,mBAAkBD,OAAQ,EAAvC;AACAP,IAAAA,SAAS,CAACO,OAAD,CAAT;AACAN,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAJkC,EAIhC,EAJgC,CAAnC;;AAMA,MAAIE,OAAJ,EAAa;AACX,WAAO,MAAC,QAAD,OAAP;AACD;;AAED,SACE,MAAC,SAAD,QACE,MAAC,WAAD,0CADF,CADF;AAgBD,CAtCD;;AAwCA,eAAeL,YAAf","sourcesContent":["import Router from \"next/router\";\nimport React, {\n  useCallback,\n  Fragment,\n  Dispatch,\n  SetStateAction,\n  FC\n} from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { keywordQuery } from \"../../graphql/search/query/keyword\";\n\nconst Container = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 37px;\n  left: 0;\n  height: auto;\n  overflow: hidden;\n`;\n\nconst ContentType = styled.div`\n  background: rgba(0, 0, 0, 0.03);\n  font-size: 14px;\n  padding: 5px;\n  border-bottom: ${props => props.theme.boxBorder};\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: flex-start\n  align-items: center;\n  padding: 5px;\n  font-size: 12px;\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Title = styled.h3`\n  width: 240px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  ${props => props.theme.tablet} {\n    width: 100px;\n  }\n`;\n\ntype Props = {\n  searchKeyword: string;\n  setSearch: Dispatch<SetStateAction<string>>;\n  setSearchKeyword: Dispatch<SetStateAction<string>>;\n};\n\nconst SearchResult: FC<Props> = ({\n  searchKeyword,\n  setSearch,\n  setSearchKeyword\n}) => {\n  const { data, loading } = useQuery(keywordQuery, {\n    variables: {\n      searchKeyword\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  const handleClickItem = useCallback(keyword => {\n    Router.push(`/search?keyword=${keyword}`);\n    setSearch(keyword);\n    setSearchKeyword(\"\");\n  }, []);\n\n  if (loading) {\n    return <Fragment />;\n  }\n\n  return (\n    <Container>\n      <ContentType>연관 검색어</ContentType>\n      {/* <ol>\n        {data.getSearchKeyword.length > 0 ? (\n          data.getSearchKeyword.map(({ id, keyword }) => (\n            <Item key={id} onClick={() => handleClickItem(keyword)}>\n              <Title>{keyword}</Title>\n            </Item>\n          ))\n        ) : (\n          <Item>검색결과가 없습니다.</Item>\n        )}\n      </ol> */}\n    </Container>\n  );\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}