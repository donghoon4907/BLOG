{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport { addPostMutation } from \"../../graphql/post/mutation/add\";\nimport { updatePostMutation } from \"../../graphql/post/mutation/update\";\nimport { removePostMutation } from \"../../graphql/post/mutation/remove\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useVssState, useVssDispatch, HIDE_POST_MODAL } from \"../../context\";\n\nvar SetPostContainer = function SetPostContainer() {\n  var router = useRouter();\n\n  var _useVssState = useVssState(),\n      activePost = _useVssState.activePost;\n\n  var dispatch = useVssDispatch();\n\n  var _useState = useState(\"영상 업로드\"),\n      header = _useState[0],\n      setHeader = _useState[1];\n\n  var fileEl = useRef(null);\n\n  var _useState2 = useState(\"\"),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var _useState4 = useState(\"PUBLIC\"),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(0),\n      progress = _useState5[0],\n      setProgress = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  var _useMutation = useMutation(addPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      add = _useMutation2[0],\n      addPostLoading = _useMutation2[1].loading;\n\n  var _useMutation3 = useMutation(updatePostMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      update = _useMutation4[0],\n      updatePostLoading = _useMutation4[1].loading;\n\n  var _useMutation5 = useMutation(removePostMutation),\n      _useMutation6 = _slicedToArray(_useMutation5, 2),\n      remove = _useMutation6[0],\n      removePostLoading = _useMutation6[1].loading;\n\n  var handleChangeTitle = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setTitle(e.target.value);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var handleChangeDescription = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setDescription(e.target.value);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var handleChangeStatus = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setStatus(e.target.value);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), []);\n  var handleClickFile = useCallback(function () {\n    var node = fileEl.current;\n\n    if (node) {\n      node.click();\n    }\n  }, []);\n  var handleChangeFile = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var files, formData, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (e.target.value) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 2:\n              // cancel select file\n              files = e.target.files;\n              formData = new FormData();\n              formData.append(\"file\", files[0]);\n              _context4.next = 7;\n              return axios.post(\"\".concat(process.env.BACKEND_API_PATH, \"/api/upload\"), formData, {\n                onUploadProgress: function onUploadProgress(_ref5) {\n                  var lengthComputable = _ref5.lengthComputable,\n                      loaded = _ref5.loaded,\n                      total = _ref5.total;\n\n                  if (lengthComputable) {\n                    setProgress(Math.floor(loaded / total * 100));\n                  }\n                }\n              });\n\n            case 7:\n              response = _context4.sent;\n\n              if (response.data) {\n                setFile(response.data);\n                setHeader(\"등록\");\n              }\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  var handleDelete = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var tf, _yield$remove, deletePost;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!removePostLoading) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n          case 2:\n            tf = confirm(\"포스트를 삭제하시겠어요?\");\n\n            if (!tf) {\n              _context5.next = 9;\n              break;\n            }\n\n            _context5.next = 6;\n            return remove({\n              variables: {\n                postId: activePost.postId\n              }\n            });\n\n          case 6:\n            _yield$remove = _context5.sent;\n            deletePost = _yield$remove.data.deletePost;\n\n            if (deletePost) {\n              alert(\"포스트가 삭제되었습니다.\");\n            }\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  })), [activePost, removePostLoading]);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n      var tf, _yield$add, addPost, _yield$update, updatePost, _JSON$parse, message;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(addPostLoading || updatePostLoading)) {\n                _context6.next = 3;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", alert(\"요청 중입니다. 잠시만 기다려주세요.\"));\n\n            case 3:\n              tf = confirm(\"\\uC785\\uB825\\uD55C \\uB0B4\\uC6A9\\uC73C\\uB85C \".concat(header, \"\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\"));\n\n              if (!tf) {\n                _context6.next = 29;\n                break;\n              }\n\n              _context6.prev = 5;\n\n              if (!(header === \"등록\")) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 9;\n              return add({\n                variables: {\n                  title: title,\n                  description: description,\n                  status: status,\n                  file: file\n                }\n              });\n\n            case 9:\n              _yield$add = _context6.sent;\n              addPost = _yield$add.data.addPost;\n\n              if (addPost) {\n                alert(\"포스트가 등록되었습니다.\");\n                router.reload();\n              }\n\n              _context6.next = 23;\n              break;\n\n            case 14:\n              if (!(header === \"수정\")) {\n                _context6.next = 22;\n                break;\n              }\n\n              _context6.next = 17;\n              return update({\n                variables: {\n                  postId: activePost.postId,\n                  title: title,\n                  description: description,\n                  status: status,\n                  file: file\n                }\n              });\n\n            case 17:\n              _yield$update = _context6.sent;\n              updatePost = _yield$update.data.updatePost;\n\n              if (updatePost) {\n                alert(\"포스트가 수정되었습니다.\");\n                router.replace(\"/\", \"/\", {\n                  shallow: true\n                });\n              }\n\n              _context6.next = 23;\n              break;\n\n            case 22:\n              throw new Error(\"check current header\");\n\n            case 23:\n              _context6.next = 29;\n              break;\n\n            case 25:\n              _context6.prev = 25;\n              _context6.t0 = _context6[\"catch\"](5);\n              _JSON$parse = JSON.parse(_context6.t0.message), message = _JSON$parse.message;\n              alert(message);\n\n            case 29:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[5, 25]]);\n    }));\n\n    return function (_x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), [title, description, status, file, addPostLoading, activePost, updatePostLoading]);\n  var handleClose = useCallback(function () {\n    dispatch({\n      type: HIDE_POST_MODAL\n    });\n  }, []);\n  useEffect(function () {\n    if (activePost.title) {\n      setTitle(activePost.title);\n    }\n\n    if (activePost.description) {\n      setDescription(activePost.description);\n    }\n\n    if (activePost.status) {\n      setStatus(activePost.status);\n    }\n\n    if (activePost.postId) {\n      setProgress(100);\n      setHeader(\"수정\");\n    }\n\n    if (activePost.url) {\n      setFile(activePost.url);\n    }\n  }, [activePost]);\n  return __jsx(SetPostPresenter, {\n    addPostLoading: addPostLoading,\n    updatePostLoading: updatePostLoading,\n    removePostLoading: removePostLoading,\n    header: header,\n    title: title,\n    description: description,\n    status: status,\n    progress: progress,\n    file: file,\n    fileEl: fileEl,\n    onClickFile: handleClickFile,\n    onChangeFile: handleChangeFile,\n    onChangeTitle: handleChangeTitle,\n    onChangeDescription: handleChangeDescription,\n    onChangeStatus: handleChangeStatus,\n    onClose: handleClose,\n    onDelete: handleDelete,\n    onSubmit: handleSubmit\n  });\n};\n\nexport default SetPostContainer;","map":null,"metadata":{},"sourceType":"module"}