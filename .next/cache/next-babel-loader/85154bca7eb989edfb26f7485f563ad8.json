{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query feed($skip: Int, $first: Int) {\\n    getPosts(skip: $skip, first: $first) {\\n      id\\n      title\\n      description\\n      createdAt\\n      user {\\n        id\\n        nickname\\n        avatar {\\n          url\\n        }\\n      }\\n      video {\\n        url\\n      }\\n      likes {\\n        user {\\n          id\\n        }\\n      }\\n      status\\n      room {\\n        id\\n      }\\n    }\\n    getNotices(skip: $skip, first: $first) {\\n      id\\n      title\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n    getRecommandUsers {\\n      id\\n      nickname\\n      email\\n      avatar {\\n        url\\n      }\\n      isMaster\\n      followedBy {\\n        id\\n      }\\n      following {\\n        id\\n      }\\n      posts {\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nexport var feedQuery = gql(_templateObject());","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/graphql/page/query/feed.ts"],"names":["gql","feedQuery"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const feedQuery = gql`\n  query feed($skip: Int, $first: Int) {\n    getPosts(skip: $skip, first: $first) {\n      id\n      title\n      description\n      createdAt\n      user {\n        id\n        nickname\n        avatar {\n          url\n        }\n      }\n      video {\n        url\n      }\n      likes {\n        user {\n          id\n        }\n      }\n      status\n      room {\n        id\n      }\n    }\n    getNotices(skip: $skip, first: $first) {\n      id\n      title\n      description\n      createdAt\n      updatedAt\n    }\n    getRecommandUsers {\n      id\n      nickname\n      email\n      avatar {\n        url\n      }\n      isMaster\n      followedBy {\n        id\n      }\n      following {\n        id\n      }\n      posts {\n        id\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}