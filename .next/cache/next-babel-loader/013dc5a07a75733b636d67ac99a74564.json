{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport redirect from \"./redirect\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var result, _yield$context$apollo, getMyProfile, _JSON$parse, message, status;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            result = {};\n            _context.prev = 1;\n            _context.next = 4;\n            return context.apolloClient.query({\n              query: meQuery\n            });\n\n          case 4:\n            _yield$context$apollo = _context.sent;\n            getMyProfile = _yield$context$apollo.getMyProfile;\n\n            if (getMyProfile) {\n              result[\"data\"] = getMyProfile;\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n\n            try {\n              _JSON$parse = JSON.parse(_context.t0.message), message = _JSON$parse.message, status = _JSON$parse.status;\n\n              if (status === 401) {\n                alert(\"세션이 만료되었습니다. 로그인 화면으로 이동합니다.\");\n                redirect(context.ctx, \"/login\");\n              } else {\n                result[\"error\"] = message;\n              }\n            } catch (_unused) {\n              result[\"error\"] = _context.t0.message;\n            }\n\n          case 12:\n            _context.prev = 12;\n            return _context.abrupt(\"return\", result);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9, 12, 15]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/lib/isAuthenticated.ts"],"names":["redirect","meQuery","context","result","apolloClient","query","getMyProfile","JSON","parse","message","status","alert","ctx"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAOA;AAAA,sEAAe,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACE,EADF;AAAA;AAAA;AAAA,mBAGoBD,OAAO,CAACE,YAAR,CAAqBC,KAArB,CAA2B;AACxDA,cAAAA,KAAK,EAAEJ;AADiD,aAA3B,CAHpB;;AAAA;AAAA;AAGHK,YAAAA,YAHG,yBAGHA,YAHG;;AAMX,gBAAIA,YAAJ,EAAkB;AAChBH,cAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBG,YAAjB;AACD;;AARU;AAAA;;AAAA;AAAA;AAAA;;AAUX,gBAAI;AAAA,4BAC0BC,IAAI,CAACC,KAAL,CAAW,YAAMC,OAAjB,CAD1B,EACMA,OADN,eACMA,OADN,EACeC,MADf,eACeA,MADf;;AAEF,kBAAIA,MAAM,KAAK,GAAf,EAAoB;AAClBC,gBAAAA,KAAK,CAAC,8BAAD,CAAL;AACAX,gBAAAA,QAAQ,CAACE,OAAO,CAACU,GAAT,EAAc,QAAd,CAAR;AACD,eAHD,MAGO;AACLT,gBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBM,OAAlB;AACD;AACF,aARD,CAQE,gBAAM;AACNN,cAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,YAAMM,OAAxB;AACD;;AApBU;AAAA;AAAA,6CAsBJN,MAtBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import redirect from \"./redirect\";\nimport { meQuery } from \"../graphql/auth/query/me\";\n\ntype Props = {\n  data?: object;\n  error?: string;\n};\n\nexport default async (context: any): Promise<Props> => {\n  const result = {};\n  try {\n    const { getMyProfile } = await context.apolloClient.query({\n      query: meQuery\n    });\n    if (getMyProfile) {\n      result[\"data\"] = getMyProfile;\n    }\n  } catch (error) {\n    try {\n      const { message, status } = JSON.parse(error.message);\n      if (status === 401) {\n        alert(\"세션이 만료되었습니다. 로그인 화면으로 이동합니다.\");\n        redirect(context.ctx, \"/login\");\n      } else {\n        result[\"error\"] = message;\n      }\n    } catch {\n      result[\"error\"] = error.message;\n    }\n  } finally {\n    return result;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}