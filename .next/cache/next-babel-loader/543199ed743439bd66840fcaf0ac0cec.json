{"ast":null,"code":"var BOX_BORDER = \"1px solid #e6e6e6\";\nvar BORDER_RADIUS = \"4px\";\n\nvar customMediaQuery = function customMediaQuery(maxWidth) {\n  return \"@media only screen and (max-width: \".concat(maxWidth, \"px)\");\n};\n\nvar media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(922),\n  tablet: customMediaQuery(768),\n  phone: customMediaQuery(576)\n};\nexport default {\n  bgColor: \"#FAFAFA\",\n  blackColor: \"#262626\",\n  darkGrayColor: \"#999\",\n  lightGrayColor: \"#c7c7c7\",\n  successColor: \"#3D8939\",\n  infoColor: \"#358597\",\n  redColor: \"#ED4956\",\n  blueColor: \"#3897f0\",\n  darkBlueColor: \"#003569\",\n  boxBorder: BOX_BORDER,\n  borderRadius: BORDER_RADIUS,\n  whiteBox: \"\\n    border:\".concat(BOX_BORDER, \";\\n    border-radius:\").concat(BORDER_RADIUS, \";\\n    background: white;\\n  \"),\n  maxWidth: \"730px\",\n  media: media\n};\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/theme/index.ts"],"names":["BOX_BORDER","BORDER_RADIUS","customMediaQuery","media","custom","desktop","tablet","phone","bgColor","blackColor","darkGrayColor","lightGrayColor","successColor","infoColor","redColor","blueColor","darkBlueColor","boxBorder","borderRadius","whiteBox","maxWidth"],"mappings":"AAAA,IAAMA,UAAU,GAAhB,mBAAA;AACA,IAAMC,aAAa,GAAnB,KAAA;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,QAAA,EAAA;AAAA,SAAA,sCAAA,MAAA,CAAA,QAAA,EAAA,KAAA,CAAA;AAAzB,CAAA;;AAGA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EADM,gBAAA;AAEZC,EAAAA,OAAO,EAAEH,gBAAgB,CAFb,GAEa,CAFb;AAGZI,EAAAA,MAAM,EAAEJ,gBAAgB,CAHZ,GAGY,CAHZ;AAIZK,EAAAA,KAAK,EAAEL,gBAAgB,CAAA,GAAA;AAJX,CAAd;AAOA,eAAe;AACbM,EAAAA,OAAO,EADM,SAAA;AAEbC,EAAAA,UAAU,EAFG,SAAA;AAGbC,EAAAA,aAAa,EAHA,MAAA;AAIbC,EAAAA,cAAc,EAJD,SAAA;AAKbC,EAAAA,YAAY,EALC,SAAA;AAMbC,EAAAA,SAAS,EANI,SAAA;AAObC,EAAAA,QAAQ,EAPK,SAAA;AAQbC,EAAAA,SAAS,EARI,SAAA;AASbC,EAAAA,aAAa,EATA,SAAA;AAUbC,EAAAA,SAAS,EAVI,UAAA;AAWbC,EAAAA,YAAY,EAXC,aAAA;AAYbC,EAAAA,QAAQ,EAAA,gBAAA,MAAA,CAAA,UAAA,EAAA,uBAAA,EAAA,MAAA,CAAA,aAAA,EAZK,+BAYL,CAZK;AAiBbC,EAAAA,QAAQ,EAjBK,OAAA;AAkBbjB,EAAAA,KAAK,EAALA;AAlBa,CAAf","sourcesContent":["const BOX_BORDER = \"1px solid #e6e6e6\";\nconst BORDER_RADIUS = \"4px\";\n\nconst customMediaQuery = (maxWidth: string | number) =>\n  `@media only screen and (max-width: ${maxWidth}px)`;\n\nconst media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(922),\n  tablet: customMediaQuery(768),\n  phone: customMediaQuery(576)\n};\n\nexport default {\n  bgColor: \"#FAFAFA\",\n  blackColor: \"#262626\",\n  darkGrayColor: \"#999\",\n  lightGrayColor: \"#c7c7c7\",\n  successColor: \"#3D8939\",\n  infoColor: \"#358597\",\n  redColor: \"#ED4956\",\n  blueColor: \"#3897f0\",\n  darkBlueColor: \"#003569\",\n  boxBorder: BOX_BORDER,\n  borderRadius: BORDER_RADIUS,\n  whiteBox: `\n    border:${BOX_BORDER};\n    border-radius:${BORDER_RADIUS};\n    background: white;\n  `,\n  maxWidth: \"730px\",\n  media\n};\n"]},"metadata":{},"sourceType":"module"}