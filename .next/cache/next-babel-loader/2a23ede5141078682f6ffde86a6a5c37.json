{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\nimport { useVssState } from \"../../context\";\nimport FollowButton from \"../common/FollowButton\";\nvar Container = styled.div.withConfig({\n  displayName: \"HoverUser__Container\",\n  componentId: \"v2im11-0\"\n})([\"\", \";position:absolute;display:flex;flex-direction:column;overflow:hidden;top:35px;left:0;width:240px;height:220px;z-index:100;\"], function (props) {\n  return props.theme.whiteBox;\n});\n_c = Container;\nvar Loading = styled.div.withConfig({\n  displayName: \"HoverUser__Loading\",\n  componentId: \"v2im11-1\"\n})([\"\", \";position:absolute;overflow:hidden;display:flex;justfiy-content:flex-start;align-items:center;text-indent:10px;top:35px;left:0;width:240px;height:50px;z-index:100;\"], function (props) {\n  return props.theme.whiteBox;\n});\n_c2 = Loading;\nvar Background = styled.img.withConfig({\n  displayName: \"HoverUser__Background\",\n  componentId: \"v2im11-2\"\n})([\"width:100%;height:150px;\"]);\n_c3 = Background;\nvar Column = styled.div.withConfig({\n  displayName: \"HoverUser__Column\",\n  componentId: \"v2im11-3\"\n})([\"display:flex;padding:5px;justify-content:space-between;align-items:center;height:60px;& > div{width:70px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}.info{font-size:12px;}\"]);\n_c4 = Column;\n\nvar HoverUser = function HoverUser(_ref) {\n  _s();\n\n  var userId = _ref.userId;\n\n  var _useVssState = useVssState(),\n      MyUserId = _useVssState.userId;\n\n  var _useQuery = useQuery(userQuery, {\n    variables: {\n      userId: userId\n    },\n    fetchPolicy: \"network-only\"\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(Loading, null, \"\\uB85C\\uB529 \\uC911\\uC785\\uB2C8\\uB2E4...\");\n  }\n\n  var _data$getUser = data.getUser,\n      nickname = _data$getUser.nickname,\n      avatar = _data$getUser.avatar,\n      followedBy = _data$getUser.followedBy,\n      following = _data$getUser.following,\n      posts = _data$getUser.posts;\n  var isFollowing = followedBy.some(function (v) {\n    return v.id === MyUserId;\n  });\n  console.log(userId);\n  console.log(MyUserId);\n  return __jsx(Container, null, __jsx(Background, {\n    src: avatar.url\n  }), __jsx(Column, null, __jsx(\"div\", null, nickname), __jsx(\"div\", null, MyUserId && userId !== MyUserId && __jsx(FollowButton, {\n    userId: userId,\n    isFollowing: isFollowing\n  }))), __jsx(Column, null, __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD3EC\\uC2A4\\uD2B8: \", posts.length), __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD314\\uB85C\\uC6CC: \", followedBy.length), __jsx(\"span\", {\n    className: \"info\"\n  }, \"\\uD314\\uB85C\\uC789: \", following.length)));\n};\n\n_s(HoverUser, \"/MHDnW8zT39ZMjamOgzjtxHQVis=\", false, function () {\n  return [useVssState, useQuery];\n});\n\n_c5 = HoverUser;\nexport default HoverUser;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Loading\");\n$RefreshReg$(_c3, \"Background\");\n$RefreshReg$(_c4, \"Column\");\n$RefreshReg$(_c5, \"HoverUser\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/user/HoverUser.tsx"],"names":["React","styled","useQuery","userQuery","useVssState","FollowButton","Container","div","props","theme","whiteBox","Loading","Background","img","Column","HoverUser","userId","MyUserId","variables","fetchPolicy","data","loading","getUser","nickname","avatar","followedBy","following","posts","isFollowing","some","v","id","console","log","url","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wIACX,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CADM,CAAf;KAAMJ,S;AAaN,IAAMK,OAAO,GAAGV,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,gLACT,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CADI,CAAb;MAAMC,O;AAeN,IAAMC,UAAU,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,gCAAhB;MAAMD,U;AAKN,IAAME,MAAM,GAAGb,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,kMAAZ;MAAMO,M;;AAuBN,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,qBACdZ,WAAW,EADG;AAAA,MAC3Ba,QAD2B,gBACnCD,MADmC;;AAAA,kBAEjBd,QAAQ,CAACC,SAAD,EAAY;AAC5Ce,IAAAA,SAAS,EAAE;AACTF,MAAAA,MAAM,EAANA;AADS,KADiC;AAI5CG,IAAAA,WAAW,EAAE;AAJ+B,GAAZ,CAFS;AAAA,MAEnCC,IAFmC,aAEnCA,IAFmC;AAAA,MAE7BC,OAF6B,aAE7BA,OAF6B;;AAS3C,MAAIA,OAAJ,EAAa;AACX,WAAO,MAAC,OAAD,mDAAP;AACD;;AAX0C,sBAYgBD,IAAI,CAACE,OAZrB;AAAA,MAYnCC,QAZmC,iBAYnCA,QAZmC;AAAA,MAYzBC,MAZyB,iBAYzBA,MAZyB;AAAA,MAYjBC,UAZiB,iBAYjBA,UAZiB;AAAA,MAYLC,SAZK,iBAYLA,SAZK;AAAA,MAYMC,KAZN,iBAYMA,KAZN;AAa3C,MAAMC,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgB,UAACC,CAAD;AAAA,WAAYA,CAAC,CAACC,EAAF,KAASd,QAArB;AAAA,GAAhB,CAApB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACA,SACE,MAAC,SAAD,QACE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEO,MAAM,CAACU;AAAxB,IADF,EAEE,MAAC,MAAD,QACE,mBAAMX,QAAN,CADF,EAEE,mBACGN,QAAQ,IAAID,MAAM,KAAKC,QAAvB,IACC,MAAC,YAAD;AAAc,IAAA,MAAM,EAAED,MAAtB;AAA8B,IAAA,WAAW,EAAEY;AAA3C,IAFJ,CAFF,CAFF,EAUE,MAAC,MAAD,QACE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BD,KAAK,CAACQ,MAAnC,CADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BV,UAAU,CAACU,MAAxC,CAFF,EAGE;AAAM,IAAA,SAAS,EAAC;AAAhB,6BAA6BT,SAAS,CAACS,MAAvC,CAHF,CAVF,CADF;AAkBD,CAlCD;;GAAMpB,S;UACyBX,W,EACHF,Q;;;MAFtBa,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { userQuery } from \"../../graphql/user/query\";\nimport { useVssState } from \"../../context\";\nimport FollowButton from \"../common/FollowButton\";\n\nconst Container = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  top: 35px;\n  left: 0;\n  width: 240px;\n  height: 220px;\n  z-index: 100;\n`;\n\nconst Loading = styled.div`\n  ${props => props.theme.whiteBox};\n  position: absolute;\n  overflow: hidden;\n  display: flex;\n  justfiy-content: flex-start;\n  align-items: center;\n  text-indent: 10px;\n  top: 35px;\n  left: 0;\n  width: 240px;\n  height: 50px;\n  z-index: 100;\n`;\n\nconst Background = styled.img`\n  width: 100%;\n  height: 150px;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  padding: 5px;\n  justify-content: space-between;\n  align-items: center;\n  height: 60px;\n\n  & > div {\n    width: 70px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .info {\n    font-size: 12px;\n  }\n`;\n\ninterface Props {\n  userId: string;\n}\n\nconst HoverUser: FC<Props> = ({ userId }) => {\n  const { userId: MyUserId } = useVssState();\n  const { data, loading } = useQuery(userQuery, {\n    variables: {\n      userId\n    },\n    fetchPolicy: \"network-only\"\n  });\n\n  if (loading) {\n    return <Loading>로딩 중입니다...</Loading>;\n  }\n  const { nickname, avatar, followedBy, following, posts } = data.getUser;\n  const isFollowing = followedBy.some((v: any) => v.id === MyUserId);\n  console.log(userId);\n  console.log(MyUserId);\n  return (\n    <Container>\n      <Background src={avatar.url} />\n      <Column>\n        <div>{nickname}</div>\n        <div>\n          {MyUserId && userId !== MyUserId && (\n            <FollowButton userId={userId} isFollowing={isFollowing} />\n          )}\n        </div>\n      </Column>\n      <Column>\n        <span className=\"info\">포스트: {posts.length}</span>\n        <span className=\"info\">팔로워: {followedBy.length}</span>\n        <span className=\"info\">팔로잉: {following.length}</span>\n      </Column>\n    </Container>\n  );\n};\n\nexport default HoverUser;\n"]},"metadata":{},"sourceType":"module"}