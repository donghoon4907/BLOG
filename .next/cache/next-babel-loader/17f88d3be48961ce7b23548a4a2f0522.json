{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/idonghun/Desktop/vss/frontend/components/search/SearchPostContainer.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, Fragment } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport SearchPostPresenter from \"./SearchPostPresenter\";\nimport { postsQuery } from \"../../graphql/post/query\";\n\nvar SearchPostContainer = function SearchPostContainer() {\n  _s();\n\n  var router = useRouter();\n  var _ref = router.query,\n      keyword = _ref.keyword,\n      sort = _ref.sort;\n\n  var _useQuery = useQuery(postsQuery, {\n    variables: {\n      searchKeyword: decodeURIComponent(keyword),\n      sort: sort,\n      first: 10\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus,\n      refetch = _useQuery.refetch;\n\n  var loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  var handleScrollFetchMore = function handleScrollFetchMore() {\n    if (loading) return;\n    var _document$documentEle = document.documentElement,\n        scrollHeight = _document$documentEle.scrollHeight,\n        clientHeight = _document$documentEle.clientHeight,\n        scrollTop = _document$documentEle.scrollTop;\n\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScrollFetchMore);\n    };\n  }, [data && data.getPosts, loading]);\n\n  if (!data && loading) {\n    return __jsx(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(SearchPostPresenter, {\n    loading: loading,\n    loadingMorePosts: loadingMorePosts,\n    posts: data.getPosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(SearchPostContainer, \"91e2BMgEoaCVZCPZjL6oyDsqoBA=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SearchPostContainer;\nexport default SearchPostContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPostContainer\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/components/search/SearchPostContainer.tsx"],"names":["useRouter","React","useEffect","Fragment","useQuery","NetworkStatus","SearchPostPresenter","postsQuery","SearchPostContainer","router","query","keyword","sort","variables","searchKeyword","decodeURIComponent","first","notifyOnNetworkStatusChange","data","loading","fetchMore","networkStatus","refetch","loadingMorePosts","handleScrollFetchMore","document","documentElement","scrollHeight","clientHeight","scrollTop","getPosts","length","skip","window","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,gBAAxC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,mBAAuB,GAAG,SAA1BA,mBAA0B,GAAM;AAAA;;AACpC,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AADoC,aAGVS,MAAM,CAACC,KAHG;AAAA,MAG5BC,OAH4B,QAG5BA,OAH4B;AAAA,MAGnBC,IAHmB,QAGnBA,IAHmB;;AAAA,kBAKyBR,QAAQ,CACnEG,UADmE,EAEnE;AACEM,IAAAA,SAAS,EAAE;AACTC,MAAAA,aAAa,EAAEC,kBAAkB,CAACJ,OAAD,CADxB;AAETC,MAAAA,IAAI,EAAJA,IAFS;AAGTI,MAAAA,KAAK,EAAE;AAHE,KADb;AAMEC,IAAAA,2BAA2B,EAAE;AAN/B,GAFmE,CALjC;AAAA,MAK5BC,IAL4B,aAK5BA,IAL4B;AAAA,MAKtBC,OALsB,aAKtBA,OALsB;AAAA,MAKbC,SALa,aAKbA,SALa;AAAA,MAKFC,aALE,aAKFA,aALE;AAAA,MAKaC,OALb,aAKaA,OALb;;AAiBpC,MAAMC,gBAAgB,GAAGF,aAAa,KAAKhB,aAAa,CAACe,SAAzD;;AAEA,MAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAIL,OAAJ,EAAa;AADqB,gCAEgBM,QAAQ,CAACC,eAFzB;AAAA,QAE1BC,YAF0B,yBAE1BA,YAF0B;AAAA,QAEZC,YAFY,yBAEZA,YAFY;AAAA,QAEEC,SAFF,yBAEEA,SAFF;;AAGlC,QAAIX,IAAI,CAACY,QAAT,EAAmB;AACjB,UAAID,SAAS,GAAGD,YAAZ,KAA6BD,YAAjC,EAA+C;AAC7C,YAAIT,IAAI,CAACY,QAAL,CAAcC,MAAd,GAAuB,EAAvB,KAA8B,CAAlC,EAAqC;AACnCX,UAAAA,SAAS,CAAC;AACRP,YAAAA,SAAS,EAAE;AACTmB,cAAAA,IAAI,EAAEd,IAAI,CAACY,QAAL,CAAcC;AADX;AADH,WAAD,CAAT;AAKD;AACF;AACF;AACF,GAdD;;AAgBA7B,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCV,qBAAlC;AACA,WAAO;AAAA,aAAMS,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCX,qBAArC,CAAN;AAAA,KAAP;AACD,GAHQ,EAGN,CAACN,IAAI,IAAIA,IAAI,CAACY,QAAd,EAAwBX,OAAxB,CAHM,CAAT;;AAKA,MAAI,CAACD,IAAD,IAASC,OAAb,EAAsB;AACpB,WAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,mBAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,gBAAgB,EAAEI,gBAFpB;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACY,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAnDD;;GAAMtB,mB;UACWR,S,EAI8CI,Q;;;KALzDI,mB;AAqDN,eAAeA,mBAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { useEffect, FC, Fragment } from \"react\";\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\nimport SearchPostPresenter from \"./SearchPostPresenter\";\nimport { postsQuery } from \"../../graphql/post/query\";\n\nconst SearchPostContainer: FC = () => {\n  const router = useRouter();\n\n  const { keyword, sort } = router.query as any;\n\n  const { data, loading, fetchMore, networkStatus, refetch } = useQuery(\n    postsQuery,\n    {\n      variables: {\n        searchKeyword: decodeURIComponent(keyword),\n        sort,\n        first: 10\n      },\n      notifyOnNetworkStatusChange: true\n    }\n  );\n\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const handleScrollFetchMore = () => {\n    if (loading) return;\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n    if (data.getPosts) {\n      if (scrollTop + clientHeight === scrollHeight) {\n        if (data.getPosts.length % 10 === 0) {\n          fetchMore({\n            variables: {\n              skip: data.getPosts.length\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollFetchMore);\n    return () => window.removeEventListener(\"scroll\", handleScrollFetchMore);\n  }, [data && data.getPosts, loading]);\n\n  if (!data && loading) {\n    return <Fragment />;\n  }\n\n  return (\n    <SearchPostPresenter\n      loading={loading}\n      loadingMorePosts={loadingMorePosts}\n      posts={data.getPosts}\n    />\n  );\n};\n\nexport default SearchPostContainer;\n"]},"metadata":{},"sourceType":"module"}