{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssState, useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchUser from \"../components/search/SearchUserContainer\";\nimport SearchPost from \"../components/search/SearchPostContainer\";\nimport SetPostModal from \"../components/modal/SetPostContainer\";\nimport AuthModal from \"../components/modal/Auth\";\n\nvar Search = function Search() {\n  _s();\n\n  var _useVssState = useVssState(),\n      isShowLoginModal = _useVssState.isShowLoginModal,\n      isShowAddPostModal = _useVssState.isShowAddPostModal;\n\n  var dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    ssr: false,\n    onCompleted: function onCompleted(_ref) {\n      var getMyProfile = _ref.getMyProfile;\n      var id = getMyProfile.id,\n          nickname = getMyProfile.nickname,\n          email = getMyProfile.email,\n          avatar = getMyProfile.avatar,\n          isMaster = getMyProfile.isMaster;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname: nickname,\n        email: email,\n        avatar: avatar,\n        isMaster: isMaster\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"\\uAC80\\uC0C9\\uACB0\\uACFC\"\n  }, __jsx(Section, null, __jsx(SearchUser, null), __jsx(SearchPost, null), isShowAddPostModal && __jsx(SetPostModal, null), isShowLoginModal && __jsx(AuthModal, null)));\n};\n\n_s(Search, \"9PtFGZ5smuadS+dOvbnxkjKSCxs=\", false, function () {\n  return [useVssState, useVssDispatch, useQuery];\n});\n\n_c = Search;\nexport var __N_SSP = true;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/idonghun/Desktop/vss/frontend/pages/search.tsx"],"names":["React","useQuery","meQuery","useVssState","useVssDispatch","SET_ME","Layout","Section","SearchUser","SearchPost","SetPostModal","AuthModal","Search","isShowLoginModal","isShowAddPostModal","dispatch","ssr","onCompleted","getMyProfile","id","nickname","email","avatar","isMaster","type","userId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,MAAtC,QAAoD,YAApD;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,GAAM;AAAA;;AAAA,qBACoBT,WAAW,EAD/B;AAAA,MACrBU,gBADqB,gBACrBA,gBADqB;AAAA,MACHC,kBADG,gBACHA,kBADG;;AAE7B,MAAMC,QAAQ,GAAGX,cAAc,EAA/B;AACAH,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChBc,IAAAA,GAAG,EAAE,KADW;AAEhBC,IAAAA,WAAW,EAAE,2BAAsB;AAAA,UAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,UACzBC,EADyB,GACiBD,YADjB,CACzBC,EADyB;AAAA,UACrBC,QADqB,GACiBF,YADjB,CACrBE,QADqB;AAAA,UACXC,KADW,GACiBH,YADjB,CACXG,KADW;AAAA,UACJC,MADI,GACiBJ,YADjB,CACJI,MADI;AAAA,UACIC,QADJ,GACiBL,YADjB,CACIK,QADJ;AAEjCR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEnB,MADC;AAEPoB,QAAAA,MAAM,EAAEN,EAFD;AAGPC,QAAAA,QAAQ,EAARA,QAHO;AAIPC,QAAAA,KAAK,EAALA,KAJO;AAKPC,QAAAA,MAAM,EAANA,MALO;AAMPC,QAAAA,QAAQ,EAARA;AANO,OAAD,CAAR;AAQD;AAZe,GAAV,CAAR;AAcA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,KACE,MAAC,OAAD,QACE,MAAC,UAAD,OADF,EAEE,MAAC,UAAD,OAFF,EAGGT,kBAAkB,IAAI,MAAC,YAAD,OAHzB,EAIGD,gBAAgB,IAAI,MAAC,SAAD,OAJvB,CADF,CADF;AAUD,CA3BD;;GAAMD,M;UAC6CT,W,EAChCC,c,EACjBH,Q;;;KAHIW,M;;AAgDN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apollo\";\nimport { searchQuery } from \"../graphql/page/query/search\";\nimport { meQuery } from \"../graphql/auth/query/me\";\nimport { useVssState, useVssDispatch, SET_ME } from \"../context\";\nimport Layout from \"../components/common/Layout\";\nimport Section from \"../components/common/Section\";\nimport SearchUser from \"../components/search/SearchUserContainer\";\nimport SearchPost from \"../components/search/SearchPostContainer\";\nimport SetPostModal from \"../components/modal/SetPostContainer\";\nimport AuthModal from \"../components/modal/Auth\";\n\nconst Search: NextPage = () => {\n  const { isShowLoginModal, isShowAddPostModal } = useVssState();\n  const dispatch = useVssDispatch();\n  useQuery(meQuery, {\n    ssr: false,\n    onCompleted: ({ getMyProfile }) => {\n      const { id, nickname, email, avatar, isMaster } = getMyProfile;\n      dispatch({\n        type: SET_ME,\n        userId: id,\n        nickname,\n        email,\n        avatar,\n        isMaster\n      });\n    }\n  });\n  return (\n    <Layout title=\"검색결과\">\n      <Section>\n        <SearchUser />\n        <SearchPost />\n        {isShowAddPostModal && <SetPostModal />}\n        {isShowLoginModal && <AuthModal />}\n      </Section>\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async ({ query }) => {\n  const { keyword, orderBy = \"createdAt_DESC\" } = query;\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: searchQuery,\n    variables: {\n      first: 10,\n      keyword,\n      orderBy\n    }\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    }\n  };\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}